{"version":3,"file":"9363.3c1d2d3d544f7a8ac367.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./node_modules/@fortawesome/free-brands-svg-icons/faLinux.js","webpack://tgstation-server-control-panel/./node_modules/@fortawesome/free-brands-svg-icons/faWindows.js","webpack://tgstation-server-control-panel/./src/components/utils/JsonViewer.tsx","webpack://tgstation-server-control-panel/./src/components/views/Administration.tsx"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fab';\nvar iconName = 'linux';\nvar width = 448;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f17c';\nvar svgPathData = 'M220.8 123.3c1 .5 1.8 1.7 3 1.7 1.1 0 2.8-.4 2.9-1.5.2-1.4-1.9-2.3-3.2-2.9-1.7-.7-3.9-1-5.5-.1-.4.2-.8.7-.6 1.1.3 1.3 2.3 1.1 3.4 1.7zm-21.9 1.7c1.2 0 2-1.2 3-1.7 1.1-.6 3.1-.4 3.5-1.6.2-.4-.2-.9-.6-1.1-1.6-.9-3.8-.6-5.5.1-1.3.6-3.4 1.5-3.2 2.9.1 1 1.8 1.5 2.8 1.4zM420 403.8c-3.6-4-5.3-11.6-7.2-19.7-1.8-8.1-3.9-16.8-10.5-22.4-1.3-1.1-2.6-2.1-4-2.9-1.3-.8-2.7-1.5-4.1-2 9.2-27.3 5.6-54.5-3.7-79.1-11.4-30.1-31.3-56.4-46.5-74.4-17.1-21.5-33.7-41.9-33.4-72C311.1 85.4 315.7.1 234.8 0 132.4-.2 158 103.4 156.9 135.2c-1.7 23.4-6.4 41.8-22.5 64.7-18.9 22.5-45.5 58.8-58.1 96.7-6 17.9-8.8 36.1-6.2 53.3-6.5 5.8-11.4 14.7-16.6 20.2-4.2 4.3-10.3 5.9-17 8.3s-14 6-18.5 14.5c-2.1 3.9-2.8 8.1-2.8 12.4 0 3.9.6 7.9 1.2 11.8 1.2 8.1 2.5 15.7.8 20.8-5.2 14.4-5.9 24.4-2.2 31.7 3.8 7.3 11.4 10.5 20.1 12.3 17.3 3.6 40.8 2.7 59.3 12.5 19.8 10.4 39.9 14.1 55.9 10.4 11.6-2.6 21.1-9.6 25.9-20.2 12.5-.1 26.3-5.4 48.3-6.6 14.9-1.2 33.6 5.3 55.1 4.1.6 2.3 1.4 4.6 2.5 6.7v.1c8.3 16.7 23.8 24.3 40.3 23 16.6-1.3 34.1-11 48.3-27.9 13.6-16.4 36-23.2 50.9-32.2 7.4-4.5 13.4-10.1 13.9-18.3.4-8.2-4.4-17.3-15.5-29.7zM223.7 87.3c9.8-22.2 34.2-21.8 44-.4 6.5 14.2 3.6 30.9-4.3 40.4-1.6-.8-5.9-2.6-12.6-4.9 1.1-1.2 3.1-2.7 3.9-4.6 4.8-11.8-.2-27-9.1-27.3-7.3-.5-13.9 10.8-11.8 23-4.1-2-9.4-3.5-13-4.4-1-6.9-.3-14.6 2.9-21.8zM183 75.8c10.1 0 20.8 14.2 19.1 33.5-3.5 1-7.1 2.5-10.2 4.6 1.2-8.9-3.3-20.1-9.6-19.6-8.4.7-9.8 21.2-1.8 28.1 1 .8 1.9-.2-5.9 5.5-15.6-14.6-10.5-52.1 8.4-52.1zm-13.6 60.7c6.2-4.6 13.6-10 14.1-10.5 4.7-4.4 13.5-14.2 27.9-14.2 7.1 0 15.6 2.3 25.9 8.9 6.3 4.1 11.3 4.4 22.6 9.3 8.4 3.5 13.7 9.7 10.5 18.2-2.6 7.1-11 14.4-22.7 18.1-11.1 3.6-19.8 16-38.2 14.9-3.9-.2-7-1-9.6-2.1-8-3.5-12.2-10.4-20-15-8.6-4.8-13.2-10.4-14.7-15.3-1.4-4.9 0-9 4.2-12.3zm3.3 334c-2.7 35.1-43.9 34.4-75.3 18-29.9-15.8-68.6-6.5-76.5-21.9-2.4-4.7-2.4-12.7 2.6-26.4v-.2c2.4-7.6.6-16-.6-23.9-1.2-7.8-1.8-15 .9-20 3.5-6.7 8.5-9.1 14.8-11.3 10.3-3.7 11.8-3.4 19.6-9.9 5.5-5.7 9.5-12.9 14.3-18 5.1-5.5 10-8.1 17.7-6.9 8.1 1.2 15.1 6.8 21.9 16l19.6 35.6c9.5 19.9 43.1 48.4 41 68.9zm-1.4-25.9c-4.1-6.6-9.6-13.6-14.4-19.6 7.1 0 14.2-2.2 16.7-8.9 2.3-6.2 0-14.9-7.4-24.9-13.5-18.2-38.3-32.5-38.3-32.5-13.5-8.4-21.1-18.7-24.6-29.9s-3-23.3-.3-35.2c5.2-22.9 18.6-45.2 27.2-59.2 2.3-1.7.8 3.2-8.7 20.8-8.5 16.1-24.4 53.3-2.6 82.4.6-20.7 5.5-41.8 13.8-61.5 12-27.4 37.3-74.9 39.3-112.7 1.1.8 4.6 3.2 6.2 4.1 4.6 2.7 8.1 6.7 12.6 10.3 12.4 10 28.5 9.2 42.4 1.2 6.2-3.5 11.2-7.5 15.9-9 9.9-3.1 17.8-8.6 22.3-15 7.7 30.4 25.7 74.3 37.2 95.7 6.1 11.4 18.3 35.5 23.6 64.6 3.3-.1 7 .4 10.9 1.4 13.8-35.7-11.7-74.2-23.3-84.9-4.7-4.6-4.9-6.6-2.6-6.5 12.6 11.2 29.2 33.7 35.2 59 2.8 11.6 3.3 23.7.4 35.7 16.4 6.8 35.9 17.9 30.7 34.8-2.2-.1-3.2 0-4.2 0 3.2-10.1-3.9-17.6-22.8-26.1-19.6-8.6-36-8.6-38.3 12.5-12.1 4.2-18.3 14.7-21.4 27.3-2.8 11.2-3.6 24.7-4.4 39.9-.5 7.7-3.6 18-6.8 29-32.1 22.9-76.7 32.9-114.3 7.2zm257.4-11.5c-.9 16.8-41.2 19.9-63.2 46.5-13.2 15.7-29.4 24.4-43.6 25.5s-26.5-4.8-33.7-19.3c-4.7-11.1-2.4-23.1 1.1-36.3 3.7-14.2 9.2-28.8 9.9-40.6.8-15.2 1.7-28.5 4.2-38.7 2.6-10.3 6.6-17.2 13.7-21.1.3-.2.7-.3 1-.5.8 13.2 7.3 26.6 18.8 29.5 12.6 3.3 30.7-7.5 38.4-16.3 9-.3 15.7-.9 22.6 5.1 9.9 8.5 7.1 30.3 17.1 41.6 10.6 11.6 14 19.5 13.7 24.6zM173.3 148.7c2 1.9 4.7 4.5 8 7.1 6.6 5.2 15.8 10.6 27.3 10.6 11.6 0 22.5-5.9 31.8-10.8 4.9-2.6 10.9-7 14.8-10.4s5.9-6.3 3.1-6.6-2.6 2.6-6 5.1c-4.4 3.2-9.7 7.4-13.9 9.8-7.4 4.2-19.5 10.2-29.9 10.2s-18.7-4.8-24.9-9.7c-3.1-2.5-5.7-5-7.7-6.9-1.5-1.4-1.9-4.6-4.3-4.9-1.4-.1-1.8 3.7 1.7 6.5z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faLinux = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fab';\nvar iconName = 'windows';\nvar width = 448;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f17a';\nvar svgPathData = 'M0 93.7l183.6-25.3v177.4H0V93.7zm0 324.6l183.6 25.3V268.4H0v149.9zm203.8 28L448 480V268.4H203.8v177.9zm0-380.6v180.1H448V32L203.8 65.7z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faWindows = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","import React from \"react\";\nimport ReactJson from \"react-json-view\";\n\nimport configOptions from \"../../ApiClient/util/config\";\n\nexport default function JsonViewer(props: { obj: unknown }): JSX.Element {\n    return (\n        <ReactJson\n            src={props.obj as Record<string, unknown>}\n            name={\"JSON\"}\n            theme=\"tube\"\n            iconStyle=\"triangle\"\n            collapsed\n            displayDataTypes={false}\n        />\n    );\n}\n\nexport function DebugJsonViewer(props: { obj: unknown }): JSX.Element {\n    if (!configOptions.showjson.value) {\n        return <></>;\n    }\n    return (\n        <div className=\"text-left\">\n            <JsonViewer obj={props.obj} />\n        </div>\n    );\n}\n","import { faLinux } from \"@fortawesome/free-brands-svg-icons/faLinux\";\nimport { faWindows } from \"@fortawesome/free-brands-svg-icons/faWindows\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ReactNode } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\n\nimport AdminClient from \"../../ApiClient/AdminClient\";\nimport {\n    AdministrationResponse,\n    AdministrationRights\n} from \"../../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../ApiClient/models/InternalComms/InternalStatus\";\nimport { GeneralContext } from \"../../contexts/GeneralContext\";\nimport { resolvePermissionSet } from \"../../utils/misc\";\nimport { AppRoutes } from \"../../utils/routes\";\nimport ErrorAlert from \"../utils/ErrorAlert\";\nimport { DebugJsonViewer } from \"../utils/JsonViewer\";\nimport Loading from \"../utils/Loading\";\n\ninterface IProps extends RouteComponentProps {}\ninterface IState {\n    adminInfo?: AdministrationResponse;\n    error?: InternalError<ErrorCode>;\n    busy: boolean;\n    showRebootModal?: boolean;\n}\n\nclass Administration extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n\n    public constructor(props: IProps) {\n        super(props);\n        this.restart = this.restart.bind(this);\n\n        this.state = {\n            busy: false\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setState({\n            busy: true\n        });\n        const tasks = [];\n\n        console.time(\"DataLoad\");\n        tasks.push(this.loadAdminInfo());\n\n        await Promise.all(tasks);\n        console.timeEnd(\"DataLoad\");\n        this.setState({\n            busy: false\n        });\n    }\n\n    private async loadAdminInfo() {\n        console.time(\"AdminLoad\");\n        const response = await AdminClient.getAdminInfo();\n        switch (response.code) {\n            case StatusCode.ERROR: {\n                this.setState({\n                    error: response.error\n                });\n                break;\n            }\n            case StatusCode.OK: {\n                this.setState({\n                    adminInfo: response.payload\n                });\n                break;\n            }\n        }\n        console.timeEnd(\"AdminLoad\");\n    }\n\n    private async restart() {\n        this.setState({\n            showRebootModal: false,\n            busy: true\n        });\n        console.time(\"Reboot\");\n        const response = await AdminClient.restartServer();\n        switch (response.code) {\n            case StatusCode.ERROR: {\n                this.setState({\n                    error: response.error\n                });\n                break;\n            }\n            case StatusCode.OK: {\n                window.location.reload();\n            }\n        }\n        this.setState({\n            busy: false\n        });\n        console.timeEnd(\"Reboot\");\n    }\n\n    public render(): ReactNode {\n        if (this.state.busy) {\n            return <Loading text=\"loading.admin\" />;\n        }\n\n        const handleClose = () => this.setState({ showRebootModal: false });\n        const handleOpen = () => this.setState({ showRebootModal: true });\n\n        const canReboot = !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.RestartHost\n        );\n        const canUpdate = !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.ChangeVersion\n        );\n        const canLogs = !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.DownloadLogs\n        );\n\n        return (\n            <React.Fragment>\n                <DebugJsonViewer obj={this.state.adminInfo} />\n                <ErrorAlert\n                    error={this.state.error}\n                    onClose={() => this.setState({ error: undefined })}\n                />\n                <div className=\"text-center\">\n                    {this.state.adminInfo ? (\n                        <React.Fragment>\n                            <h3 className=\" text-secondary\">\n                                <FormattedMessage id=\"view.admin.hostos\" />\n                                <FontAwesomeIcon\n                                    fixedWidth\n                                    icon={this.context.serverInfo.windowsHost ? faWindows : faLinux}\n                                />\n                            </h3>\n                            <h5 className=\"text-secondary\">\n                                <FormattedMessage id=\"view.admin.remote\" />\n                                <a href={this.state.adminInfo.trackedRepositoryUrl}>\n                                    {this.state.adminInfo.trackedRepositoryUrl}\n                                </a>\n                            </h5>\n                            <h3 className=\"text-secondary\">\n                                <FormattedMessage id=\"view.admin.version.current\" />\n                                <span\n                                    className={\n                                        this.context.serverInfo.version <\n                                        this.state.adminInfo.latestVersion\n                                            ? \"text-danger\"\n                                            : \"\"\n                                    }>\n                                    {this.context.serverInfo.version}\n                                </span>\n                            </h3>\n                            <h3 className=\"text-secondary\">\n                                <FormattedMessage id=\"view.admin.version.latest\" />\n                                <span\n                                    className={\n                                        this.context.serverInfo.version <\n                                        this.state.adminInfo.latestVersion\n                                            ? \"text-danger\"\n                                            : \"\"\n                                    }>\n                                    {this.state.adminInfo.latestVersion}\n                                </span>\n                            </h3>\n                        </React.Fragment>\n                    ) : null}\n                    <hr />\n                    <Button\n                        className=\"mr-2\"\n                        variant=\"danger\"\n                        disabled={!canReboot}\n                        onClick={handleOpen}>\n                        <FormattedMessage id=\"view.admin.reboot.button\" />\n                    </Button>\n                    <Button\n                        className=\"mr-2\"\n                        variant=\"primary\"\n                        disabled={!canUpdate}\n                        onClick={() => {\n                            this.props.history.push(\n                                AppRoutes.admin_update.link ?? AppRoutes.admin_update.route\n                            );\n                        }}>\n                        <FormattedMessage id=\"view.admin.update.button\" />\n                    </Button>\n                    <Button\n                        variant=\"primary\"\n                        disabled={!canLogs}\n                        onClick={() => {\n                            this.props.history.push(\n                                AppRoutes.admin_logs.link ?? AppRoutes.admin_logs.route\n                            );\n                        }}>\n                        <FormattedMessage id=\"view.admin.logs.button\" />\n                    </Button>\n                    <Modal\n                        show={this.state.showRebootModal}\n                        onHide={handleClose}\n                        size=\"lg\"\n                        centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                <FormattedMessage id=\"view.admin.reboot.modal.title\" />\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <FormattedMessage id=\"view.admin.reboot.modal.body\" />\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button onClick={handleClose}>\n                                <FormattedMessage id=\"generic.close\" />\n                            </Button>\n                            <Button variant=\"danger\" onClick={this.restart}>\n                                <FormattedMessage id=\"view.admin.reboot.button\" />\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nAdministration.contextType = GeneralContext;\nexport default withRouter(Administration);\n"],"names":["iconName","ligatures","unicode","svgPathData","exports","prefix","icon","JsonViewer","props","src","obj","name","theme","iconStyle","collapsed","displayDataTypes","DebugJsonViewer","configOptions","className","Administration","React","constructor","super","this","restart","bind","state","busy","setState","tasks","console","time","push","loadAdminInfo","Promise","all","timeEnd","response","AdminClient","code","StatusCode","error","adminInfo","payload","showRebootModal","window","location","reload","render","text","handleClose","canReboot","resolvePermissionSet","context","user","administrationRights","AdministrationRights","canUpdate","canLogs","onClose","undefined","id","fixedWidth","serverInfo","windowsHost","faWindows","faLinux","href","trackedRepositoryUrl","version","latestVersion","variant","disabled","onClick","history","AppRoutes","show","onHide","size","centered","closeButton","contextType","GeneralContext","withRouter"],"sourceRoot":""}