{"version":3,"file":"9638.e18c836292a5354fa2b4.bundle.js","mappings":"2UAoBe,MAAMA,UAAaC,EAAAA,UAGvBC,YAAYC,GACfC,MAAMD,GACNE,KAAKC,UAAYD,KAAKC,UAAUC,KAAKF,MAErCA,KAAKG,MAAQ,CACTC,OAAQ,GACRC,mBAAmB,GAInBJ,UAAUG,GACdJ,KAAKM,UAASC,IACH,CACHH,OAAQA,EACRC,kBAAmBE,EAAUF,sBAKX,0BAC1BL,KAAKM,SAAS,CACVF,aAAcI,EAAAA,EAAAA,WAA0B,KAE5CA,EAAAA,EAAAA,GAAmB,aAAcR,KAAKC,iBAEhCQ,EAAAA,EAAAA,aACN,MAAMJ,EAAoBK,EAAAA,EAAAA,YAAiC,EAC3DV,KAAKM,UAASC,IACH,CACHH,OAAQG,EAAUH,OAClBC,kBAAmBA,MAKxBM,uBACHH,EAAAA,EAAAA,eAA+B,aAAcR,KAAKC,WAG/CW,SACH,OACI,gBAAC,WAAD,KACI,gBAAC,IAAD,CAAOC,UAAU,WAAWC,QAAQ,UAAUC,KAAMf,KAAKG,MAAME,mBAC3D,gBAAC,IAAD,CAAkBW,GAAG,6BAEzB,gBAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGP,UAAU,0BACtCb,KAAKG,MAAMC,OAAOiB,KAAIC,IAEnB,GAAKA,EAAIC,UAELD,IAAQE,EAAAA,GAAAA,KAEZ,OACI,gBAAC,IAAD,CAAKC,IAAKH,EAAII,MAAQJ,EAAIK,MAAOd,UAAU,aACvC,gBAAC,IAAD,CACIe,GAAIN,EAAIO,WAAaC,EAAAA,GAAO,MAE5BC,GAAIT,EAAII,MAAQJ,EAAIK,MACpBd,UAAY,kCACRS,EAAIO,WACE,eACA,iCAEV,gBAAC,SAAD,CACIG,MAAO,CACHC,OAAQ,UAEZ,gBAAC,IAAD,CACIC,YAAY,EACZC,KAAMb,EAAIC,SACVV,UAAU,gCAGlB,gBAAC,WAAD,CACIA,UAAY,iCACRS,EAAIO,WAAa,GAAK,4BAE1B,gBAAC,IAAD,CAAkBb,GAAIM,EAAIc,gBAhF7CzC,EACM0C,MAAgB,K,0FCnBvCC,EAAY,CAAC,WAAY,YAAa,YAAa,MAInDC,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,MAIxCC,EAAmB,cAAiB,SAAUC,EAAMC,GACtD,IAAIC,EAAWF,EAAKE,SAChB9B,EAAY4B,EAAK5B,UACjB+B,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKb,GACfkB,OAAwB,IAAZD,EAAqB,MAAQA,EACzC/C,GAAQ,OAA8B2C,EAAMH,GAE5CS,GAAoB,QAAmBJ,EAAU,OACjDK,EAAaD,EAAoB,QACjCE,EAAU,GAed,OAdAV,EAAaW,SAAQ,SAAUC,GAC7B,IAEIC,EAFAC,EAAYvD,EAAMqD,UACfrD,EAAMqD,GASb,IAAIG,EAAqB,OAAbH,EAAoB,IAAMA,EAAW,GACrC,OANVC,EADe,MAAbC,GAA0C,iBAAdA,EACvBA,EAAUD,KAEVC,IAISJ,EAAQM,KAAK,GAAKP,EAAaM,EAAQ,IAAMF,MAE7C,gBAAoBN,GAAW,OAAS,CAC1DJ,IAAKA,GACJ5C,EAAO,CACRe,UAAW,eAAiB,EAAQ,CAACA,EAAWkC,EAAmBH,GAAa,cAAcY,OAAOP,UAGzGT,EAAIiB,YAAc,MAClBjB,EAAIkB,aAnCe,CACjBd,WAAW,GAmCb","sources":["webpack://tgstation-server-control-panel/./src/components/views/Home.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as React from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\n\nimport ServerClient from \"../../ApiClient/ServerClient\";\nimport CredentialsProvider from \"../../ApiClient/util/CredentialsProvider\";\nimport RouteController from \"../../utils/RouteController\";\nimport { AppRoute, AppRoutes } from \"../../utils/routes\";\n\ninterface IProps {}\ninterface IState {\n    routes: Array<AppRoute>;\n    usingDefaultCreds: boolean;\n}\n\nexport default class Home extends React.Component<IProps, IState> {\n    public static readonly Route: string = \"/\";\n\n    public constructor(props: IProps) {\n        super(props);\n        this.setRoutes = this.setRoutes.bind(this);\n\n        this.state = {\n            routes: [],\n            usingDefaultCreds: false\n        };\n    }\n\n    private setRoutes(routes: AppRoute[]) {\n        this.setState(prevState => {\n            return {\n                routes: routes,\n                usingDefaultCreds: prevState.usingDefaultCreds\n            };\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setState({\n            routes: await RouteController.getRoutes(false)\n        });\n        RouteController.on(\"refreshAll\", this.setRoutes);\n\n        await ServerClient.wait4Token();\n        const usingDefaultCreds = CredentialsProvider.defaulted || false;\n        this.setState(prevState => {\n            return {\n                routes: prevState.routes,\n                usingDefaultCreds: usingDefaultCreds\n            };\n        });\n    }\n\n    public componentWillUnmount(): void {\n        RouteController.removeListener(\"refreshAll\", this.setRoutes);\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <React.Fragment>\n                <Alert className=\"clearfix\" variant=\"warning\" show={this.state.usingDefaultCreds}>\n                    <FormattedMessage id=\"error.app.default_creds\" />\n                </Alert>\n                <Row xs={1} sm={2} md={3} lg={4} className=\"justify-content-center\">\n                    {this.state.routes.map(val => {\n                        //this means it shouldnt be displayed on the home screen\n                        if (!val.homeIcon) return;\n\n                        if (val === AppRoutes.home) return;\n\n                        return (\n                            <Col key={val.link ?? val.route} className=\"mb-1 home\">\n                                <Card\n                                    as={val.cachedAuth ? Link : \"div\"}\n                                    //@ts-expect-error //dont really know how to fix this so uhhhhhhh, this will do for now\n                                    to={val.link ?? val.route}\n                                    className={`text-decoration-none m-1 h-75 ${\n                                        val.cachedAuth\n                                            ? \"text-primary\"\n                                            : \"text-danger d-sm-flex d-none\"\n                                    }`}>\n                                    <Card.Body\n                                        style={{\n                                            height: \"245px\"\n                                        }}>\n                                        <FontAwesomeIcon\n                                            fixedWidth={true}\n                                            icon={val.homeIcon}\n                                            className=\"d-block w-100 h-100 m-auto\"\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer\n                                        className={`text-center font-weight-bold ${\n                                            val.cachedAuth ? \"\" : \"text-danger font-italic\"\n                                        }`}>\n                                        <FormattedMessage id={val.name} />\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;"],"names":["Home","React","constructor","props","super","this","setRoutes","bind","state","routes","usingDefaultCreds","setState","prevState","RouteController","ServerClient","CredentialsProvider","componentWillUnmount","render","className","variant","show","id","xs","sm","md","lg","map","val","homeIcon","AppRoutes","key","link","route","as","cachedAuth","Link","to","style","height","fixedWidth","icon","name","Route","_excluded","DEVICE_SIZES","Row","_ref","ref","bsPrefix","noGutters","_ref$as","Component","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","concat","displayName","defaultProps"],"sourceRoot":""}