{"version":3,"file":"main.bab3fb347e42c038a16c.bundle.js","mappings":"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,GAAI,uDAAwD,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,4CAA4C,MAAQ,GAAG,SAAW,uBAAuB,eAAiB,CAAC,wDAAwD,WAAa,MAE5S,O,sBCPA,IAAImC,EAAM,CACT,eAAgB,CACf,MACA,IACA,KAED,mBAAoB,CACnB,MACA,IACA,KAED,iBAAkB,CACjB,MACA,IACA,IACA,EACA,IACA,KAED,qBAAsB,CACrB,MACA,IACA,IACA,EACA,IACA,KAED,mBAAoB,CACnB,MACA,IACA,KAED,uBAAwB,CACvB,MACA,IACA,KAED,mBAAoB,CACnB,MACA,KAED,uBAAwB,CACvB,MACA,KAED,kBAAmB,CAClB,MACA,KAED,sBAAuB,CACtB,MACA,KAED,SAAU,CACT,MACA,KAED,aAAc,CACb,MACA,KAED,SAAU,CACT,MACA,IACA,IAED,aAAc,CACb,MACA,IACA,IAED,oBAAqB,CACpB,MACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,KAED,wBAAyB,CACxB,MACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,KAED,2BAA4B,CAC3B,MACA,IACA,IACA,IACA,KAED,+BAAgC,CAC/B,MACA,IACA,IACA,IACA,KAED,yBAA0B,CACzB,MACA,IACA,KAED,6BAA8B,CAC7B,MACA,IACA,KAED,6BAA8B,CAC7B,MACA,IACA,IACA,IACA,IACA,IACA,GACA,KAED,iCAAkC,CACjC,MACA,IACA,IACA,IACA,IACA,IACA,GACA,KAED,yBAA0B,CACzB,MACA,IACA,IACA,IACA,IACA,KAED,6BAA8B,CAC7B,MACA,IACA,IACA,IACA,IACA,KAED,wBAAyB,CACxB,MACA,IACA,IACA,IACA,KAED,4BAA6B,CAC5B,MACA,IACA,IACA,IACA,KAED,sCAAuC,CACtC,MACA,IACA,IACA,IACA,KAED,0CAA2C,CAC1C,MACA,IACA,IACA,IACA,KAED,6BAA8B,CAC7B,MACA,IACA,KAED,iCAAkC,CACjC,MACA,IACA,KAED,6BAA8B,CAC7B,MACA,IACA,IACA,IACA,IACA,IACA,IACA,KAED,iCAAkC,CACjC,MACA,IACA,IACA,IACA,IACA,IACA,IACA,KAED,yBAA0B,CACzB,MACA,IACA,IACA,IACA,IACA,IACA,GACA,KAED,6BAA8B,CAC7B,MACA,IACA,IACA,IACA,IACA,IACA,GACA,KAED,0BAA2B,CAC1B,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,KAED,8BAA+B,CAC9B,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,KAED,kBAAmB,CAClB,MACA,KAED,sBAAuB,CACtB,MACA,KAED,kBAAmB,CAClB,MACA,IACA,KAED,sBAAuB,CACtB,MACA,IACA,KAED,UAAW,CACV,MAED,cAAe,CACd,MAED,UAAW,CACV,MACA,KAED,cAAe,CACd,MACA,KAED,gBAAiB,CAChB,MACA,KAED,oBAAqB,CACpB,MACA,KAED,cAAe,CACd,MACA,IACA,IACA,KAED,kBAAmB,CAClB,MACA,IACA,IACA,KAED,cAAe,CACd,KACA,IACA,KAED,kBAAmB,CAClB,KACA,IACA,MAGF,SAAS0gB,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE7gB,EAAK2gB,GAC9B,OAAOlT,QAAQC,UAAUyJ,MAAK,WAC7B,IAAIvK,EAAI,IAAIT,MAAM,uBAAyBwU,EAAM,KAEjD,MADA/T,EAAElO,KAAO,mBACHkO,KAIR,IAAIkU,EAAM9gB,EAAI2gB,GAAM9iB,EAAKijB,EAAI,GAC7B,OAAOrT,QAAQkO,IAAImF,EAAI/D,MAAM,GAAG/c,IAAI4gB,EAAoBhU,IAAIuK,MAAK,WAChE,OAAOyJ,EAAoB/iB,MAG7B6iB,EAAoB/U,KAAO,WAAa,OAAOD,OAAOC,KAAK3L,IAC3D0gB,EAAoB7iB,GAAK,MACzB4iB,EAAOM,QAAUL,G,oBChWjB,IAAI1gB,EAAM,CACT,YAAa,CACZ,KACA,MAGF,SAAS0gB,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE7gB,EAAK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","sources":["webpack://tgstation-server-control-panel/webpack/runtime/chunk loaded","webpack://tgstation-server-control-panel/webpack/runtime/create fake namespace object","webpack://tgstation-server-control-panel/webpack/runtime/load script","webpack://tgstation-server-control-panel/./src/components/utils/AccessDenied.tsx","webpack://tgstation-server-control-panel/./src/components/utils/ErrorAlert.tsx","webpack://tgstation-server-control-panel/./src/components/utils/GenericAlert.tsx","webpack://tgstation-server-control-panel/./src/components/utils/JobError.tsx","webpack://tgstation-server-control-panel/./src/components/utils/JobCard.tsx","webpack://tgstation-server-control-panel/./src/components/utils/JobsList.tsx","webpack://tgstation-server-control-panel/./src/components/utils/Loading.tsx","webpack://tgstation-server-control-panel/./src/components/views/Login.tsx","webpack://tgstation-server-control-panel/./src/contexts/GeneralContext.ts","webpack://tgstation-server-control-panel/./src/definitions/constants.ts","webpack://tgstation-server-control-panel/./src/publicPath.ts","webpack://tgstation-server-control-panel/./src/App.css?d9cd","webpack://tgstation-server-control-panel/./src/components/AppNavbar.css?eac7","webpack://tgstation-server-control-panel/./src/components/AppNavbar.tsx","webpack://tgstation-server-control-panel/./src/components/Logo.tsx","webpack://tgstation-server-control-panel/./src/components/ReportIssue.tsx","webpack://tgstation-server-control-panel/./src/components/utils/ErrorBoundary.tsx","webpack://tgstation-server-control-panel/./src/components/utils/Reload.tsx","webpack://tgstation-server-control-panel/./src/Router.tsx","webpack://tgstation-server-control-panel/./src/translations/Locales.ts","webpack://tgstation-server-control-panel/./src/translations/Translation.ts","webpack://tgstation-server-control-panel/./src/translations/TranslationFactory.ts","webpack://tgstation-server-control-panel/./src/App.tsx","webpack://tgstation-server-control-panel/./src/utils/icolibrary.ts","webpack://tgstation-server-control-panel/./src/index.ts","webpack://tgstation-server-control-panel/./src/utils/RouteController.ts","webpack://tgstation-server-control-panel/./src/utils/misc.ts","webpack://tgstation-server-control-panel/./src/utils/routes.ts","webpack://tgstation-server-control-panel/./src/App.css","webpack://tgstation-server-control-panel/./src/components/AppNavbar.css","webpack://tgstation-server-control-panel/./src/components/views/ lazy ^\\.\\/.*$ namespace object","webpack://tgstation-server-control-panel/./src/translations/locales/ lazy ^\\.\\/.*\\.json$ namespace object","webpack://tgstation-server-control-panel/webpack/bootstrap","webpack://tgstation-server-control-panel/webpack/runtime/compat get default export","webpack://tgstation-server-control-panel/webpack/runtime/define property getters","webpack://tgstation-server-control-panel/webpack/runtime/ensure chunk","webpack://tgstation-server-control-panel/webpack/runtime/get javascript chunk filename","webpack://tgstation-server-control-panel/webpack/runtime/global","webpack://tgstation-server-control-panel/webpack/runtime/hasOwnProperty shorthand","webpack://tgstation-server-control-panel/webpack/runtime/make namespace object","webpack://tgstation-server-control-panel/webpack/runtime/publicPath","webpack://tgstation-server-control-panel/webpack/runtime/jsonp chunk loading","webpack://tgstation-server-control-panel/webpack/runtime/nonce","webpack://tgstation-server-control-panel/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"tgstation-server-control-panel:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 15;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 15000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import React, { ReactNode } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport GenericAlert from \"./GenericAlert\";\n\ninterface IProps extends RouteComponentProps {}\n\ninterface IState {\n    auth: boolean;\n}\n\nclass AccessDenied extends React.Component<IProps, IState> {\n    public render(): ReactNode {\n        const goBack = () => {\n            this.props.history.goBack();\n        };\n        return (\n            <GenericAlert title=\"generic.accessdenied\">\n                <Button variant=\"danger\" className=\"float-right\" onClick={goBack}>\n                    <FormattedMessage id=\"generic.goback\" />\n                </Button>\n            </GenericAlert>\n        );\n    }\n}\n\nexport default withRouter(AccessDenied);\n","import ClickToSelect from \"@mapbox/react-click-to-select\";\nimport React, { Component, ReactNode } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport InternalError, {\n    DescType,\n    ErrorCode\n} from \"../../ApiClient/models/InternalComms/InternalError\";\nimport { API_VERSION, MODE, VERSION } from \"../../definitions/constants\";\n\ninterface IProps {\n    error: InternalError<ErrorCode> | undefined;\n    onClose?: () => void;\n}\n\ninterface IState {\n    popup: boolean;\n}\n\nclass ErrorAlert extends Component<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n        this.state = {\n            popup: false\n        };\n    }\n    public render(): ReactNode {\n        if (!this.props.error) {\n            return \"\";\n        }\n\n        const handleClose = () => this.setState({ popup: false });\n        const handleOpen = () => this.setState({ popup: true });\n\n        return (\n            <Alert\n                className=\"clearfix\"\n                variant=\"error\"\n                dismissible={!!this.props.onClose}\n                onClose={this.props.onClose}>\n                <FormattedMessage id={this.props.error.code || \"error.app.undefined\"} />\n                <hr />\n\n                <Button variant=\"danger\" className=\"float-right\" onClick={handleOpen}>\n                    <FormattedMessage id=\"generic.details\" />\n                </Button>\n\n                <Modal centered show={this.state.popup} onHide={handleClose} size=\"lg\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <FormattedMessage id={this.props.error.code || \"error.app.undefined\"} />\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className=\"text-danger pb-0\">\n                        {this.props.error.desc?.type === DescType.LOCALE ? (\n                            <FormattedMessage\n                                id={this.props.error.desc.desc || \"error.api.empty\"}\n                            />\n                        ) : this.props.error.desc?.desc ? (\n                            this.props.error.desc.desc\n                        ) : (\n                            \"\"\n                        )}\n                        <hr />\n                        <ClickToSelect>\n                            <code className=\"bg-darker d-block pre-wrap p-2 pre-scrollable\">\n                                {`Webpanel Version: ${VERSION}\nWebpanel Mode: ${MODE}\nAPI Version: ${API_VERSION}\n\nError Code: ${this.props.error.code}\nError Description: ${this.props.error.desc ? this.props.error.desc.desc : \"No description\"}\n\nAdditional Information:\n${this.props.error.extendedInfo}`.replace(/\\\\/g, \"\\\\\\\\\")}\n                            </code>\n                        </ClickToSelect>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <span className=\"font-italic mr-auto\">\n                            <FormattedMessage id=\"generic.debugwarn\" />\n                        </span>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            <FormattedMessage id=\"generic.close\" />\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Alert>\n        );\n    }\n}\n\nexport default ErrorAlert;\n\nexport type ErrorState = [\n    Array<InternalError<ErrorCode> | undefined>,\n    React.Dispatch<React.SetStateAction<Array<InternalError<ErrorCode> | undefined>>>\n];\n\nfunction addError([, setErrors]: ErrorState, error: InternalError<ErrorCode>): void {\n    setErrors(prevState => {\n        const errors = Array.from(prevState);\n        errors.push(error);\n        return errors;\n    });\n}\n\nfunction displayErrors([errors, setErrors]: ErrorState): Array<JSX.Element | undefined> {\n    return errors.map((err, index) => {\n        if (!err) return;\n        return (\n            <ErrorAlert\n                key={index}\n                error={err}\n                onClose={() =>\n                    setErrors(prev => {\n                        const newarr = Array.from(prev);\n                        newarr[index] = undefined;\n                        return newarr;\n                    })\n                }\n            />\n        );\n    });\n}\n\nexport { displayErrors, addError };\n","import React from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { FormattedMessage } from \"react-intl\";\n\ninterface IProps {\n    title: string;\n    body?: string;\n    children?: JSX.Element;\n}\n\nexport default function GenericAlert(props: IProps): JSX.Element {\n    return (\n        <Alert className=\"clearfix\" variant=\"error\">\n            <FormattedMessage id={props.title} />\n            {props.body ? (\n                <React.Fragment>\n                    <hr />\n                    <FormattedMessage id={props.body} />\n                </React.Fragment>\n            ) : props.children ? (\n                <React.Fragment>\n                    <hr />\n                    {props.children}\n                </React.Fragment>\n            ) : null}\n        </Alert>\n    );\n}\n","import ClickToSelect from \"@mapbox/react-click-to-select\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { ErrorCode as TGSErrorCode } from \"../../ApiClient/generatedcode/generated\";\nimport { TGSJobResponse } from \"../../ApiClient/JobsClient\";\n\ninterface IProps {\n    job: TGSJobResponse;\n}\n\nexport default function JobError(props: IProps): JSX.Element {\n    const [open, setOpen] = useState(false);\n    return (\n        <>\n            <Button\n                variant=\"danger\"\n                className=\"d-inline-block\"\n                onClick={() => setOpen(true)}\n                size=\"sm\">\n                <FormattedMessage\n                    id=\"generic.errordetails\"\n                    values={{\n                        info:\n                            props.job.errorCode !== undefined && props.job.errorCode !== null\n                                ? TGSErrorCode[props.job.errorCode]\n                                : \"NoCode\"\n                    }}\n                />\n            </Button>\n\n            <Modal centered show={open} onHide={() => setOpen(false)} size=\"lg\">\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <FormattedMessage id={props.job.description} />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"text-danger pb-0\">\n                    <FormattedMessage id=\"view.instance.jobs.error\" />:{\" \"}\n                    {props.job.errorCode !== undefined && props.job.errorCode !== null\n                        ? TGSErrorCode[props.job.errorCode]\n                        : \"NoCode\"}\n                    <hr />\n                    <ClickToSelect>\n                        <code className=\"bg-darker d-block pre-wrap p-2 pre-scrollable\">\n                            {props.job.exceptionDetails}\n                        </code>\n                    </ClickToSelect>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setOpen(false)}>\n                        <FormattedMessage id=\"generic.close\" />\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ReactNode } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Toast from \"react-bootstrap/Toast\";\nimport ToastBody from \"react-bootstrap/ToastBody\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage, FormattedRelativeTime } from \"react-intl\";\n\nimport { TGSJobResponse } from \"../../ApiClient/JobsClient\";\nimport JobError from \"./JobError\";\n\ninterface IState {}\ninterface IProps {\n    job: TGSJobResponse;\n    width?: string;\n    onClose?: (job: TGSJobResponse) => void;\n    onCancel: (job: TGSJobResponse) => void;\n}\n\nexport default class JobCard extends React.Component<IProps, IState> {\n    public render(): ReactNode {\n        const job = this.props.job;\n        const createddate = new Date(job.startedAt);\n        const createddiff = (createddate.getTime() - Date.now()) / 1000;\n        const stoppeddate = new Date(job.stoppedAt ?? 0);\n        const stoppeddiff = (stoppeddate.getTime() - Date.now()) / 1000;\n        const variant =\n            job.errorCode !== undefined || job.exceptionDetails !== undefined\n                ? \"danger\"\n                : job.cancelled\n                ? \"warning\"\n                : job.stoppedAt\n                ? \"success\"\n                : \"info\";\n\n        return (\n            <Toast\n                className=\"mx-auto\"\n                key={job.id}\n                style={{\n                    maxWidth: this.props.width\n                }}\n                onClose={() => {\n                    if (this.props.onClose) this.props.onClose(job);\n                }}>\n                <ToastHeader\n                    closeButton={!!job.stoppedAt && !!this.props.onClose}\n                    className={`bg-${variant}`}>\n                    #{job.id}: {job.description}\n                </ToastHeader>\n                <ToastBody className=\"pt-1 text-white\">\n                    {/*STAGE*/}\n                    {job.stage ? <div className=\"mb-2\">▶{job.stage}</div> : null}\n                    {/*STARTED AT*/}\n                    <FormattedMessage id=\"app.job.started\" />\n                    <OverlayTrigger\n                        overlay={\n                            <Tooltip id={`${job.id}-tooltip-started`}>\n                                {createddate.toLocaleString()}\n                            </Tooltip>\n                        }>\n                        {({ ref, ...triggerHandler }) => (\n                            <span {...triggerHandler} ref={ref as React.Ref<HTMLSpanElement>}>\n                                <FormattedRelativeTime\n                                    value={createddiff}\n                                    numeric=\"auto\"\n                                    updateIntervalInSeconds={1}\n                                />\n                            </span>\n                        )}\n                    </OverlayTrigger>\n                    <br />\n\n                    {/*CREATED BY*/}\n                    <FormattedMessage id=\"app.job.startedby\" />\n                    <OverlayTrigger\n                        overlay={\n                            <Tooltip id={`${job.id}-tooltip-startedby`}>\n                                <FormattedMessage id=\"generic.userid\" />\n                                {job.startedBy.id}\n                            </Tooltip>\n                        }>\n                        {({ ref, ...triggerHandler }) => (\n                            <span ref={ref as React.Ref<HTMLSpanElement>} {...triggerHandler}>\n                                {job.startedBy.name}\n                            </span>\n                        )}\n                    </OverlayTrigger>\n                    <br />\n                    <br />\n                    {/*STOPPED AT*/}\n                    {job.stoppedAt ? (\n                        <React.Fragment>\n                            <FormattedMessage\n                                id={job.cancelled ? \"app.job.cancelled\" : \"app.job.completed\"}\n                            />\n                            <OverlayTrigger\n                                overlay={\n                                    <Tooltip id={`${job.id}-tooltip-stopped`}>\n                                        {createddate.toLocaleString()}\n                                    </Tooltip>\n                                }>\n                                {({ ref, ...triggerHandler }) => (\n                                    <span\n                                        {...triggerHandler}\n                                        ref={ref as React.Ref<HTMLSpanElement>}>\n                                        <FormattedRelativeTime\n                                            value={stoppeddiff}\n                                            numeric=\"auto\"\n                                            updateIntervalInSeconds={1}\n                                        />\n                                    </span>\n                                )}\n                            </OverlayTrigger>\n                            <br />\n                        </React.Fragment>\n                    ) : (\n                        \"\"\n                    )}\n                    {job.cancelledBy ? (\n                        <React.Fragment>\n                            <FormattedMessage id=\"app.job.cancelledby\" />\n                            <OverlayTrigger\n                                overlay={\n                                    <Tooltip id={`${job.id}-tooltip-createdby`}>\n                                        <FormattedMessage id=\"generic.userid\" />\n                                        {job.startedBy.id}\n                                    </Tooltip>\n                                }>\n                                {({ ref, ...triggerHandler }) => (\n                                    <span\n                                        ref={ref as React.Ref<HTMLSpanElement>}\n                                        {...triggerHandler}>\n                                        {job.cancelledBy!.name}\n                                    </span>\n                                )}\n                            </OverlayTrigger>\n                            <br />\n                        </React.Fragment>\n                    ) : (\n                        \"\"\n                    )}\n\n                    {/*ERROR*/}\n                    {job.errorCode !== undefined || job.exceptionDetails !== undefined ? (\n                        <JobError job={job} />\n                    ) : (\n                        \"\"\n                    )}\n\n                    {/* PROGRESS BAR */}\n                    {job.stoppedAt == undefined ? (\n                        <div className=\"d-flex mt-2\" style={{ height: \"1.5rem\" }}>\n                            <ProgressBar\n                                className=\"text-darker font-weight-bold flex-grow-1 h-unset\"\n                                animated={!job.stoppedAt}\n                                label={\n                                    typeof job.progress === \"number\"\n                                        ? `${job.progress.toString()}%`\n                                        : undefined\n                                }\n                                now={typeof job.progress === \"number\" ? job.progress : 100}\n                                striped\n                                variant={variant}\n                            />\n                            {job.canCancel && !job.stoppedAt ? (\n                                <Button\n                                    style={{ padding: \"0 1em\" }}\n                                    className=\"ml-1\"\n                                    variant=\"danger\"\n                                    onClick={() => this.props.onCancel(job)}>\n                                    <FontAwesomeIcon icon=\"times\" className=\"d-block\" />\n                                </Button>\n                            ) : null}\n                        </div>\n                    ) : (\n                        \"\"\n                    )}\n                </ToastBody>\n            </Toast>\n        );\n    }\n}\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ReactNode } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { OverlayInjectedProps } from \"react-bootstrap/Overlay\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Rnd } from \"react-rnd\";\n\nimport type { InstanceResponse } from \"../../ApiClient/generatedcode/generated\";\nimport { TGSJobResponse } from \"../../ApiClient/JobsClient\";\nimport InternalError, { ErrorCode } from \"../../ApiClient/models/InternalComms/InternalError\";\nimport configOptions, { jobsWidgetOptions } from \"../../ApiClient/util/config\";\nimport JobsController from \"../../ApiClient/util/JobsController\";\nimport ErrorAlert from \"./ErrorAlert\";\nimport JobCard from \"./JobCard\";\nimport Loading from \"./Loading\";\n\ninterface IProps {\n    width?: string;\n    widget: boolean;\n}\n\ninterface IState {\n    jobs: Map<number, Map<number, TGSJobResponse>>;\n    errors: InternalError<ErrorCode>[];\n    nextRetrySeconds: number | null;\n    ownerrors: Array<InternalError<ErrorCode> | undefined>;\n    loading: boolean;\n    instances: Map<number, InstanceResponse>;\n}\n\nexport default class JobsList extends React.Component<IProps, IState> {\n    public static defaultProps = {\n        widget: true\n    };\n\n    private widgetRef = React.createRef<HTMLDivElement>();\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.handleUpdate = this.handleUpdate.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.onClose = this.onClose.bind(this);\n\n        this.state = {\n            jobs: JobsController.jobsByInstance,\n            errors: [],\n            nextRetrySeconds: null,\n            ownerrors: [],\n            loading: true,\n            instances: new Map<number, InstanceResponse>()\n        };\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const ownerrors = Array.from(prevState.ownerrors);\n            ownerrors.push(error);\n            if (this.widgetRef.current) {\n                this.widgetRef.current.scrollTop = 0;\n            }\n            return {\n                ownerrors\n            };\n        });\n    }\n\n    public componentDidMount(): void {\n        JobsController.on(\"jobsLoaded\", this.handleUpdate);\n        this.handleUpdate();\n    }\n\n    public componentWillUnmount(): void {\n        JobsController.removeListener(\"jobsLoaded\", this.handleUpdate);\n    }\n\n    private currentTimeout?: NodeJS.Timeout | null;\n\n    public handleUpdate(): void {\n        if (this.currentTimeout) {\n            clearTimeout(this.currentTimeout);\n            this.currentTimeout = null;\n        }\n\n        let nextRetrySeconds;\n        if (JobsController.nextRetry) {\n            if (JobsController.nextRetry.getSeconds() > new Date().getSeconds()) {\n                nextRetrySeconds = JobsController.nextRetry.getSeconds() - new Date().getSeconds();\n            } else {\n                nextRetrySeconds = 0;\n            }\n            this.currentTimeout = setTimeout(() => this.handleUpdate(), 1000);\n        } else {\n            nextRetrySeconds = null;\n        }\n\n        this.setState({\n            jobs: JobsController.jobsByInstance,\n            errors: JobsController.errors,\n            nextRetrySeconds,\n            loading: false,\n            instances: JobsController.accessibleInstances\n        });\n    }\n\n    private async onCancel(job: TGSJobResponse) {\n        const status = await JobsController.cancelJob(job.id, error => this.addError(error));\n\n        if (!status) {\n            return;\n        }\n        JobsController.fastmode = 5;\n    }\n\n    private onClose(job: TGSJobResponse) {\n        JobsController.clearJob(job.id);\n    }\n\n    public render(): ReactNode {\n        if (!this.props.widget) return this.nested();\n\n        let totalJobs = 0;\n        for (const job of this.state.jobs.values()) {\n            totalJobs += job.size;\n        }\n\n        let display: boolean;\n        if (configOptions.jobswidgetdisplay.value === jobsWidgetOptions.NEVER) {\n            display = false;\n        } else if (configOptions.jobswidgetdisplay.value === jobsWidgetOptions.ALWAYS) {\n            display = true;\n        } else {\n            display = totalJobs > 0 || this.state.errors.length > 0;\n        }\n\n        return (\n            <div\n                style={{\n                    position: \"fixed\",\n                    top: 0,\n                    bottom: 0,\n                    right: 0,\n                    left: 0,\n                    pointerEvents: \"none\",\n                    zIndex: 5\n                }}>\n                <Rnd\n                    className={`jobswidget ${display ? \"\" : \"invisible\"}`}\n                    style={{\n                        pointerEvents: \"auto\",\n                        bottom: 0,\n                        right: 0\n                    }}\n                    default={{\n                        width: \"30vw\",\n                        height: \"50vh\",\n                        x:\n                            document.documentElement.clientWidth -\n                            Math.min(document.documentElement.clientWidth * 0.3, 350) -\n                            20,\n                        y:\n                            document.documentElement.clientHeight -\n                            document.documentElement.clientHeight * 0.5 -\n                            20\n                    }}\n                    maxWidth={350}\n                    minHeight={50}\n                    minWidth={110}\n                    bounds=\"parent\">\n                    <div className=\"fancyscroll overflow-auto h-100\" ref={this.widgetRef}>\n                        <h5 className=\"text-center text-darker font-weight-bold\">\n                            <FormattedMessage id=\"view.instance.jobs.title\" />\n                        </h5>\n                        {this.nested()}\n                    </div>\n                </Rnd>\n            </div>\n        );\n    }\n\n    private nested(): ReactNode {\n        return (\n            <div className={this.props.widget ? \"d-sm-block\" : \"\"}>\n                {this.state.loading ? <Loading text=\"loading.instance.jobs.list\" /> : \"\"}\n                {this.state.ownerrors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.ownerrors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        ownerrors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                {this.state.errors.length > 0 ? (\n                    <React.Fragment>\n                        {this.state.errors.map((error, index) => {\n                            return (\n                                <div\n                                    key={index}\n                                    style={{ maxWidth: this.props.widget ? 350 : \"unset\" }}>\n                                    <ErrorAlert error={error} />\n                                </div>\n                            );\n                        })}\n                        <Card>\n                            {this.state.nextRetrySeconds === 0 ? (\n                                <FormattedMessage id=\"view.instance.jobs.reconnect_now\"></FormattedMessage>\n                            ) : this.state.nextRetrySeconds != null ? (\n                                <FormattedMessage\n                                    id=\"view.instance.jobs.reconnect_in\"\n                                    values={{\n                                        seconds: this.state.nextRetrySeconds\n                                    }}></FormattedMessage>\n                            ) : (\n                                <FormattedMessage id=\"view.instance.jobs.reconnected_auth\"></FormattedMessage>\n                            )}\n                        </Card>\n                    </React.Fragment>\n                ) : null}\n                {Array.from(this.state.jobs)\n                    .sort((a, b) => a[0] - b[0])\n                    .map(([instanceid, jobMap]) => {\n                        const renderTooltip = (instanceid: number) => {\n                            return (props: OverlayInjectedProps) => (\n                                <Tooltip id={`tooltip-instance-${instanceid}`} {...props}>\n                                    {instanceid}\n                                </Tooltip>\n                            );\n                        };\n\n                        let xFinishedEnabled = false;\n                        jobMap.forEach(job => {\n                            if (job.stoppedAt) xFinishedEnabled = true;\n                        });\n\n                        const instanceHeaderStyle = xFinishedEnabled\n                            ? { marginTop: \"5px\", marginLeft: \"20px\" }\n                            : undefined;\n\n                        return (\n                            <React.Fragment key={instanceid}>\n                                <div className=\"bg-dark p-2 row\">\n                                    <div className={`col-${xFinishedEnabled ? 9 : 12} text-center`}>\n                                        <div style={instanceHeaderStyle}>\n                                            <OverlayTrigger overlay={renderTooltip(instanceid)}>\n                                                <React.Fragment>\n                                                    {this.state.instances.get(instanceid)?.name ??\n                                                        \"Unknown\"}{\" \"}\n                                                    (\n                                                    <FormattedMessage\n                                                        id=\"view.instance.jobs.jobtotal\"\n                                                        values={{ amount: jobMap.size }}\n                                                    />\n                                                    )\n                                                </React.Fragment>\n                                            </OverlayTrigger>\n                                        </div>\n                                    </div>\n                                    {xFinishedEnabled ? (\n                                        <div className=\"col-3 text-right\">\n                                            <OverlayTrigger\n                                                placement=\"top\"\n                                                overlay={props => (\n                                                    <Tooltip id=\"clear-instance-jobs\" {...props}>\n                                                        <FormattedMessage id=\"view.instance.jobs.clearfinished\" />\n                                                    </Tooltip>\n                                                )}>\n                                                <Button\n                                                    variant=\"outline-secondary\"\n                                                    onClick={() =>\n                                                        jobMap.forEach(job => {\n                                                            if (job.stoppedAt)\n                                                                JobsController.clearJob(job.id);\n                                                        })\n                                                    }\n                                                    className=\"nowrap\">\n                                                    <FontAwesomeIcon icon={faTimes} />\n                                                </Button>\n                                            </OverlayTrigger>\n                                        </div>\n                                    ) : (\n                                        <React.Fragment />\n                                    )}\n                                </div>\n                                {Array.from(jobMap, ([, job]) => job)\n                                    .sort((a, b) => b.id - a.id)\n                                    .map(job => (\n                                        <JobCard\n                                            job={job}\n                                            width={this.props.width}\n                                            key={job.id}\n                                            onClose={this.onClose}\n                                            onCancel={this.onCancel}\n                                        />\n                                    ))}\n                            </React.Fragment>\n                        );\n                    })}\n            </div>\n        );\n    }\n}\n","import React, { ReactNode } from \"react\";\nimport Spinner, { SpinnerProps } from \"react-bootstrap/Spinner\";\nimport { FormattedMessage } from \"react-intl\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\n\ntype IProps = SpinnerProps & {\n    animation: \"border\" | \"grow\";\n    center: boolean;\n    width: number;\n    widthUnit: string;\n    className?: string;\n    text?: string;\n};\n\ninterface IState {}\n\nexport default class Loading extends React.Component<IProps, IState> {\n    public static defaultProps = {\n        animation: \"border\",\n        width: \"50\",\n        widthUnit: \"vmin\",\n        center: true\n    };\n    public constructor(props: IProps) {\n        super(props);\n    }\n\n    public render(): ReactNode {\n        const {\n            variant,\n            animation,\n            center,\n            className,\n            width,\n            widthUnit,\n            text,\n            children,\n            ...otherprops\n        } = this.props;\n        const styles: React.CSSProperties = {\n            width: `${width}${widthUnit}`,\n            height: `${width}${widthUnit}`\n        } as React.CSSProperties;\n        return (\n            <TransitionGroup>\n                <CSSTransition\n                    appear\n                    classNames=\"anim-fade\"\n                    addEndListener={(node, done) => {\n                        node.addEventListener(\"transitionend\", done, false);\n                    }}>\n                    <div className={center ? \"text-center\" : \"\"}>\n                        <Spinner\n                            variant={variant ? variant : \"secondary\"}\n                            className={center ? `d-block mx-auto ${className ?? \"\"}` : className}\n                            style={styles}\n                            animation={animation ? animation : \"border\"}\n                            {...otherprops}\n                        />\n                        {text ? <FormattedMessage id={text} /> : \"\"}\n                        {children}\n                    </div>\n                </CSSTransition>\n            </TransitionGroup>\n        );\n    }\n}\n","import { faInvision } from \"@fortawesome/free-brands-svg-icons\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons/faDiscord\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons/faGithub\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ChangeEvent, FormEvent, ReactNode } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { OAuthProvider } from \"../../ApiClient/generatedcode/generated\";\nimport { CredentialsType } from \"../../ApiClient/models/ICredentials\";\nimport InternalError, { ErrorCode } from \"../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../ApiClient/models/InternalComms/InternalStatus\";\nimport ServerClient from \"../../ApiClient/ServerClient\";\nimport CredentialsProvider from \"../../ApiClient/util/CredentialsProvider\";\nimport { GeneralContext, UnsafeGeneralContext } from \"../../contexts/GeneralContext\";\nimport { MODE } from \"../../definitions/constants\";\nimport KeycloakLogo from \"../../images/keycloak_icon_64px.png\";\nimport TGLogo from \"../../images/tglogo-white.svg\";\nimport { RouteData } from \"../../utils/routes\";\nimport ErrorAlert from \"../utils/ErrorAlert\";\nimport Loading from \"../utils/Loading\";\n\ninterface IProps extends RouteComponentProps {\n    loggedOut: boolean;\n}\ninterface IState {\n    busy: boolean;\n    validated: boolean;\n    username: string;\n    password: string;\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    redirectSetup?: boolean;\n}\n\nexport type StoredOAuthData = { provider: OAuthProvider; url: string };\nexport type OAuthStateStorage = Record<string, StoredOAuthData>;\n\nclass Login extends React.Component<IProps, IState> {\n    public declare context: UnsafeGeneralContext;\n\n    public constructor(props: IProps) {\n        super(props);\n        this.submit = this.submit.bind(this);\n\n        console.log(RouteData.oautherrors);\n\n        this.state = {\n            busy: false,\n            validated: false,\n            username: \"\",\n            password: \"\",\n            errors: Array.from(RouteData.oautherrors)\n        };\n    }\n\n    public async componentDidMount(): Promise<void> {\n        const oauthState =\n            window.sessionStorage.getItem(\"oauth\") ??\n            CredentialsProvider.credentials?.type === CredentialsType.OAuth;\n        if (!oauthState && (MODE === \"PROD\" || MODE === \"GITHUB\")) {\n            // noinspection ES6MissingAwait\n            await this.tryLoginDefault();\n        }\n    }\n\n    private async tryLoginDefault(): Promise<void> {\n        if (this.props.loggedOut) {\n            return;\n        }\n\n        const response = await ServerClient.login(CredentialsProvider.default);\n\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                redirectSetup: true\n            });\n        }\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    public render(): ReactNode {\n        const handleUsrInput = (event: ChangeEvent<HTMLInputElement>) =>\n            this.setState({ username: event.target.value });\n        const handlePwdInput = (event: ChangeEvent<HTMLInputElement>) =>\n            this.setState({ password: event.target.value });\n\n        if (this.state.busy || CredentialsProvider.hasToken()) {\n            return <Loading text=\"loading.login\" />;\n        }\n\n        if (!this.context.serverInfo) {\n            return <Loading text=\"loading.serverinfo\" />;\n        }\n\n        const providers: Record<OAuthProvider, React.ReactNode> = {\n            [OAuthProvider.GitHub]: <FontAwesomeIcon icon={faGithub} style={{ width: \"1.2em\" }} />,\n            [OAuthProvider.Discord]: (\n                <FontAwesomeIcon icon={faDiscord} style={{ width: \"1.2em\" }} />\n            ),\n            [OAuthProvider.TGForums]: <img src={TGLogo} alt=\"tglogo\" style={{ width: \"1.2em\" }} />,\n            [OAuthProvider.Keycloak]: (\n                <img src={KeycloakLogo} alt=\"keycloaklogo\" style={{ width: \"1.2em\" }} />\n            ),\n            [OAuthProvider.InvisionCommunity]: (\n                <FontAwesomeIcon icon={faInvision} style={{ width: \"1.2em\" }} />\n            )\n        };\n\n        const providersTheme: Record<OAuthProvider, string | undefined> = {\n            GitHub: \"#161b22\",\n            Discord: \"#7289da\",\n            TGForums: undefined,\n            Keycloak: undefined,\n            InvisionCommunity: undefined\n        };\n\n        return (\n            <Col className=\"mx-auto\" lg={5} md={8}>\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                <Card body>\n                    <Card.Title>\n                        <FormattedMessage id=\"login.header\" />\n                    </Card.Title>\n                    <Card body>\n                        <Card.Title>\n                            <FormattedMessage id=\"login.type.generic\" />\n                        </Card.Title>\n                        <Form validated={this.state.validated} onSubmit={this.submit}>\n                            <Form.Group controlId=\"username\">\n                                <Form.Label>\n                                    <FormattedMessage id=\"login.username\" />\n                                </Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter username\"\n                                    onChange={handleUsrInput}\n                                    value={this.state.username}\n                                    required\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"password\">\n                                <Form.Label>\n                                    <FormattedMessage id=\"login.password\" />\n                                </Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={handlePwdInput}\n                                    value={this.state.password}\n                                    required\n                                />\n                            </Form.Group>\n                            <Button type=\"submit\" block>\n                                <FormattedMessage id=\"login.submit\" />\n                            </Button>\n                        </Form>\n                    </Card>\n                    {(this.context.serverInfo?.oAuthProviderInfos?.Discord ||\n                        this.context.serverInfo?.oAuthProviderInfos?.GitHub ||\n                        this.context.serverInfo?.oAuthProviderInfos?.Keycloak ||\n                        this.context.serverInfo?.oAuthProviderInfos?.TGForums ||\n                        this.context.serverInfo?.oAuthProviderInfos?.InvisionCommunity) && (\n                        <>\n                            <hr />\n                            <Card body>\n                                <Card.Title>\n                                    <FormattedMessage id=\"login.type.oauth\" />\n                                </Card.Title>\n                                {Object.keys(this.context.serverInfo.oAuthProviderInfos ?? {}).map(\n                                    provider => {\n                                        const ptheme = providersTheme[provider as OAuthProvider];\n                                        return (\n                                            <Button\n                                                key={provider}\n                                                block\n                                                style={ptheme ? { background: ptheme } : undefined}\n                                                onClick={() =>\n                                                    this.startOAuth(provider as OAuthProvider)\n                                                }>\n                                                {providers[provider as OAuthProvider]}\n                                                <span className=\"ml-1\">\n                                                    <FormattedMessage\n                                                        id=\"login.oauth\"\n                                                        values={{ provider }}\n                                                    />\n                                                </span>\n                                            </Button>\n                                        );\n                                    }\n                                )}\n                            </Card>\n                        </>\n                    )}\n                </Card>\n            </Col>\n        );\n    }\n\n    private async startOAuth(provider: OAuthProvider): Promise<void> {\n        if (!this.context.serverInfo) {\n            this.addError(\n                new InternalError(ErrorCode.APP_FAIL, {\n                    jsError: Error(\"serverInfo is null in startOAuth\")\n                })\n            );\n            return;\n        }\n\n        const stateArray = new Uint8Array(10);\n        window.crypto.getRandomValues(stateArray);\n        const state = Array.from(stateArray, dec => dec.toString(16).padStart(2, \"0\")).join(\"\");\n\n        let url: string | undefined = undefined;\n\n        const e = encodeURIComponent;\n\n        switch (provider) {\n            case OAuthProvider.Discord: {\n                url = `https://discord.com/api/oauth2/authorize?response_type=code&client_id=${e(\n                    this.context.serverInfo.oAuthProviderInfos.Discord.clientId\n                )}&scope=identify&state=${e(state)}`;\n                const discordRedirect = this.context.serverInfo.oAuthProviderInfos.Discord\n                    .redirectUri;\n                if (discordRedirect) {\n                    url = `${url}&redirect_uri=${e(\n                        this.context.serverInfo.oAuthProviderInfos.Discord.redirectUri\n                    )}`;\n                }\n\n                break;\n            }\n            case OAuthProvider.GitHub: {\n                url = `https://github.com/login/oauth/authorize?client_id=${e(\n                    this.context.serverInfo.oAuthProviderInfos.GitHub.clientId\n                )}&redirect_uri=${e(\n                    this.context.serverInfo.oAuthProviderInfos.GitHub.redirectUri\n                )}&state=${e(state)}&allow_signup=false`;\n                break;\n            }\n            case OAuthProvider.Keycloak: {\n                url = `${this.context.serverInfo.oAuthProviderInfos.Keycloak\n                    .serverUrl!}/protocol/openid-connect/auth?response_type=code&client_id=${e(\n                    this.context.serverInfo.oAuthProviderInfos.Keycloak.clientId\n                )}&scope=openid&state=${e(state)}&redirect_uri=${e(\n                    this.context.serverInfo.oAuthProviderInfos.Keycloak.redirectUri\n                )}`;\n                break;\n            }\n            case OAuthProvider.TGForums: {\n                url = `https://tgstation13.org/phpBB/app.php/tgapi/oauth/auth?scope=user&client_id=${e(\n                    this.context.serverInfo.oAuthProviderInfos.TGForums.clientId\n                )}&state=${e(state)}&redirect_uri=${e(\n                    this.context.serverInfo.oAuthProviderInfos.TGForums.redirectUri\n                )}`;\n                break;\n            }\n            case OAuthProvider.InvisionCommunity: {\n                url = `${this.context.serverInfo.oAuthProviderInfos.InvisionCommunity\n                    .serverUrl!}/oauth/authorize/?response_type=code&client_id=${e(\n                    this.context.serverInfo.oAuthProviderInfos.InvisionCommunity.clientId\n                )}&scope=profile&state=${e(state)}&redirect_uri=${e(\n                    this.context.serverInfo.oAuthProviderInfos.InvisionCommunity.redirectUri\n                )}`;\n                break;\n            }\n        }\n\n        const oauthdata = JSON.parse(\n            window.sessionStorage.getItem(\"oauth\") ?? \"{}\"\n        ) as OAuthStateStorage;\n        oauthdata[state] = {\n            provider: provider,\n            url: this.props.location.pathname\n        };\n\n        window.sessionStorage.setItem(\"oauth\", JSON.stringify(oauthdata));\n\n        window.location.href = url;\n\n        return new Promise(resolve => resolve());\n    }\n\n    private async submit(event: FormEvent<HTMLFormElement>) {\n        event.preventDefault();\n        this.setState({\n            busy: true\n        });\n        const response = await ServerClient.login({\n            type: CredentialsType.Password,\n            userName: this.state.username,\n            password: this.state.password\n        });\n        if (response.code == StatusCode.ERROR) {\n            this.setState({\n                busy: false\n            });\n            this.addError(response.error);\n        }\n    }\n}\nLogin.contextType = GeneralContext;\nexport default withRouter(Login);\n","import React from \"react\";\n\nimport type { ServerInformationResponse, UserResponse } from \"../ApiClient/generatedcode/generated\";\nimport InternalError from \"../ApiClient/models/InternalComms/InternalError\";\n\nexport type GeneralContext = {\n    deleteError: (error: InternalError) => void;\n    errors: Set<InternalError>;\n    user: UserResponse;\n    serverInfo: ServerInformationResponse;\n};\n\n//same as GeneralContext except used for components which arent loading under the router so we cant guarentee that serverInfo and user wont be null\nexport type UnsafeGeneralContext = {\n    deleteError: (error: InternalError) => void;\n    errors: Set<InternalError>;\n    user: UserResponse | null;\n    serverInfo: ServerInformationResponse | null;\n};\n\nexport const GeneralContext = React.createContext<GeneralContext>(\n    (undefined as unknown) as GeneralContext\n);\n","declare const API_VERSION: string;\ndeclare const VERSION: string;\ndeclare const MODE: \"DEV\" | \"PROD\" | \"GITHUB\";\ndeclare const DEFAULT_BASEPATH: string;\ndeclare const DEFAULT_APIPATH: string;\n\nconst _API_VERSION = API_VERSION;\nconst _VERSION = VERSION;\nconst _MODE = MODE;\nconst _DEFAULT_BASEPATH = DEFAULT_BASEPATH;\nconst _DEFAULT_APIPATH = DEFAULT_APIPATH;\n\nexport { _API_VERSION as API_VERSION };\nexport { _VERSION as VERSION };\nexport { _MODE as MODE };\nexport { _DEFAULT_BASEPATH as DEFAULT_BASEPATH };\nexport { _DEFAULT_APIPATH as DEFAULT_APIPATH };\n","declare let __webpack_public_path__: string;\ndeclare let MODE: \"GITHUB\" | \"PROD\" | \"DEV\";\n\n// eslint-disable-next-line prefer-const\nif (window.publicPath && MODE !== \"GITHUB\") __webpack_public_path__ = window.publicPath;\nconsole.log(\"Public path:\", __webpack_public_path__);\n\nexport {};\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./App.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!./AppNavbar.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import \"./AppNavbar.css\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { NavDropdown, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { SemVer } from \"semver\";\n\nimport AdminClient from \"../ApiClient/AdminClient\";\nimport { AdministrationRights } from \"../ApiClient/generatedcode/generated\";\nimport { StatusCode } from \"../ApiClient/models/InternalComms/InternalStatus\";\nimport ServerClient from \"../ApiClient/ServerClient\";\nimport UserClient from \"../ApiClient/UserClient\";\nimport LoginHooks from \"../ApiClient/util/LoginHooks\";\nimport { GeneralContext, UnsafeGeneralContext } from \"../contexts/GeneralContext\";\nimport { hasAdminRight, matchesPath, resolvePermissionSet } from \"../utils/misc\";\nimport RouteController from \"../utils/RouteController\";\nimport { AppCategories, AppRoute, AppRoutes } from \"../utils/routes\";\n\ninterface IProps extends RouteComponentProps {\n    category?: {\n        name: string;\n        key: string;\n    };\n    loggedIn: boolean;\n}\n\ninterface IState {\n    //so we dont actually use the routes but it allows us to make react update the component\n    routes: AppRoute[];\n    categories: typeof AppCategories;\n    updateAvailable: boolean;\n}\n\nclass AppNavbar extends React.Component<IProps, IState> {\n    public declare context: UnsafeGeneralContext;\n\n    public constructor(props: IProps) {\n        super(props);\n        this.logoutClick = this.logoutClick.bind(this);\n        this.loginSuccess = this.loginSuccess.bind(this);\n        this.logout = this.logout.bind(this);\n        this.refresh = this.refresh.bind(this);\n\n        this.state = {\n            routes: [],\n            categories: AppCategories,\n            updateAvailable: false\n        };\n    }\n\n    private loginSuccess(): void {\n        void this.checkShowServerUpdateIcon();\n    }\n\n    private async checkShowServerUpdateIcon(): Promise<void> {\n        await ServerClient.wait4Init();\n        const userResponse = await UserClient.getCurrentUser();\n        if (userResponse.code === StatusCode.ERROR) return;\n\n        const user = userResponse.payload;\n\n        const permissionSet = resolvePermissionSet(user);\n        if (hasAdminRight(permissionSet, AdministrationRights.ChangeVersion)) {\n            const response = await AdminClient.getAdminInfo();\n            if (response.code == StatusCode.OK) {\n                const latestVersion = new SemVer(response.payload.latestVersion);\n                const currentVersion = new SemVer(this.context.serverInfo!.version);\n\n                const updateAvailable = latestVersion.compare(currentVersion) === 1;\n\n                this.setState({\n                    updateAvailable\n                });\n            }\n        }\n    }\n\n    private logout() {\n        this.setState({\n            updateAvailable: false\n        });\n    }\n\n    private refresh(routes: Array<AppRoute>) {\n        this.setState({\n            routes\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        LoginHooks.on(\"loginSuccess\", this.loginSuccess);\n        ServerClient.on(\"logout\", this.logout);\n\n        this.setState({\n            routes: await RouteController.getRoutes()\n        });\n\n        RouteController.on(\"refresh\", this.refresh);\n    }\n\n    public componentWillUnmount(): void {\n        LoginHooks.removeListener(\"loginSuccess\", this.loginSuccess);\n        ServerClient.removeListener(\"logout\", this.logout);\n        RouteController.removeListener(\"refresh\", this.refresh);\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <React.Fragment>\n                <Navbar\n                    className=\"shadow-lg\"\n                    expand={this.props.loggedIn ? \"lg\" : undefined}\n                    collapseOnSelect\n                    variant=\"dark\"\n                    bg=\"primary\">\n                    <Navbar.Brand\n                        onClick={() => {\n                            this.props.history.push(AppRoutes.home.link ?? AppRoutes.home.route, {\n                                reload: true\n                            });\n                        }}\n                        className=\"mr-auto\">\n                        {this.renderVersion()}\n                    </Navbar.Brand>\n                    <Navbar.Toggle className=\"mr-2\" aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse className=\"text-right mr-2\" style={{ minWidth: \"0px\" }}>\n                        <Nav>\n                            {!this.props.loggedIn ? (\n                                <Nav.Item>\n                                    <Nav.Link\n                                        onClick={() => {\n                                            this.props.history.push(\n                                                AppRoutes.home.link ?? AppRoutes.home.route,\n                                                { reload: true }\n                                            );\n                                        }}\n                                        active={true}>\n                                        <FormattedMessage id=\"routes.login\" />\n                                    </Nav.Link>\n                                </Nav.Item>\n                            ) : (\n                                Object.values(this.state.categories).map(cat => {\n                                    if (!cat.leader.cachedAuth) return;\n                                    return cat.routes.length == 1 ? (\n                                        <Nav.Item key={cat.name}>\n                                            <Nav.Link\n                                                onClick={() => {\n                                                    this.props.history.push(\n                                                        cat.leader.link ?? cat.leader.route,\n                                                        { reload: true }\n                                                    );\n                                                }}\n                                                active={matchesPath(\n                                                    this.props.location.pathname,\n                                                    cat.leader.route,\n                                                    !cat.leader.navbarLoose\n                                                )}>\n                                                <FormattedMessage id={cat.leader.name} />\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    ) : (\n                                        <Nav.Item key={cat.name}>\n                                            <NavDropdown\n                                                id={cat.name + \"-dropdown\"}\n                                                title={<FormattedMessage id={cat.leader.name} />}>\n                                                {Object.values(cat.routes).filter(\n                                                    value => value.cachedAuth\n                                                ).length >= 2 ? (\n                                                    <React.Fragment>\n                                                        <NavDropdown.Item\n                                                            onClick={() => {\n                                                                this.props.history.push(\n                                                                    cat.leader.link ??\n                                                                        cat.leader.route,\n                                                                    { reload: true }\n                                                                );\n                                                            }}\n                                                            active={matchesPath(\n                                                                this.props.location.pathname,\n                                                                cat.leader.route,\n                                                                true\n                                                            )}>\n                                                            <FormattedMessage\n                                                                id={cat.leader.name}\n                                                            />\n                                                        </NavDropdown.Item>\n                                                        {cat.routes.map(val => {\n                                                            if (val.catleader) return; //we already display this but differently\n                                                            if (!val.cachedAuth) return;\n                                                            if (!val.visibleNavbar) return;\n\n                                                            return (\n                                                                <NavDropdown.Item\n                                                                    key={val.name}\n                                                                    onClick={() => {\n                                                                        this.props.history.push(\n                                                                            val.link ?? val.route,\n                                                                            {\n                                                                                reload: true\n                                                                            }\n                                                                        );\n                                                                    }}\n                                                                    active={matchesPath(\n                                                                        this.props.location\n                                                                            .pathname,\n                                                                        val.route,\n                                                                        !val.navbarLoose\n                                                                    )}>\n                                                                    <FormattedMessage\n                                                                        id={val.name}\n                                                                    />\n                                                                </NavDropdown.Item>\n                                                            );\n                                                        })}\n                                                    </React.Fragment>\n                                                ) : (\n                                                    \"\"\n                                                )}\n                                            </NavDropdown>\n                                        </Nav.Item>\n                                    );\n                                })\n                            )}\n                        </Nav>\n                        {this.state.updateAvailable ? (\n                            <OverlayTrigger\n                                placement=\"right\"\n                                overlay={props => (\n                                    <Tooltip id=\"tgs-updated-tooltip\" {...props}>\n                                        <FormattedMessage id=\"navbar.update\" />\n                                    </Tooltip>\n                                )}>\n                                <h3>\n                                    <FontAwesomeIcon\n                                        className=\"tgs-update-notification\"\n                                        onClick={() =>\n                                            this.props.history.push(\n                                                AppRoutes.admin_update.link ??\n                                                    AppRoutes.admin_update.route,\n                                                { reload: true }\n                                            )\n                                        }\n                                        icon={faExclamationCircle}\n                                    />\n                                </h3>\n                            </OverlayTrigger>\n                        ) : (\n                            <React.Fragment />\n                        )}\n                        {this.renderUser()}\n                    </Navbar.Collapse>\n                </Navbar>\n            </React.Fragment>\n        );\n    }\n\n    private renderVersion(): React.ReactNode {\n        if (!this.context.serverInfo?.version) {\n            return <FormattedMessage id=\"loading.loading\" />;\n        }\n\n        return (\n            <React.Fragment>\n                <FormattedMessage id=\"generic.appname\" />\n                {\" v\"}\n                {this.context.serverInfo.version}\n            </React.Fragment>\n        );\n    }\n\n    private renderUser(): React.ReactNode {\n        if (!this.props.loggedIn)\n            return (\n                <React.Fragment>\n                    <Button\n                        onClick={() => {\n                            this.props.history.push(\n                                AppRoutes.config.link ?? AppRoutes.config.route,\n                                { reload: true }\n                            );\n                        }}\n                        variant=\"primary\">\n                        <FontAwesomeIcon icon=\"cogs\" />\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            this.props.history.push(AppRoutes.info.link ?? AppRoutes.info.route, {\n                                reload: true\n                            });\n                        }}\n                        variant=\"primary\">\n                        <FontAwesomeIcon icon=\"info-circle\" />\n                    </Button>\n                </React.Fragment>\n            );\n\n        return (\n            <Nav.Item className=\"ml-auto\">\n                <Dropdown>\n                    <Dropdown.Toggle\n                        id=\"user-dropdown\"\n                        type=\"button\"\n                        variant=\"primary\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\">\n                        {this.context.user ? (\n                            this.context.user.name\n                        ) : (\n                            <FormattedMessage id=\"loading.loading\" />\n                        )}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu alignRight className=\"text-right\">\n                        <Dropdown.Item\n                            onClick={() => {\n                                this.props.history.push(\n                                    AppRoutes.info.link ?? AppRoutes.info.route,\n                                    { reload: true }\n                                );\n                            }}>\n                            <FormattedMessage id=\"routes.info\" />\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                            onClick={() => {\n                                this.props.history.push(\n                                    AppRoutes.config.link ?? AppRoutes.config.route,\n                                    { reload: true }\n                                );\n                            }}>\n                            <FormattedMessage id=\"routes.config\" />\n                        </Dropdown.Item>\n                        {AppRoutes.passwd.cachedAuth ? (\n                            <Dropdown.Item\n                                onClick={() => {\n                                    this.props.history.push(\n                                        AppRoutes.passwd.link ?? AppRoutes.passwd.route,\n                                        { reload: true }\n                                    );\n                                }}>\n                                <FormattedMessage id=\"routes.passwd\" />\n                            </Dropdown.Item>\n                        ) : (\n                            \"\"\n                        )}\n                        <Dropdown.Item\n                            onClick={() => {\n                                ServerClient.emit(\"purgeCache\");\n                                this.props.history.replace(this.props.location.pathname, {\n                                    reload: true\n                                });\n                            }}>\n                            <FormattedMessage id=\"navbar.purgecache\" />\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                            onClick={() => {\n                                this.props.history.replace(this.props.location.pathname, {\n                                    reload: true\n                                });\n                            }}>\n                            <FormattedMessage id=\"navbar.refresh\" />\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={this.logoutClick}>\n                            <FormattedMessage id=\"navbar.logout\" />\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </Nav.Item>\n        );\n    }\n\n    private logoutClick(): void {\n        ServerClient.logout();\n    }\n}\nAppNavbar.contextType = GeneralContext;\nexport default withRouter(AppNavbar);\n","import React from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport logo from \"../images/logo.svg\";\n\ninterface IProps {}\n\ninterface IState {}\n\nexport default class Logo extends React.Component<IProps, IState> {\n    public render(): React.ReactNode {\n        let memeSelector = 4;\n        return (\n            <OverlayTrigger\n                placement=\"left\"\n                onToggle={showing => {\n                    if (showing) {\n                        memeSelector = Math.round(Math.random() * 100) % 26;\n                    }\n                }}\n                overlay={props => (\n                    <Tooltip id=\"report-issue-tooltip\" {...props}>\n                        <FormattedMessage id={`view.meme_${memeSelector}`} />\n                    </Tooltip>\n                )}>\n                <img className=\"nowrap corner-logo\" width={50} height={50} src={logo} />\n            </OverlayTrigger>\n        );\n    }\n}\n","import { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\n\ninterface IProps {}\n\ninterface IState {}\n\nexport default class ReportIssue extends React.Component<IProps, IState> {\n    public render(): React.ReactNode {\n        return (\n            <OverlayTrigger\n                placement=\"top\"\n                overlay={props => (\n                    <Tooltip id=\"report-issue-tooltip\" {...props}>\n                        <FormattedMessage id=\"view.report\" />\n                    </Tooltip>\n                )}>\n                <Button\n                    className=\"nowrap report-issue\"\n                    onClick={() =>\n                        window.open(\n                            \"https://github.com/tgstation/tgstation-server-webpanel/issues/new\"\n                        )\n                    }>\n                    <FontAwesomeIcon icon={faExclamationTriangle} />\n                </Button>\n            </OverlayTrigger>\n        );\n    }\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport { MODE, VERSION } from \"../../definitions/constants\";\n\ninterface IProps extends RouteComponentProps {}\ninterface IState {\n    error?: Error;\n    errorInfo?: React.ErrorInfo;\n}\n\nclass ErrorBoundary extends React.Component<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n        this.state = {};\n    }\n\n    public componentDidUpdate(prevProps: IProps): void {\n        if (this.props.location.key !== prevProps.location.key) {\n            this.setState({\n                error: undefined,\n                errorInfo: undefined\n            });\n        }\n    }\n\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n        this.setState({\n            error,\n            errorInfo\n        });\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.error) {\n            return (\n                <Container className=\"mt-5 mb-5\">\n                    <Card className=\"bg-transparent\" border=\"danger\">\n                        <Card.Header className=\"bg-danger\">\n                            <FormattedMessage id=\"error.somethingwentwrong\" />\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Title>\n                                {this.state.error.name}: {this.state.error.message}\n                            </Card.Title>\n                            <Card.Text as={\"pre\"} className=\"bg-transparent text-danger\">\n                                <code>\n                                    {`Webpanel Version: ${VERSION}\\nWebpanel Mode: ${MODE}\\nStack trace: ${\n                                        this.state.errorInfo?.componentStack ??\n                                        \"Unable to get stack info\"\n                                    }`}\n                                </code>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Container>\n            );\n        } else {\n            return this.props.children;\n        }\n    }\n}\n\nexport default withRouter(ErrorBoundary);\n","import { Component, ReactNode } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\ninterface IProps\n    extends RouteComponentProps<\n        Record<string, string>,\n        {\n            statusCode?: number;\n        },\n        { reload?: boolean }\n    > {}\ninterface IState {\n    clear: boolean;\n}\n\nclass Reload extends Component<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n        this.state = {\n            clear: false\n        };\n    }\n    public componentDidUpdate(prevProps: IProps): void {\n        if (this.state.clear) {\n            this.setState({\n                clear: false\n            });\n            return;\n        }\n        if (\n            prevProps.match.path == this.props.match.path &&\n            prevProps.location.key != this.props.location.key &&\n            this.props.location.state?.reload\n        ) {\n            this.setState({\n                clear: true\n            });\n        }\n    }\n\n    public render(): ReactNode {\n        return this.state.clear ? \"\" : this.props.children;\n    }\n}\n\nexport default withRouter(Reload);\n","import loadable, { LoadableComponent } from \"@loadable/component\";\nimport * as React from \"react\";\nimport { Component, ComponentClass, ReactNode } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { CredentialsType } from \"./ApiClient/models/ICredentials\";\nimport InternalError, { ErrorCode } from \"./ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"./ApiClient/models/InternalComms/InternalStatus\";\nimport ServerClient from \"./ApiClient/ServerClient\";\nimport AccessDenied from \"./components/utils/AccessDenied\";\nimport ErrorAlert from \"./components/utils/ErrorAlert\";\nimport ErrorBoundary from \"./components/utils/ErrorBoundary\";\nimport Loading from \"./components/utils/Loading\";\nimport Reload from \"./components/utils/Reload\";\nimport Login, { OAuthStateStorage } from \"./components/views/Login\";\nimport { GeneralContext, UnsafeGeneralContext } from \"./contexts/GeneralContext\";\nimport { MODE } from \"./definitions/constants\";\nimport { matchesPath } from \"./utils/misc\";\nimport RouteController from \"./utils/RouteController\";\nimport { AppRoute, AppRoutes, RouteData } from \"./utils/routes\";\n\ninterface IState {\n    loading: boolean;\n    routes: Array<AppRoute>;\n    components: Map<string, LoadableComponent<unknown>>;\n}\ninterface IProps extends RouteComponentProps {\n    loggedIn: boolean;\n    loggedOut: boolean;\n    selectCategory: (category: string) => void;\n}\n\nconst LoadSpin = (page: string) => (\n    <Loading text={\"loading.page\"}>\n        <FormattedMessage id={page} />\n    </Loading>\n);\n\nconst NotFound = loadable(() => import(\"./components/utils/NotFound\"), {\n    fallback: LoadSpin(\"loading.page.notfound\")\n});\n\nclass Router extends Component<IProps, IState> {\n    public declare context: UnsafeGeneralContext;\n    public constructor(props: IProps) {\n        super(props);\n\n        this.refreshListener = this.refreshListener.bind(this);\n\n        const components = new Map<string, LoadableComponent<unknown>>();\n\n        const routes = RouteController.getImmediateRoutes(false);\n        routes.forEach(route => {\n            components.set(\n                route.name,\n                //*should* always be a react component\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                loadable(() => import(`./components/views/${route.file}`), {\n                    fallback: LoadSpin(route.name)\n                })\n            );\n        });\n\n        this.state = {\n            loading: !!new URLSearchParams(window.location.search).get(\"state\"),\n            routes: RouteController.getImmediateRoutes(false),\n            components: components\n        };\n    }\n\n    private refreshListener(routes: Array<AppRoute>) {\n        this.setState({\n            routes\n        });\n    }\n\n    public async componentDidMount() {\n        RouteController.on(\"refreshAll\", this.refreshListener);\n\n        this.props.history.listen(location => {\n            void this.listener(location.pathname);\n        });\n        this.listener(this.props.location.pathname);\n\n        const URLSearch = new URLSearchParams(window.location.search);\n        const state = URLSearch.get(\"state\");\n        if (!state) {\n            this.setState({\n                loading: false\n            });\n            return;\n        }\n\n        if (MODE === \"PROD\" || MODE === \"GITHUB\") {\n            window.history.replaceState(null, document.title, window.location.pathname);\n        }\n\n        const oauthdata = JSON.parse(\n            window.sessionStorage.getItem(\"oauth\") ?? \"{}\"\n        ) as OAuthStateStorage;\n\n        const oauthstate = oauthdata[state];\n        if (!oauthstate) {\n            return this.setErrorAndEnd(\n                new InternalError(ErrorCode.LOGIN_BAD_OAUTH, {\n                    jsError: Error(`State(${state}) cannot be resolved to a provider.`)\n                })\n            );\n        }\n\n        const code = URLSearch.get(\"code\");\n        if (!code) {\n            return this.setErrorAndEnd(\n                new InternalError(ErrorCode.LOGIN_BAD_OAUTH, {\n                    jsError: Error(`Code not found.`)\n                })\n            );\n        }\n        this.props.history.replace(oauthstate.url);\n\n        const response = await ServerClient.login({\n            type: CredentialsType.OAuth,\n            provider: oauthstate.provider,\n            token: code\n        });\n\n        window.sessionStorage.removeItem(\"oauth\");\n\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                loading: false\n            });\n        } else {\n            return this.setErrorAndEnd(response.error);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        RouteController.removeListener(\"refreshAll\", this.refreshListener);\n    }\n\n    private setErrorAndEnd(error: InternalError<ErrorCode>) {\n        RouteData.oautherrors = [error];\n        this.setState({\n            loading: false\n        });\n    }\n\n    private listener(location: string) {\n        const routes = RouteController.getImmediateRoutes(false);\n        for (const route of routes) {\n            if (route.category && route.navbarLoose && matchesPath(location, route.route)) {\n                this.props.selectCategory(route.category);\n                break;\n            }\n        }\n    }\n\n    public render(): ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.app\" />;\n        }\n\n        return (\n            <ErrorBoundary>\n                <Reload>\n                    <div>\n                        <Switch>\n                            {this.state.routes.map(route => {\n                                if (!route.loginless && !this.props.loggedIn) return;\n\n                                return (\n                                    <Route\n                                        exact={!route.loose}\n                                        path={route.route}\n                                        key={route.name}\n                                        render={props => {\n                                            let Comp;\n\n                                            if (!route.cachedAuth) {\n                                                Comp = AccessDenied;\n                                            } else {\n                                                Comp = this.state.components.get(\n                                                    route.name\n                                                )! as ComponentClass;\n                                            }\n\n                                            return !this.context?.user && !route.loginless ? (\n                                                <Container>\n                                                    <ErrorAlert\n                                                        error={\n                                                            new InternalError(ErrorCode.APP_FAIL, {\n                                                                jsError: Error(\n                                                                    \"Router has no user in the general context\"\n                                                                )\n                                                            })\n                                                        }\n                                                    />\n                                                </Container>\n                                            ) : //Yeah I have no excuse for this, I didn't want to implement a route config option\n                                            // to allow a single route to work without server info so i added it as a check here\n                                            !this.context?.serverInfo &&\n                                              route != AppRoutes.config ? (\n                                                <Container>\n                                                    <ErrorAlert\n                                                        error={\n                                                            new InternalError(ErrorCode.APP_FAIL, {\n                                                                jsError: Error(\n                                                                    \"Router has no server info in the general context\"\n                                                                )\n                                                            })\n                                                        }\n                                                    />\n                                                </Container>\n                                            ) : route.noContainer ? (\n                                                <React.Fragment>\n                                                    <Comp {...props} />\n                                                </React.Fragment>\n                                            ) : (\n                                                <Container className=\"mt-5 mb-5\">\n                                                    <Comp {...props} />\n                                                </Container>\n                                            );\n                                        }}\n                                    />\n                                );\n                            })}\n                            <Container className=\"mt-5 mb-5\">\n                                <Route key=\"notfound\">\n                                    {this.props.loggedIn ? (\n                                        <NotFound />\n                                    ) : (\n                                        <Login loggedOut={this.props.loggedOut} />\n                                    )}\n                                </Route>\n                            </Container>\n                        </Switch>\n                    </div>\n                </Reload>\n            </ErrorBoundary>\n        );\n    }\n}\nRouter.contextType = GeneralContext;\nexport default withRouter(Router);\n","class Locales {\n    public static readonly en: string = \"en\";\n}\n\nexport default Locales;\n","import ILocalization from \"./ILocalization\";\nimport ITranslation from \"./ITranslation\";\n\nexport default class Translation implements ITranslation {\n    public constructor(public readonly locale: string, public readonly messages: ILocalization) {}\n}\n","import ITranslation from \"./ITranslation\";\nimport ITranslationFactory from \"./ITranslationFactory\";\nimport Locales from \"./Locales\";\nimport Translation from \"./Translation\";\n\nclass TranslationFactory implements ITranslationFactory {\n    private static readonly fallbackLocale: string = Locales.en;\n\n    private static getShortHandedLocale(locale: string): string {\n        return locale.split(\"-\")[0];\n    }\n\n    public async loadTranslation(locale: string): Promise<ITranslation> {\n        //fancy type annotations but its just load the json file in this variable as a map of strings to strings\n        const localization: { [key: string]: string } = (await import(\n            `./locales/${locale}.json`\n        )) as { [key: string]: string };\n\n        if (!localization) {\n            let shortHandedLocale = TranslationFactory.getShortHandedLocale(locale);\n            if (shortHandedLocale === locale) {\n                if (shortHandedLocale === TranslationFactory.fallbackLocale)\n                    throw new Error(\"Invalid locale: \" + locale);\n                shortHandedLocale = TranslationFactory.fallbackLocale;\n            }\n            return await this.loadTranslation(shortHandedLocale);\n        }\n\n        let model: ITranslation | null = null;\n        try {\n            model = new Translation(locale, localization);\n        } catch (e) {\n            throw Error(`Error loading localization for locale '${locale}': ${JSON.stringify(e)}`);\n        }\n\n        return model;\n    }\n}\n\nexport default TranslationFactory;\n","import \"./App.css\";\n\nimport * as React from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Container from \"react-bootstrap/Container\";\nimport { FormattedMessage, IntlProvider } from \"react-intl\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Pkg from \"./../package.json\";\nimport InternalError, {\n    ErrorCode,\n    GenericErrors\n} from \"./ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"./ApiClient/models/InternalComms/InternalStatus\";\nimport ServerClient from \"./ApiClient/ServerClient\";\nimport UserClient from \"./ApiClient/UserClient\";\nimport CredentialsProvider from \"./ApiClient/util/CredentialsProvider\";\nimport LoginHooks from \"./ApiClient/util/LoginHooks\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport Logo from \"./components/Logo\";\nimport ReportIssue from \"./components/ReportIssue\";\nimport ErrorAlert from \"./components/utils/ErrorAlert\";\nimport ErrorBoundary from \"./components/utils/ErrorBoundary\";\nimport JobsList from \"./components/utils/JobsList\";\nimport Loading from \"./components/utils/Loading\";\nimport { GeneralContext, UnsafeGeneralContext } from \"./contexts/GeneralContext\";\nimport { DEFAULT_BASEPATH } from \"./definitions/constants\";\nimport Router from \"./Router\";\nimport ITranslation from \"./translations/ITranslation\";\nimport ITranslationFactory from \"./translations/ITranslationFactory\";\nimport Locales from \"./translations/Locales\";\nimport TranslationFactory from \"./translations/TranslationFactory\";\n\ninterface IState {\n    translation?: ITranslation;\n    translationError?: string;\n    loggedIn: boolean;\n    loggedOut: boolean;\n    loading: boolean;\n    GeneralContextInfo: UnsafeGeneralContext;\n}\n\ninterface IProps {\n    readonly locale: string;\n    readonly translationFactory?: ITranslationFactory;\n}\n\ninterface InnerProps {\n    loading: boolean;\n    loggedIn: boolean;\n    loggedOut: boolean;\n}\n\ninterface InnerState {\n    passdownCat?: { name: string; key: string };\n}\n\nclass InnerApp extends React.Component<InnerProps, InnerState> {\n    public declare context: UnsafeGeneralContext;\n\n    public constructor(props: InnerProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public componentDidMount() {\n        document.title = \"TGS Webpanel v\" + Pkg.version;\n        // I can't be assed to remember the default admin password\n        document.addEventListener(\"keydown\", event => {\n            if (event.key === \"L\" && event.ctrlKey && event.shiftKey) {\n                ServerClient.logout();\n                void ServerClient.login(CredentialsProvider.default);\n            }\n        });\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <BrowserRouter\n                basename={\n                    window.publicPath\n                        ? new URL(window.publicPath, window.location.href).pathname\n                        : DEFAULT_BASEPATH\n                }>\n                <ErrorBoundary>\n                    <AppNavbar category={this.state.passdownCat} loggedIn={this.props.loggedIn} />\n                    {this.props.loading ? (\n                        <Container className=\"mt-5 mb-5\">\n                            <Loading text=\"loading.app\" />\n                        </Container>\n                    ) : (\n                        <>\n                            <Container className=\"mt-5\">\n                                <Alert variant=\"warning\" className=\"d-block d-lg-none\">\n                                    <Alert.Heading>\n                                        <FormattedMessage id=\"warning.screensize.header\" />\n                                    </Alert.Heading>\n                                    <hr />\n                                    <FormattedMessage id=\"warning.screensize\" />\n                                </Alert>\n                                {Array.from(this.context.errors.values()).map((value, idx) => {\n                                    return (\n                                        <ErrorAlert\n                                            error={value}\n                                            key={idx}\n                                            onClose={() => this.context.deleteError(value)}\n                                        />\n                                    );\n                                })}\n                            </Container>\n                            <Router\n                                loggedIn={this.props.loggedIn}\n                                loggedOut={this.props.loggedOut}\n                                selectCategory={cat => {\n                                    this.setState({\n                                        passdownCat: {\n                                            name: cat,\n                                            key: Math.random().toString()\n                                        }\n                                    });\n                                }}\n                            />\n                        </>\n                    )}\n                    {this.props.loggedIn ? <JobsList /> : null}\n                </ErrorBoundary>\n                <ReportIssue />\n                <Logo />\n            </BrowserRouter>\n        );\n    }\n}\nInnerApp.contextType = GeneralContext;\n\nclass App extends React.Component<IProps, IState> {\n    private readonly translationFactory: ITranslationFactory;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.finishLogin = this.finishLogin.bind(this);\n        this.finishLogout = this.finishLogout.bind(this);\n        this.updateContextUser = this.updateContextUser.bind(this);\n        this.updateContextServer = this.updateContextServer.bind(this);\n        this.deleteGeneralContextError = this.deleteGeneralContextError.bind(this);\n\n        this.translationFactory = this.props.translationFactory ?? new TranslationFactory();\n\n        this.state = {\n            loggedIn: false,\n            loggedOut: false,\n            loading: true,\n            GeneralContextInfo: {\n                errors: new Set(),\n                user: null,\n                serverInfo: null,\n                deleteError: this.deleteGeneralContextError\n            }\n        };\n    }\n\n    private async updateContextUser() {\n        const response = await UserClient.getCurrentUser();\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    GeneralContextInfo: {\n                        errors: prev.GeneralContextInfo.errors,\n                        user: response.payload,\n                        serverInfo: prev.GeneralContextInfo.serverInfo,\n                        deleteError: prev.GeneralContextInfo.deleteError\n                    }\n                };\n            });\n        } else {\n            if (response.error.code === ErrorCode.HTTP_ACCESS_DENIED) {\n                this.setState(prev => {\n                    return {\n                        GeneralContextInfo: {\n                            user: null,\n                            serverInfo: prev.GeneralContextInfo.serverInfo,\n                            deleteError: prev.GeneralContextInfo.deleteError,\n                            errors: prev.GeneralContextInfo.errors\n                        }\n                    };\n                });\n            } else {\n                setTimeout(() => void this.updateContextUser(), 5000);\n                this.setState(prev => {\n                    const newSet = new Set(prev.GeneralContextInfo.errors);\n                    newSet.add(response.error);\n                    return {\n                        GeneralContextInfo: {\n                            errors: newSet,\n                            deleteError: prev.GeneralContextInfo.deleteError,\n                            user: null,\n                            serverInfo: prev.GeneralContextInfo.serverInfo\n                        }\n                    };\n                });\n            }\n        }\n    }\n\n    private async updateContextServer(lastError?: InternalError<GenericErrors>) {\n        const response = await ServerClient.getServerInfo();\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                const newSet = new Set(prev.GeneralContextInfo.errors);\n                if (lastError) {\n                    newSet.delete(lastError);\n                }\n                return {\n                    GeneralContextInfo: {\n                        errors: newSet,\n                        user: prev.GeneralContextInfo.user,\n                        serverInfo: response.payload,\n                        deleteError: prev.GeneralContextInfo.deleteError\n                    }\n                };\n            });\n        } else {\n            setTimeout(() => void this.updateContextServer(response.error), 5000);\n            this.setState(prev => {\n                const newSet = new Set(prev.GeneralContextInfo.errors);\n                newSet.add(response.error);\n                if (lastError) {\n                    newSet.delete(lastError);\n                }\n                return {\n                    GeneralContextInfo: {\n                        errors: newSet,\n                        deleteError: prev.GeneralContextInfo.deleteError,\n                        user: prev.GeneralContextInfo.user,\n                        serverInfo: null\n                    }\n                };\n            });\n        }\n    }\n\n    public deleteGeneralContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.GeneralContextInfo.errors);\n            newSet.delete(error);\n            return {\n                GeneralContextInfo: {\n                    deleteError: prev.GeneralContextInfo.deleteError,\n                    user: prev.GeneralContextInfo.user,\n                    serverInfo: prev.GeneralContextInfo.serverInfo,\n                    errors: newSet\n                }\n            };\n        });\n    }\n\n    private finishLogin() {\n        console.log(\"Logging in\");\n\n        void this.updateContextUser().then(() =>\n            this.setState({\n                loggedIn: true,\n                loading: false\n            })\n        );\n    }\n\n    private finishLogout() {\n        this.setState({\n            loggedIn: false,\n            loggedOut: true\n        });\n\n        void this.updateContextUser();\n    }\n    public async componentDidMount(): Promise<void> {\n        LoginHooks.on(\"loginSuccess\", this.finishLogin);\n        ServerClient.on(\"logout\", this.finishLogout);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        ServerClient.on(\"purgeCache\", this.updateContextServer);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        ServerClient.on(\"purgeCache\", this.updateContextUser);\n\n        await this.loadTranslation();\n        const loggedInSuccessfully = await ServerClient.initApi();\n        await this.updateContextServer();\n        if (loggedInSuccessfully) {\n            await this.updateContextUser();\n        }\n\n        this.setState({\n            loading: false,\n            loggedIn: loggedInSuccessfully\n        });\n    }\n\n    public componentWillUnmount(): void {\n        LoginHooks.removeListener(\"loginSuccess\", this.finishLogin);\n        ServerClient.removeListener(\"logout\", this.finishLogout);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        ServerClient.removeListener(\"purgeCache\", this.updateContextServer);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        ServerClient.removeListener(\"purgeCache\", this.updateContextUser);\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.translationError) {\n            return <p className=\"App-error\">{this.state.translationError}</p>;\n        }\n\n        if (!this.state.translation) {\n            return <Loading>Loading translations...</Loading>;\n        }\n        return (\n            <IntlProvider\n                locale={this.state.translation.locale}\n                messages={this.state.translation.messages}\n                defaultLocale=\"en\">\n                <GeneralContext.Provider value={this.state.GeneralContextInfo as GeneralContext}>\n                    <InnerApp\n                        loading={this.state.loading}\n                        loggedIn={this.state.loggedIn}\n                        loggedOut={this.state.loggedOut}\n                    />\n                </GeneralContext.Provider>\n            </IntlProvider>\n        );\n    }\n\n    private async loadTranslation(): Promise<void> {\n        console.time(\"LoadTranslations\");\n        try {\n            const translation = await this.translationFactory.loadTranslation(this.props.locale);\n            this.setState({\n                translation\n            });\n        } catch (error) {\n            this.setState({\n                translationError: JSON.stringify(error) ?? \"An unknown error occurred\"\n            });\n\n            return;\n        }\n\n        console.timeEnd(\"LoadTranslations\");\n    }\n}\n\nexport default App;\n\nexport const IndexApp = (\n    <React.StrictMode>\n        <App locale={Locales.en} />\n    </React.StrictMode>\n);\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faDiscord, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGitAlt } from \"@fortawesome/free-brands-svg-icons/faGitAlt\";\nimport {\n    faArrowLeft,\n    faCaretDown,\n    faCaretRight,\n    faClipboard,\n    faComment,\n    faExclamationTriangle,\n    faFile,\n    faFileAlt,\n    faFolderMinus,\n    faFolderPlus,\n    faGamepad,\n    faHashtag,\n    faMinus,\n    faUnlock,\n    faUpload\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons/faAngleRight\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons/faCheck\";\nimport { faCodeBranch } from \"@fortawesome/free-solid-svg-icons/faCodeBranch\";\nimport { faCogs } from \"@fortawesome/free-solid-svg-icons/faCogs\";\nimport { faComments } from \"@fortawesome/free-solid-svg-icons/faComments\";\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons/faExclamationCircle\";\nimport { faFolderOpen } from \"@fortawesome/free-solid-svg-icons/faFolderOpen\";\nimport { faGripLinesVertical } from \"@fortawesome/free-solid-svg-icons/faGripLinesVertical\";\nimport { faHammer } from \"@fortawesome/free-solid-svg-icons/faHammer\";\nimport { faHdd } from \"@fortawesome/free-solid-svg-icons/faHdd\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons/faHome\";\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons/faInfo\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons/faInfoCircle\";\nimport { faKey } from \"@fortawesome/free-solid-svg-icons/faKey\";\nimport { faListUl } from \"@fortawesome/free-solid-svg-icons/faListUl\";\nimport { faLock } from \"@fortawesome/free-solid-svg-icons/faLock\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons/faPen\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons/faQuestion\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons/faSearch\";\nimport { faServer } from \"@fortawesome/free-solid-svg-icons/faServer\";\nimport { faStream } from \"@fortawesome/free-solid-svg-icons/faStream\";\nimport { faSync } from \"@fortawesome/free-solid-svg-icons/faSync\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { faTools } from \"@fortawesome/free-solid-svg-icons/faTools\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons/faTrash\";\nimport { faUndo } from \"@fortawesome/free-solid-svg-icons/faUndo\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons/faUser\";\nimport { faUsers } from \"@fortawesome/free-solid-svg-icons/faUsers\";\nimport { faUserSlash } from \"@fortawesome/free-solid-svg-icons/faUserSlash\";\n\nexport default function (): void {\n    library.add(\n        faCheck,\n        faTimes,\n        faExclamationCircle,\n        faUser,\n        faUserSlash,\n        faHdd,\n        faSync,\n        faPlus,\n        faQuestion,\n        faHome,\n        faTools,\n        faCogs,\n        faUndo,\n        faInfo,\n        faGripLinesVertical,\n        faAngleRight,\n        faKey,\n        faPen,\n        faGithub,\n        faDiscord,\n        faTrash,\n        faInfoCircle,\n        faGitAlt,\n        faHammer,\n        faListUl,\n        faComments,\n        faFolderOpen,\n        faUsers,\n        faCodeBranch,\n        faSearch,\n        faServer,\n        faStream,\n        faLock,\n        faMinus,\n        faUnlock,\n        faLock,\n        faCaretRight,\n        faCaretDown,\n        faComment,\n        faHashtag,\n        faFolderPlus,\n        faFolderMinus,\n        faFile,\n        faFileAlt,\n        faExclamationTriangle,\n        faClipboard,\n        faArrowLeft,\n        faAngleRight,\n        faUpload,\n        faGamepad\n    );\n}\n","// eslint-disable-next-line\nimport \"./publicPath\";\n\n// definition files\n// css\nimport \"./styles/dark.scss\";\n// polyfills\nimport \"@formatjs/intl-relativetimeformat/polyfill\";\nimport \"@formatjs/intl-relativetimeformat/locale-data/en\";\nimport \"@formatjs/intl-pluralrules/polyfill\";\nimport \"@formatjs/intl-pluralrules/locale-data/en\";\n\nimport ReactDOM from \"react-dom\";\n\nimport ConfigController from \"./ApiClient/util/ConfigController\";\nimport JobsController from \"./ApiClient/util/JobsController\";\nimport { IndexApp } from \"./App\";\nimport { MODE, VERSION } from \"./definitions/constants\";\nimport initIcons from \"./utils/icolibrary\";\n\n// dont lag the dom\ninitIcons();\nConfigController.loadconfig();\nJobsController.init();\n\nif (window.loadedChannelFromWebpack && MODE !== \"DEV\") {\n    alert(\n        \"Warning: channel.json was served from bundled files instead of TGS, the webpanel is running from the local version instead of the github update repo.\\nPlease report this to your server host.\\nIf you are the server host, please report this to alexkar598#2712 on discord\\n\\nWebpanel version: \" +\n            VERSION\n    );\n}\n\n// At some point, the webpanel had the ability to save passwords, this is however,\n// insecure as compromised webhosts can lead to code being served from an untrusted source,\n// leaking the saved password. Makes sure it's not there anymore\ntry {\n    window.localStorage.removeItem(\"username\");\n    window.sessionStorage.removeItem(\"username\");\n    window.localStorage.removeItem(\"password\");\n    window.sessionStorage.removeItem(\"password\");\n} catch {\n    (() => {})();\n}\n\nfunction mountApp() {\n    ReactDOM.render(IndexApp, document.getElementById(\"root\"));\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", mountApp);\nif (document.readyState === \"interactive\" || document.readyState === \"complete\") {\n    mountApp();\n}\n","import { TypedEmitter } from \"tiny-typed-emitter/lib\";\n\nimport LoginHooks from \"../ApiClient/util/LoginHooks\";\nimport {\n    AppCategories,\n    AppRoute,\n    AppRoutes,\n    UnpopulatedAppCategories,\n    UnpopulatedAppCategory\n} from \"./routes\";\n\ninterface IEvents {\n    refresh: (routes: Array<AppRoute>) => void; //auth\n    refreshAll: (routes: Array<AppRoute>) => void; //noauth+auth\n}\n\n//helper class to process AppRoutes\nclass RouteController extends TypedEmitter<IEvents> {\n    private refreshing = false;\n\n    public constructor() {\n        super();\n        window.rtcontroller = this;\n        this.refreshRoutes = this.refreshRoutes.bind(this);\n\n        LoginHooks.addHook(this.refreshRoutes);\n        this.refreshRoutes().catch(console.error);\n\n        //process categories\n        console.time(\"Category mapping\");\n        const catmap = new Map<string, UnpopulatedAppCategory>();\n\n        for (const [name, val] of Object.entries(UnpopulatedAppCategories)) {\n            val.routes = [];\n            //null asserted the name because that one is everywhere, even if the rest is partial\n            catmap.set(val.name!, val);\n            //@ts-expect-error typescript cannot infer that the name is a key of UnpopulatedAppCategories\n            AppCategories[name] = val;\n        }\n\n        for (const route of Object.values(AppRoutes)) {\n            if (!route.category) continue;\n\n            const cat = catmap.get(route.category);\n            if (!cat) {\n                console.error(\"Route has invalid category\", route);\n                continue;\n            }\n\n            //this is guaranteed to be an array as its set in the loop above\n            cat.routes!.push(route);\n\n            if (route.catleader) {\n                if (cat.leader) {\n                    console.error(\"Category has two leaders\", cat.leader, route);\n                    continue;\n                }\n                cat.leader = route;\n            }\n        }\n        console.log(\"Categories mapped\", catmap);\n        console.timeEnd(\"Category mapping\");\n    }\n\n    public async refreshRoutes() {\n        if (this.refreshing) {\n            console.log(\"Already refreshing\");\n            return;\n        } //no need to refresh twice\n\n        this.refreshing = true;\n\n        const work = []; //    we get all hidden routes no matter the authentification without waiting for the refresh\n        const routes = this.getImmediateRoutes(false);\n\n        for (const route of routes) {\n            route.cachedAuth = undefined;\n            if (route.isAuthorized) {\n                work.push(\n                    route.isAuthorized().then(auth => {\n                        route.cachedAuth = auth;\n                    })\n                );\n            } else {\n                route.cachedAuth = true;\n            }\n        }\n\n        await Promise.all(work); //wait for all the authorized calls to complete\n\n        this.emit(\"refresh\", this.getImmediateRoutes(true));\n        const routesNoAuth = this.getImmediateRoutes(false);\n        this.emit(\"refreshAll\", routesNoAuth);\n        this.refreshing = false;\n\n        console.log(\"Routes refreshed\", routesNoAuth);\n        return await this.getRoutes();\n    }\n\n    private wait4refresh() {\n        return new Promise<void>(resolve => {\n            if (!this.refreshing) {\n                resolve();\n                return;\n            }\n            this.on(\"refresh\", () => {\n                resolve();\n            });\n        });\n    }\n\n    public async getRoutes(auth = true): Promise<AppRoute[]> {\n        await this.wait4refresh();\n\n        return this.getImmediateRoutes(auth);\n    }\n\n    public getImmediateRoutes(auth = true) {\n        const results: Array<AppRoute> = [];\n\n        for (const val of Object.values(AppRoutes)) {\n            //we check for isauthorized here without calling because routes that lack the function are public\n            if (val.isAuthorized && !val.cachedAuth && auth) continue; //if not authorized and we only show authorized routes\n\n            results.push(val);\n        }\n\n        return results;\n    }\n}\n\nexport default new RouteController();\n","import { pathToRegexp } from \"path-to-regexp\";\n\nimport {\n    AdministrationRights,\n    ChatBotRights,\n    ConfigurationRights,\n    DreamDaemonRights,\n    DreamMakerRights,\n    EngineRights,\n    InstanceManagerRights,\n    InstancePermissionSetResponse,\n    InstancePermissionSetRights,\n    PermissionSet,\n    RepositoryRights,\n    UserResponse\n} from \"../ApiClient/generatedcode/generated\";\n\nexport type DistributiveOmit<T, K extends keyof T> = T extends T ? Omit<T, K> : never;\n\nfunction download(filename: string, text: string): void {\n    const element = document.createElement(\"a\");\n    element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    element.setAttribute(\"download\", filename);\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nfunction replaceAll(str: string, find: string, replace: string, ignore?: boolean): string {\n    return str.replace(\n        new RegExp(find.replace(/([/,!\\\\^${}[\\]().*+?|<>\\-&])/g, \"\\\\$&\"), ignore ? \"gi\" : \"g\"),\n        replace.replace(/\\$/g, \"$$$$\")\n    );\n}\n\nfunction matchesPath(path: string, target: string, exact = false): boolean {\n    //remove trailing slashes\n    if (path.slice(-1) === \"/\") path = path.slice(0, -1);\n    if (target.slice(-1) === \"/\") target = target.slice(0, -1);\n\n    return pathToRegexp(target, undefined, { end: exact }).test(path);\n}\n\nfunction resolvePermissionSet(user: UserResponse): PermissionSet {\n    return (user.permissionSet ?? user.group?.permissionSet) as PermissionSet;\n}\n\nfunction bitflagIsTrue(bitfield: number, bitflag: number): boolean {\n    return !!(bitflag & bitfield);\n}\n\nfunction hasAdminRight(permissionSet: PermissionSet, right: AdministrationRights): boolean {\n    return bitflagIsTrue(permissionSet.administrationRights, right);\n}\n\nfunction hasInstanceManagerRight(\n    permissionSet: PermissionSet,\n    right: InstanceManagerRights\n): boolean {\n    return bitflagIsTrue(permissionSet.instanceManagerRights, right);\n}\n\nfunction hasEngineRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: EngineRights\n): boolean {\n    return bitflagIsTrue(permissionSet.engineRights, right);\n}\n\nfunction hasChatBotRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: ChatBotRights\n): boolean {\n    return bitflagIsTrue(permissionSet.chatBotRights, right);\n}\n\nfunction hasConfigRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: ConfigurationRights\n): boolean {\n    return bitflagIsTrue(permissionSet.configurationRights, right);\n}\n\nfunction hasDreamDaemonRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: DreamDaemonRights\n): boolean {\n    return bitflagIsTrue(permissionSet.dreamDaemonRights, right);\n}\n\nfunction hasDreamMakerRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: DreamMakerRights\n): boolean {\n    return bitflagIsTrue(permissionSet.dreamMakerRights, right);\n}\n\nfunction hasInstancePermRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: InstancePermissionSetRights\n): boolean {\n    return bitflagIsTrue(permissionSet.instancePermissionSetRights, right);\n}\n\nfunction hasRepoRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: RepositoryRights\n): boolean {\n    return bitflagIsTrue(permissionSet.repositoryRights, right);\n}\n\nfunction hasFilesRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: ConfigurationRights\n): boolean {\n    return bitflagIsTrue(permissionSet.configurationRights, right);\n}\n\nexport {\n    download,\n    replaceAll,\n    matchesPath,\n    resolvePermissionSet,\n    bitflagIsTrue,\n    hasAdminRight,\n    hasEngineRight,\n    hasConfigRight,\n    hasRepoRight,\n    hasChatBotRight,\n    hasInstancePermRight,\n    hasInstanceManagerRight,\n    hasDreamMakerRight,\n    hasDreamDaemonRight,\n    hasFilesRight\n};\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\nimport { AdministrationRights, InstanceManagerRights } from \"../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../ApiClient/models/InternalComms/InternalStatus\";\nimport UserClient from \"../ApiClient/UserClient\";\nimport CredentialsProvider from \"../ApiClient/util/CredentialsProvider\";\nimport { resolvePermissionSet } from \"./misc\";\n\nexport interface AppRoute {\n    ///Base parameters\n    //must be unique, also is the id of the route name message\n    name: string;\n    //must be unique, url to access\n    route: string;\n    //link to link to when linking to the route, defaults to the \"route\"\n    link?: string;\n    //filename in components/view that the route should display\n    file: string;\n\n    ///Path parameters\n    //If subpaths should route here\n    loose: boolean;\n    //If subpaths should light up the navbar button\n    navbarLoose: boolean;\n\n    ///Authentication\n    //if we can route to it even on the login page\n    loginless?: boolean;\n    //function to tell if we are authorized\n    isAuthorized?: () => Promise<boolean>;\n    //result of isAuthorized() after RouteController runs it, can be used by components but only set by RouteController\n    cachedAuth?: boolean;\n\n    ///Visibility\n    //if this shows up on the navbar\n    visibleNavbar: boolean;\n    //serves two purposes, first one is to give it an icon, the second one is to not display it if the icon is undefined\n    homeIcon?: IconProp;\n\n    ///Categories\n    //name of the category it belongs to\n    category?: string;\n    //if this is the main button in the category\n    catleader?: boolean;\n\n    ///Misc\n    //Should we not wrap this component in a <Container>?\n    noContainer?: boolean;\n}\n\nfunction adminRight(right: AdministrationRights) {\n    return async (): Promise<boolean> => {\n        if (!CredentialsProvider.hasToken()) return false;\n        const response = await UserClient.getCurrentUser();\n\n        if (response.code == StatusCode.OK) {\n            return !!(resolvePermissionSet(response.payload).administrationRights & right);\n        }\n        return false;\n    };\n}\n\nfunction instanceManagerRight(right: InstanceManagerRights) {\n    return async (): Promise<boolean> => {\n        if (!CredentialsProvider.hasToken()) return false;\n        const response = await UserClient.getCurrentUser();\n\n        if (response.code == StatusCode.OK) {\n            return !!(resolvePermissionSet(response.payload).instanceManagerRights & right);\n        }\n        return false;\n    };\n}\n\n//https://stackoverflow.com/questions/54598322/how-to-make-typescript-infer-the-keys-of-an-object-but-define-type-of-its-value\n//Infer the keys but restrict the values to a type\nconst asElementTypesAppRoute = <T>(et: { [K in keyof T]: AppRoute }) => et;\n\nconst AppRoutes = asElementTypesAppRoute({\n    home: {\n        name: \"routes.home\",\n        route: \"/\",\n        file: \"Home\",\n\n        loose: false,\n        navbarLoose: false,\n\n        visibleNavbar: true,\n        homeIcon: undefined,\n\n        category: \"home\",\n        catleader: true\n    },\n    instancecreate: {\n        name: \"routes.instancecreate\",\n        route: \"/instances/create\",\n        file: \"Instance/Create\",\n\n        loose: false,\n        navbarLoose: false,\n\n        isAuthorized: instanceManagerRight(InstanceManagerRights.Create),\n\n        visibleNavbar: false,\n\n        category: \"instance\",\n        catleader: false\n    },\n    instancelist: {\n        name: \"routes.instancelist\",\n        route: \"/instances/\",\n        file: \"Instance/List\",\n\n        loose: false,\n        navbarLoose: true,\n\n        isAuthorized: instanceManagerRight(InstanceManagerRights.List | InstanceManagerRights.Read),\n\n        visibleNavbar: true,\n        homeIcon: \"hdd\",\n\n        category: \"instance\",\n        catleader: true\n    },\n    instanceedit: {\n        name: \"routes.instanceedit\",\n        route: \"/instances/edit/:id(\\\\d+)/:tab?/\",\n        file: \"Instance/InstanceEdit\",\n\n        get link(): string {\n            return RouteData.selectedinstanceid !== undefined\n                ? `/instances/edit/${RouteData.selectedinstanceid}/${\n                      RouteData.selectedinstanceedittab !== undefined\n                          ? `${RouteData.selectedinstanceedittab}/`\n                          : \"\"\n                  }`\n                : AppRoutes.instancelist.link ?? AppRoutes.instancelist.route;\n        },\n\n        loose: false,\n        navbarLoose: true,\n\n        visibleNavbar: true,\n        homeIcon: undefined,\n\n        category: \"instance\"\n    },\n    instancejobs: {\n        name: \"routes.instancejobs\",\n        route: \"/instances/jobs/\",\n        file: \"Instance/Jobs\",\n\n        loose: false,\n        navbarLoose: true,\n\n        visibleNavbar: true,\n        homeIcon: undefined,\n\n        category: \"instance\"\n    },\n    userlist: {\n        name: \"routes.usermanager\",\n        route: \"/users/\",\n        file: \"User/List\",\n\n        loose: false,\n        navbarLoose: true,\n\n        visibleNavbar: true,\n        homeIcon: \"user\",\n\n        category: \"user\",\n        catleader: true\n    },\n    useredit: {\n        name: \"routes.useredit\",\n        route: \"/users/edit/user/:id(\\\\d+)/:tab?/\",\n\n        //whole lot of bullshit just to make it that if you have an id, link to the edit page, otherwise link to the list page, and if you link to the user page, put the tab in\n        get link(): string {\n            return RouteData.selecteduserid !== undefined\n                ? `/users/edit/user/${RouteData.selecteduserid}/${\n                      RouteData.selectedusertab !== undefined ? `${RouteData.selectedusertab}/` : \"\"\n                  }`\n                : AppRoutes.userlist.link ?? AppRoutes.userlist.route;\n        },\n        file: \"User/Edit\",\n\n        loose: true,\n        navbarLoose: true,\n\n        visibleNavbar: true,\n        homeIcon: undefined,\n\n        category: \"user\"\n    },\n    usercreate: {\n        name: \"routes.usercreate\",\n        route: \"/users/create/\",\n\n        link: \"/users/create/\",\n        file: \"User/Create\",\n\n        loose: true,\n        navbarLoose: true,\n\n        isAuthorized: adminRight(AdministrationRights.WriteUsers),\n\n        visibleNavbar: true,\n        homeIcon: undefined,\n\n        category: \"user\"\n    },\n    admin: {\n        name: \"routes.admin\",\n        route: \"/admin/\",\n        file: \"Administration\",\n\n        loose: false,\n        navbarLoose: true,\n\n        isAuthorized: adminRight(\n            AdministrationRights.ChangeVersion |\n                AdministrationRights.DownloadLogs |\n                AdministrationRights.UploadVersion\n        ),\n\n        visibleNavbar: true,\n        homeIcon: \"tools\",\n\n        category: \"admin\",\n        catleader: true\n    },\n    admin_update: {\n        name: \"routes.admin.update\",\n        route: \"/admin/update/:all?/\",\n        file: \"Admin/Update\",\n\n        link: \"/admin/update/\",\n\n        loose: true,\n        navbarLoose: true,\n\n        isAuthorized: adminRight(\n            AdministrationRights.ChangeVersion | AdministrationRights.UploadVersion\n        ),\n        visibleNavbar: true,\n        homeIcon: undefined,\n\n        category: \"admin\"\n    },\n    admin_logs: {\n        name: \"routes.admin.logs\",\n        route: \"/admin/logs/:name?/\",\n        link: \"/admin/logs/\",\n        file: \"Admin/Logs\",\n\n        loose: false,\n        navbarLoose: true,\n\n        isAuthorized: adminRight(AdministrationRights.DownloadLogs),\n        visibleNavbar: true,\n        homeIcon: undefined,\n\n        category: \"admin\",\n\n        noContainer: true\n    },\n    passwd: {\n        name: \"routes.passwd\",\n        route: \"/users/passwd/:id(\\\\d+)?/\",\n        link: \"/users/passwd/\",\n        file: \"ChangePassword\",\n\n        loose: true,\n        navbarLoose: true,\n\n        isAuthorized: adminRight(AdministrationRights.EditOwnPassword),\n\n        visibleNavbar: false,\n        homeIcon: \"key\"\n    },\n    config: {\n        name: \"routes.config\",\n        route: \"/config/\",\n        file: \"Configuration\",\n\n        loose: true,\n        navbarLoose: true,\n\n        loginless: true,\n\n        visibleNavbar: false,\n        homeIcon: \"cogs\"\n    },\n    setup: {\n        name: \"routes.setup\",\n        route: \"/setup/\",\n        file: \"Setup\",\n\n        loose: true,\n        navbarLoose: true,\n\n        loginless: true,\n\n        visibleNavbar: false\n    },\n    oAuth: {\n        name: \"routes.oauth\",\n        route: \"/oauth/:provider?/\",\n        file: \"Login\",\n\n        loose: true,\n        navbarLoose: false,\n\n        loginless: true,\n\n        visibleNavbar: false\n    },\n    info: {\n        name: \"routes.info\",\n        route: \"/info\",\n        file: \"Info\",\n\n        loose: false,\n        navbarLoose: false,\n\n        loginless: true,\n\n        visibleNavbar: true,\n        homeIcon: \"info-circle\",\n\n        category: undefined,\n        catleader: false\n    }\n});\n\nexport { AppRoutes };\n\n//https://stackoverflow.com/questions/54598322/how-to-make-typescript-infer-the-keys-of-an-object-but-define-type-of-its-value\n//Infer the keys but restrict the values to a type\nconst asElementTypesCategory = <T>(et: { [K in keyof T]: UnpopulatedAppCategory }) => et;\n\nexport type UnpopulatedAppCategory = Partial<AppCategory>;\n\nexport interface AppCategory {\n    name: string; //doesnt really matter, kinda bullshit\n    routes: AppRoute[];\n    leader: AppRoute;\n}\n\nexport const UnpopulatedAppCategories = asElementTypesCategory({\n    home: {\n        name: \"home\"\n    },\n    instance: {\n        name: \"instance\"\n    },\n    user: {\n        name: \"user\"\n    },\n    admin: {\n        name: \"admin\"\n    }\n});\n\n// @ts-expect-error This is populated in the constructor after its populated\nexport const AppCategories: { [K in keyof typeof UnpopulatedAppCategories]: AppCategory } = {};\n\nexport const RouteData = {\n    selecteduserid: undefined as undefined | number,\n    selectedusertab: undefined as undefined | string,\n\n    selectedinstanceid: undefined as undefined | number,\n    selectedinstanceedittab: undefined as undefined | string,\n\n    instancelistpage: undefined as undefined | number,\n    loglistpage: undefined as undefined | number,\n    byondlistpage: undefined as undefined | number,\n    userlistpage: undefined as undefined | number,\n    jobhistorypage: new Map<number, number>(),\n\n    oautherrors: [] as InternalError<ErrorCode>[]\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./logo.svg\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".App {\\n    background-size: 50%;\\n    background: #1e1e1e url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") no-repeat center;\\n    position: absolute;\\n    width: 100%;\\n    top: 0;\\n    bottom: 0;\\n    display: grid;\\n}\\n\\n.App-error {\\n    color: red;\\n    font-size: 150%;\\n    margin: auto;\\n}\\n\\n.App-main {\\n    display: grid;\\n}\\n\\n.Root {\\n    overflow: hidden;\\n    display: grid;\\n    grid-template-rows: 9% auto;\\n}\\n\\n.Root-login {\\n    display: grid;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,oBAAoB;IACpB,4EAAkD;IAClD,kBAAkB;IAClB,WAAW;IACX,MAAM;IACN,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,aAAa;AACjB\",\"sourcesContent\":[\".App {\\n    background-size: 50%;\\n    background: #1e1e1e url(logo.svg) no-repeat center;\\n    position: absolute;\\n    width: 100%;\\n    top: 0;\\n    bottom: 0;\\n    display: grid;\\n}\\n\\n.App-error {\\n    color: red;\\n    font-size: 150%;\\n    margin: auto;\\n}\\n\\n.App-main {\\n    display: grid;\\n}\\n\\n.Root {\\n    overflow: hidden;\\n    display: grid;\\n    grid-template-rows: 9% auto;\\n}\\n\\n.Root-login {\\n    display: grid;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tgs-update-notification {\\n    color: #66ff07;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/AppNavbar.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,cAAc;AAClB\",\"sourcesContent\":[\".tgs-update-notification {\\n    color: #66ff07;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var map = {\n\t\"./Admin/Logs\": [\n\t\t43408,\n\t\t171,\n\t\t408\n\t],\n\t\"./Admin/Logs.tsx\": [\n\t\t43408,\n\t\t171,\n\t\t408\n\t],\n\t\"./Admin/Update\": [\n\t\t80732,\n\t\t171,\n\t\t578,\n\t\t6,\n\t\t724,\n\t\t732\n\t],\n\t\"./Admin/Update.tsx\": [\n\t\t80732,\n\t\t171,\n\t\t578,\n\t\t6,\n\t\t724,\n\t\t732\n\t],\n\t\"./Administration\": [\n\t\t29363,\n\t\t171,\n\t\t363\n\t],\n\t\"./Administration.tsx\": [\n\t\t29363,\n\t\t171,\n\t\t363\n\t],\n\t\"./ChangePassword\": [\n\t\t61304,\n\t\t799\n\t],\n\t\"./ChangePassword.tsx\": [\n\t\t61304,\n\t\t799\n\t],\n\t\"./Configuration\": [\n\t\t67671,\n\t\t671\n\t],\n\t\"./Configuration.tsx\": [\n\t\t67671,\n\t\t671\n\t],\n\t\"./Home\": [\n\t\t59638,\n\t\t638\n\t],\n\t\"./Home.tsx\": [\n\t\t59638,\n\t\t638\n\t],\n\t\"./Info\": [\n\t\t41051,\n\t\t171,\n\t\t51\n\t],\n\t\"./Info.tsx\": [\n\t\t41051,\n\t\t171,\n\t\t51\n\t],\n\t\"./Instance/Create\": [\n\t\t38747,\n\t\t899,\n\t\t856,\n\t\t637,\n\t\t756,\n\t\t611,\n\t\t578,\n\t\t6,\n\t\t747\n\t],\n\t\"./Instance/Create.tsx\": [\n\t\t38747,\n\t\t899,\n\t\t856,\n\t\t637,\n\t\t756,\n\t\t611,\n\t\t578,\n\t\t6,\n\t\t747\n\t],\n\t\"./Instance/Edit/ChatBots\": [\n\t\t90740,\n\t\t767,\n\t\t171,\n\t\t740,\n\t\t318\n\t],\n\t\"./Instance/Edit/ChatBots.tsx\": [\n\t\t90740,\n\t\t767,\n\t\t171,\n\t\t740,\n\t\t318\n\t],\n\t\"./Instance/Edit/Config\": [\n\t\t62685,\n\t\t171,\n\t\t685\n\t],\n\t\"./Instance/Edit/Config.tsx\": [\n\t\t62685,\n\t\t171,\n\t\t685\n\t],\n\t\"./Instance/Edit/Deployment\": [\n\t\t44298,\n\t\t899,\n\t\t856,\n\t\t171,\n\t\t578,\n\t\t240,\n\t\t67,\n\t\t356\n\t],\n\t\"./Instance/Edit/Deployment.tsx\": [\n\t\t44298,\n\t\t899,\n\t\t856,\n\t\t171,\n\t\t578,\n\t\t240,\n\t\t67,\n\t\t356\n\t],\n\t\"./Instance/Edit/Engine\": [\n\t\t32240,\n\t\t899,\n\t\t171,\n\t\t578,\n\t\t240,\n\t\t657\n\t],\n\t\"./Instance/Edit/Engine.tsx\": [\n\t\t32240,\n\t\t899,\n\t\t171,\n\t\t578,\n\t\t240,\n\t\t657\n\t],\n\t\"./Instance/Edit/Files\": [\n\t\t20926,\n\t\t637,\n\t\t171,\n\t\t926,\n\t\t608\n\t],\n\t\"./Instance/Edit/Files.tsx\": [\n\t\t20926,\n\t\t637,\n\t\t171,\n\t\t926,\n\t\t608\n\t],\n\t\"./Instance/Edit/InstancePermissions\": [\n\t\t87345,\n\t\t803,\n\t\t171,\n\t\t345,\n\t\t246\n\t],\n\t\"./Instance/Edit/InstancePermissions.tsx\": [\n\t\t87345,\n\t\t803,\n\t\t171,\n\t\t345,\n\t\t246\n\t],\n\t\"./Instance/Edit/JobHistory\": [\n\t\t25921,\n\t\t171,\n\t\t921\n\t],\n\t\"./Instance/Edit/JobHistory.tsx\": [\n\t\t25921,\n\t\t171,\n\t\t921\n\t],\n\t\"./Instance/Edit/Repository\": [\n\t\t18264,\n\t\t856,\n\t\t611,\n\t\t171,\n\t\t578,\n\t\t757,\n\t\t264,\n\t\t233\n\t],\n\t\"./Instance/Edit/Repository.tsx\": [\n\t\t18264,\n\t\t856,\n\t\t611,\n\t\t171,\n\t\t578,\n\t\t757,\n\t\t264,\n\t\t233\n\t],\n\t\"./Instance/Edit/Server\": [\n\t\t86046,\n\t\t899,\n\t\t756,\n\t\t171,\n\t\t578,\n\t\t240,\n\t\t67,\n\t\t792\n\t],\n\t\"./Instance/Edit/Server.tsx\": [\n\t\t86046,\n\t\t899,\n\t\t756,\n\t\t171,\n\t\t578,\n\t\t240,\n\t\t67,\n\t\t792\n\t],\n\t\"./Instance/InstanceEdit\": [\n\t\t9182,\n\t\t899,\n\t\t856,\n\t\t637,\n\t\t756,\n\t\t611,\n\t\t803,\n\t\t767,\n\t\t171,\n\t\t578,\n\t\t757,\n\t\t165,\n\t\t240,\n\t\t67,\n\t\t264,\n\t\t740,\n\t\t926,\n\t\t345,\n\t\t182\n\t],\n\t\"./Instance/InstanceEdit.tsx\": [\n\t\t9182,\n\t\t899,\n\t\t856,\n\t\t637,\n\t\t756,\n\t\t611,\n\t\t803,\n\t\t767,\n\t\t171,\n\t\t578,\n\t\t757,\n\t\t165,\n\t\t240,\n\t\t67,\n\t\t264,\n\t\t740,\n\t\t926,\n\t\t345,\n\t\t182\n\t],\n\t\"./Instance/Jobs\": [\n\t\t41818,\n\t\t818\n\t],\n\t\"./Instance/Jobs.tsx\": [\n\t\t41818,\n\t\t818\n\t],\n\t\"./Instance/List\": [\n\t\t70670,\n\t\t171,\n\t\t670\n\t],\n\t\"./Instance/List.tsx\": [\n\t\t70670,\n\t\t171,\n\t\t670\n\t],\n\t\"./Login\": [\n\t\t9310\n\t],\n\t\"./Login.tsx\": [\n\t\t9310\n\t],\n\t\"./Setup\": [\n\t\t12757,\n\t\t666\n\t],\n\t\"./Setup.tsx\": [\n\t\t12757,\n\t\t666\n\t],\n\t\"./User/Create\": [\n\t\t14898,\n\t\t898\n\t],\n\t\"./User/Create.tsx\": [\n\t\t14898,\n\t\t898\n\t],\n\t\"./User/Edit\": [\n\t\t11404,\n\t\t803,\n\t\t171,\n\t\t404\n\t],\n\t\"./User/Edit.tsx\": [\n\t\t11404,\n\t\t803,\n\t\t171,\n\t\t404\n\t],\n\t\"./User/List\": [\n\t\t8746,\n\t\t171,\n\t\t746\n\t],\n\t\"./User/List.tsx\": [\n\t\t8746,\n\t\t171,\n\t\t746\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 66235;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en.json\": [\n\t\t2422,\n\t\t422\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 862;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"6\":\"8be2a144a2793570315b\",\"51\":\"018c826056e10797488e\",\"67\":\"d56fce4f5250e06063bf\",\"165\":\"ba83e5a7e5ce7342f32c\",\"171\":\"91936e72280a3d6afb03\",\"182\":\"863e8e49ed9d42931724\",\"233\":\"bca5af88bf85dd9388cf\",\"240\":\"9d4d9c96f62ce48cce5f\",\"246\":\"67f9678139a3c824ae5c\",\"264\":\"6bc80619e126b48208c1\",\"318\":\"262f7ca0e51a961f2197\",\"345\":\"463f4581d9005d5a1f8f\",\"356\":\"8162c10f9d74465626fb\",\"363\":\"d935e8c7446b49ba6955\",\"370\":\"d23700bdb9e4969823c6\",\"404\":\"a8f6c9632768de417c6c\",\"408\":\"67a24726289357584bda\",\"422\":\"6ffa6fbbf00a7aa4137e\",\"578\":\"b30e90acaefb17f3a915\",\"608\":\"cdba29b0c970b4473f8d\",\"611\":\"9c4e031ea3c5676ddc02\",\"637\":\"67f97d250d5cc7c88b41\",\"638\":\"22ae8c317d679c0fbe03\",\"657\":\"ebfcf366f770219cda87\",\"666\":\"466319a2ec0bfe75619b\",\"670\":\"f23545dfb1fa34187665\",\"671\":\"d70d3c2a0ea3e94cdaa3\",\"685\":\"d842923a8b4fb2925914\",\"724\":\"37608abcbb4a745b53ee\",\"732\":\"26d1b1972e8409d84e2b\",\"740\":\"ff042fc269d749115529\",\"746\":\"24e79402e2a97d9d230f\",\"747\":\"a7a7de444f0f31df471a\",\"756\":\"3ea7efa9992f327c4f5e\",\"757\":\"cd59822a9cafc5472de2\",\"767\":\"2226708e286478875491\",\"792\":\"d0502c03902c2b81a3bc\",\"799\":\"5f592f7ea70157f79ee3\",\"803\":\"e84dc0cafa5ef825835a\",\"818\":\"de10c00448eedd21537d\",\"856\":\"4c7ce7828aeda2beaebd\",\"898\":\"506fa6125431a4f5701d\",\"899\":\"40a4d85a43cf77edbe66\",\"921\":\"d5768a750d900f116d8c\",\"926\":\"9721f261bd7f5a7449df\"}[chunkId] + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"https://tgstation.github.io/tgstation-server-webpanel/webpanel/5.7.1/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktgstation_server_control_panel\"] = self[\"webpackChunktgstation_server_control_panel\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [607,338,340], function() { return __webpack_require__(16143); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","AccessDenied","React","render","title","variant","className","onClick","this","props","history","goBack","id","withRouter","ErrorAlert","Component","constructor","super","state","popup","error","handleClose","setState","dismissible","onClose","code","centered","show","onHide","size","closeButton","desc","type","DescType","VERSION","MODE","API_VERSION","extendedInfo","replace","addError","setErrors","prevState","errors","Array","from","push","displayErrors","map","err","index","key","prev","newarr","undefined","GenericAlert","body","children","JobError","open","setOpen","useState","Button","values","info","job","errorCode","TGSErrorCode","Modal","description","exceptionDetails","JobCard","createddate","Date","startedAt","createddiff","getTime","now","stoppeddiff","stoppedAt","cancelled","Toast","style","maxWidth","width","ToastHeader","ToastBody","stage","OverlayTrigger","overlay","Tooltip","toLocaleString","ref","triggerHandler","value","numeric","updateIntervalInSeconds","startedBy","name","cancelledBy","height","ProgressBar","animated","label","progress","toString","striped","canCancel","padding","onCancel","icon","JobsList","widgetRef","currentTimeout","handleUpdate","bind","jobs","JobsController","nextRetrySeconds","ownerrors","loading","instances","Map","current","scrollTop","componentDidMount","componentWillUnmount","clearTimeout","getSeconds","setTimeout","widget","nested","display","totalJobs","configOptions","jobsWidgetOptions","length","position","top","bottom","right","left","pointerEvents","zIndex","default","x","document","documentElement","clientWidth","Math","min","y","clientHeight","minHeight","minWidth","bounds","text","seconds","sort","a","b","instanceid","jobMap","xFinishedEnabled","forEach","instanceHeaderStyle","marginTop","marginLeft","renderTooltip","get","amount","placement","faTimes","defaultProps","Loading","animation","center","widthUnit","otherprops","styles","appear","classNames","addEndListener","node","done","addEventListener","Login","submit","console","log","RouteData","busy","validated","username","password","window","sessionStorage","getItem","CredentialsProvider","CredentialsType","tryLoginDefault","loggedOut","ServerClient","StatusCode","redirectSetup","context","serverInfo","providers","OAuthProvider","faGithub","faDiscord","src","alt","faInvision","providersTheme","GitHub","Discord","TGForums","Keycloak","InvisionCommunity","Col","lg","md","Card","Form","onSubmit","controlId","placeholder","onChange","event","target","required","block","oAuthProviderInfos","Object","keys","provider","ptheme","background","startOAuth","InternalError","ErrorCode","jsError","Error","stateArray","Uint8Array","crypto","getRandomValues","dec","padStart","join","url","e","encodeURIComponent","clientId","redirectUri","serverUrl","oauthdata","JSON","parse","location","pathname","setItem","stringify","href","Promise","resolve","preventDefault","response","userName","contextType","GeneralContext","_API_VERSION","_VERSION","_MODE","_DEFAULT_BASEPATH","DEFAULT_BASEPATH","_DEFAULT_APIPATH","DEFAULT_APIPATH","publicPath","__webpack_public_path__","options","AppNavbar","logoutClick","loginSuccess","logout","refresh","routes","categories","AppCategories","updateAvailable","checkShowServerUpdateIcon","userResponse","UserClient","user","payload","permissionSet","resolvePermissionSet","hasAdminRight","AdministrationRights","AdminClient","latestVersion","SemVer","currentVersion","version","compare","LoginHooks","RouteController","Navbar","expand","loggedIn","collapseOnSelect","bg","AppRoutes","reload","renderVersion","Nav","cat","leader","cachedAuth","link","route","active","matchesPath","navbarLoose","NavDropdown","filter","val","catleader","visibleNavbar","faExclamationCircle","renderUser","Dropdown","alignRight","Logo","memeSelector","onToggle","showing","round","random","ReportIssue","faExclamationTriangle","ErrorBoundary","componentDidUpdate","prevProps","errorInfo","componentDidCatch","Container","border","message","as","componentStack","Reload","clear","match","path","LoadSpin","page","NotFound","loadable","fallback","Router","refreshListener","components","set","file","URLSearchParams","search","listen","listener","URLSearch","replaceState","oauthstate","setErrorAndEnd","token","removeItem","category","selectCategory","loginless","exact","loose","Comp","noContainer","Locales","en","Translation","locale","messages","TranslationFactory","split","localization","shortHandedLocale","getShortHandedLocale","fallbackLocale","loadTranslation","model","InnerApp","Pkg","ctrlKey","shiftKey","basename","URL","passdownCat","Alert","idx","deleteError","App","translationFactory","finishLogin","finishLogout","updateContextUser","updateContextServer","deleteGeneralContextError","GeneralContextInfo","Set","newSet","add","lastError","delete","then","loggedInSuccessfully","translationError","translation","defaultLocale","time","timeEnd","IndexApp","library","faCheck","faUser","faUserSlash","faHdd","faSync","faPlus","faQuestion","faHome","faTools","faCogs","faUndo","faInfo","faGripLinesVertical","faAngleRight","faKey","faPen","faTrash","faInfoCircle","faGitAlt","faHammer","faListUl","faComments","faFolderOpen","faUsers","faCodeBranch","faSearch","faServer","faStream","faLock","faMinus","faUnlock","faCaretRight","faCaretDown","faComment","faHashtag","faFolderPlus","faFolderMinus","faFile","faFileAlt","faClipboard","faArrowLeft","faUpload","faGamepad","ConfigController","loadedChannelFromWebpack","alert","localStorage","mountApp","ReactDOM","getElementById","readyState","TypedEmitter","refreshing","rtcontroller","refreshRoutes","catch","catmap","entries","UnpopulatedAppCategories","work","getImmediateRoutes","isAuthorized","auth","all","emit","routesNoAuth","getRoutes","wait4refresh","on","results","download","filename","element","createElement","setAttribute","appendChild","click","removeChild","replaceAll","str","find","ignore","RegExp","slice","pathToRegexp","end","test","group","bitflagIsTrue","bitfield","bitflag","administrationRights","hasInstanceManagerRight","instanceManagerRights","hasEngineRight","engineRights","hasChatBotRight","chatBotRights","hasDreamDaemonRight","dreamDaemonRights","hasDreamMakerRight","dreamMakerRights","hasInstancePermRight","instancePermissionSetRights","hasRepoRight","repositoryRights","hasFilesRight","configurationRights","adminRight","async","instanceManagerRight","home","homeIcon","instancecreate","InstanceManagerRights","instancelist","instanceedit","selectedinstanceid","selectedinstanceedittab","instancejobs","userlist","useredit","selecteduserid","selectedusertab","usercreate","admin","admin_update","admin_logs","passwd","config","setup","oAuth","instance","instancelistpage","loglistpage","byondlistpage","userlistpage","jobhistorypage","oautherrors","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","module","webpackAsyncContext","req","__webpack_require__","o","ids","exports","t","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","getPrototypeOf","obj","__proto__","mode","ns","create","def","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","reduce","promises","u","g","globalThis","Function","prop","prototype","hasOwnProperty","l","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","onScriptComplete","onerror","onload","doneFns","parentNode","head","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}