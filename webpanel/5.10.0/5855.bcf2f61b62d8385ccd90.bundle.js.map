{"version":3,"file":"5855.bcf2f61b62d8385ccd90.bundle.js","mappings":"ybAIA,MAAMA,EAAqBC,EAAAA,MAAW,IAAM,2DAc7B,MAAMC,UAAgBD,EAAAA,UAQ1BE,SACH,OACI,gBAAC,EAAAC,SAAD,CAAUC,SAAUC,KAAKC,iBACrB,gBAACP,EAAD,KAAqBM,KAAKC,kBAK9BA,gBACJ,MAAM,QACFC,EADE,UAEFC,EAFE,OAGFC,EAHE,UAIFC,EAJE,MAKFC,EALE,UAMFC,EANE,KAOFC,EAPE,SAQFC,KACGC,GACHV,KAAKW,MACHC,EAA8B,CAChCN,MAAQ,GAAEA,IAAQC,IAClBM,OAAS,GAAEP,IAAQC,KAGvB,OACI,uBAAKF,UAAWD,EAAS,cAAgB,IACrC,gBAAC,IAAD,GACIF,QAASA,GAAoB,YAC7BG,UAAWD,EAAU,mBAAkBC,GAAa,KAAOA,EAC3DS,MAAOF,EACPT,UAAWA,GAAwB,UAC/BO,IAEPF,EAAOR,KAAKW,MAAMI,OAASP,EAAO,gBAAC,IAAD,CAAkBQ,GAAIR,IAAW,GACnEC,IA3CIb,EACHqB,aAAe,CACzBd,UAAW,SACXG,MAAO,KACPC,UAAW,OACXH,QAAQ","sources":["webpack://tgstation-server-control-panel/./src/components/utils/Loading.tsx"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport Spinner, { SpinnerProps } from \"react-bootstrap/Spinner\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst CssTransitionGroup = React.lazy(() => import(\"./CssTransitionGroup\"));\n\ntype IProps = SpinnerProps & {\n    animation: \"border\" | \"grow\";\n    center: boolean;\n    width: number;\n    widthUnit: string;\n    className?: string;\n    text?: string;\n    noIntl?: boolean;\n};\n\ninterface IState {}\n\nexport default class Loading extends React.Component<IProps, IState> {\n    public static defaultProps = {\n        animation: \"border\",\n        width: \"50\",\n        widthUnit: \"vmin\",\n        center: true\n    };\n\n    public render(): React.ReactNode {\n        return (\n            <Suspense fallback={this.renderSpinner()}>\n                <CssTransitionGroup>{this.renderSpinner()}</CssTransitionGroup>\n            </Suspense>\n        );\n    }\n\n    private renderSpinner(): NonNullable<React.ReactNode> {\n        const {\n            variant,\n            animation,\n            center,\n            className,\n            width,\n            widthUnit,\n            text,\n            children,\n            ...otherprops\n        } = this.props;\n        const styles: React.CSSProperties = {\n            width: `${width}${widthUnit}`,\n            height: `${width}${widthUnit}`\n        } as React.CSSProperties;\n\n        return (\n            <div className={center ? \"text-center\" : \"\"}>\n                <Spinner\n                    variant={variant ? variant : \"secondary\"}\n                    className={center ? `d-block mx-auto ${className ?? \"\"}` : className}\n                    style={styles}\n                    animation={animation ? animation : \"border\"}\n                    {...otherprops}\n                />\n                {text ? this.props.noIntl ? text : <FormattedMessage id={text} /> : \"\"}\n                {children}\n            </div>\n        );\n    }\n}\n"],"names":["CssTransitionGroup","React","Loading","render","Suspense","fallback","this","renderSpinner","variant","animation","center","className","width","widthUnit","text","children","otherprops","props","styles","height","style","noIntl","id","defaultProps"],"sourceRoot":""}