{"version":3,"file":"1404.eee1507f2fa3dbc428f1.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./node_modules/@fortawesome/free-solid-svg-icons/faPlus.js","webpack://tgstation-server-control-panel/./node_modules/@fortawesome/free-solid-svg-icons/faTrash.js","webpack://tgstation-server-control-panel/./src/components/utils/JsonViewer.tsx","webpack://tgstation-server-control-panel/./src/components/utils/UserBadges.tsx","webpack://tgstation-server-control-panel/./src/utils/globalObjects.ts","webpack://tgstation-server-control-panel/./src/components/views/User/Edit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Badge.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/InputGroup.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Row.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tabs.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'plus';\nvar width = 448;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f067';\nvar svgPathData = 'M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faPlus = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'trash';\nvar width = 448;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f1f8';\nvar svgPathData = 'M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faTrash = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","import React from \"react\";\nimport ReactJson from \"react-json-view\";\n\nimport configOptions from \"../../ApiClient/util/config\";\n\nexport default function JsonViewer(props: { obj: unknown }): JSX.Element {\n    return (\n        <ReactJson\n            src={props.obj as Record<string, unknown>}\n            name={\"JSON\"}\n            theme=\"tube\"\n            iconStyle=\"triangle\"\n            collapsed\n            displayDataTypes={false}\n        />\n    );\n}\n\nexport function DebugJsonViewer(props: { obj: unknown }): JSX.Element {\n    if (!configOptions.showjson.value) {\n        return <></>;\n    }\n    return (\n        <div className=\"text-left\">\n            <JsonViewer obj={props.obj} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { UserResponse } from \"../../ApiClient/generatedcode/generated\";\n\ninterface IProps {\n    user: UserResponse;\n}\n\ninterface IState {}\n\nexport default class UserBadges extends React.Component<IProps, IState> {\n    public render(): React.ReactNode {\n        const user = this.props.user;\n        return (\n            <React.Fragment>\n                {user.systemIdentifier ? (\n                    <Badge variant=\"primary\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.system.short\" />\n                    </Badge>\n                ) : (\n                    <Badge variant=\"primary\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.tgs\" />\n                    </Badge>\n                )}\n                {user.enabled ? (\n                    <Badge variant=\"success\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.enabled\" />\n                    </Badge>\n                ) : (\n                    <Badge variant=\"danger\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.disabled\" />\n                    </Badge>\n                )}\n                {user.group ? (\n                    <Badge variant=\"warning\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.grouped\" />\n                    </Badge>\n                ) : null}\n            </React.Fragment>\n        );\n    }\n}\n","//this should be a proper data store thing eventually but it will do 4 now\nimport Translation from \"../translations/Translation\";\n\nexport interface GlobalObjects {\n    translation?: Translation;\n    setupMode?: boolean;\n}\n\nexport const GlobalObjects: GlobalObjects = {};\n","import { faCheck, faPen, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons/faTrash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FormEvent } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Row from \"react-bootstrap/Row\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage, FormattedRelativeTime } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    AdministrationRights,\n    InstanceManagerRights,\n    OAuthConnection,\n    OAuthProvider,\n    PermissionSet,\n    UserGroup,\n    UserGroupResponse,\n    UserResponse\n} from \"../../../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport UserClient from \"../../../ApiClient/UserClient\";\nimport UserGroupClient from \"../../../ApiClient/UserGroupClient\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport { GlobalObjects } from \"../../../utils/globalObjects\";\nimport { resolvePermissionSet } from \"../../../utils/misc\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport ErrorAlert from \"../../utils/ErrorAlert\";\nimport { DebugJsonViewer } from \"../../utils/JsonViewer\";\nimport Loading from \"../../utils/Loading\";\nimport UserBadges from \"../../utils/UserBadges\";\n\ninterface IProps extends RouteComponentProps<{ id: string; tab?: string }> {}\n\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    user?: UserResponse;\n    newOAuthConnections: OAuthConnection[];\n    loading: boolean;\n    saving: boolean;\n    permsadmin: { [key: string]: Permission };\n    permsinstance: { [key: string]: Permission };\n    tab: string;\n    groups: UserGroupResponse[];\n    renameGroup: UserGroupResponse | null;\n    renameGroupName: string | null;\n    createGroupName: string;\n}\n\ninterface Permission {\n    readonly bitflag: number;\n    readonly currentVal: boolean;\n}\n\nclass UserEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public constructor(props: IProps, context: GeneralContext) {\n        super(props);\n\n        this.createGroup = this.createGroup.bind(this);\n        this.changeGroup = this.changeGroup.bind(this);\n\n        if (!context.user) {\n            throw Error(\"UserEdit: this.context.user is null!\");\n        }\n\n        this.state = {\n            errors: [],\n            loading: true,\n            saving: false,\n            permsadmin: {},\n            permsinstance: {},\n            tab: props.match.params.tab ?? \"info\",\n            groups: context.user.group ? [Object.assign({ users: [] }, context.user.group)] : [],\n            renameGroup: null,\n            renameGroupName: null,\n            createGroupName: \"\",\n            newOAuthConnections: []\n        };\n\n        RouteData.selecteduserid = parseInt(props.match.params.id);\n        RouteData.selectedusertab = props.match.params.tab;\n    }\n\n    private get canEdit() {\n        return !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.WriteUsers\n        );\n    }\n\n    private get canRead() {\n        return !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.ReadUsers\n        );\n    }\n\n    private get canEditOwnPassword() {\n        const userid = parseInt(this.props.match.params.id);\n        return (\n            !!(\n                resolvePermissionSet(this.context.user).administrationRights &\n                AdministrationRights.EditOwnPassword\n            ) && this.context.user.id === userid\n        );\n    }\n\n    private get canEditOwnOAuth() {\n        const userid = parseInt(this.props.match.params.id);\n        return (\n            !!(\n                resolvePermissionSet(this.context.user).administrationRights &\n                AdministrationRights.EditOwnOAuthConnections\n            ) && this.context.user.id === userid\n        );\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IProps>) {\n        if (prevProps.match.params.tab !== this.props.match.params.tab) {\n            this.setState({\n                tab: this.props.match.params.tab ?? \"info\"\n            });\n        }\n    }\n\n    public async componentDidMount(): Promise<void> {\n        const userid = parseInt(this.props.match.params.id);\n        const response = await UserClient.getUser(userid);\n        switch (response.code) {\n            case StatusCode.ERROR: {\n                this.addError(response.error);\n                break;\n            }\n            case StatusCode.OK: {\n                this.loadUser(response.payload);\n                break;\n            }\n        }\n\n        await this.loadGroups();\n\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async loadGroups() {\n        if (!this.canRead) return;\n\n        const groups1 = await UserGroupClient.listGroups({ page: 1, pageSize: 100 });\n        if (groups1.code === StatusCode.OK) {\n            const groups = [...groups1.payload.content];\n            for (let i = 2; i <= groups1.payload.totalPages; i++) {\n                const groups2 = await UserGroupClient.listGroups({ page: i, pageSize: 100 });\n                if (groups2.code === StatusCode.ERROR) {\n                    this.addError(groups2.error);\n                    return;\n                } else {\n                    groups.push(...groups2.payload.content);\n                }\n            }\n            this.setState({\n                groups: groups\n            });\n        } else {\n            this.addError(groups1.error);\n        }\n    }\n\n    private loadUser(user: UserResponse) {\n        this.setState({\n            user,\n            newOAuthConnections: user.oAuthConnections ? Array.from(user.oAuthConnections) : []\n        });\n        this.loadEnums();\n    }\n\n    private loadEnums(): void {\n        // noinspection DuplicatedCode\n        Object.entries(AdministrationRights).forEach(([k, v]) => {\n            /* enums are objects that are reverse mapped, for example, an enum with a = 1 and b = 2 would look like this:\n             * {\n             *   \"a\": 1,\n             *   \"b\": 2,\n             *   1: \"a\",\n             *   2: \"b\"\n             * }\n             * so we need to drop everything that doesnt resolve to a string because otherwise we end up with twice the values\n             */\n            if (!isNaN(parseInt(k))) return;\n\n            const key = k.toLowerCase();\n            const val = v as number;\n\n            //we dont care about nothing\n            if (key == \"none\") return;\n\n            const currentVal = !!(\n                resolvePermissionSet(this.state.user!).administrationRights & val\n            );\n            this.setState(prevState => {\n                return {\n                    permsadmin: {\n                        ...prevState.permsadmin,\n                        [key]: {\n                            currentVal: currentVal,\n                            bitflag: val\n                        }\n                    }\n                };\n            });\n        });\n        // noinspection DuplicatedCode\n        Object.entries(InstanceManagerRights).forEach(([k, v]) => {\n            if (!isNaN(parseInt(k))) return;\n\n            const key = k.toLowerCase();\n            const val = v as number;\n\n            //we dont care about nothing\n            if (key == \"none\") return;\n\n            const currentVal = !!(\n                resolvePermissionSet(this.state.user!).instanceManagerRights & val\n            );\n            this.setState(prevState => {\n                return {\n                    permsinstance: {\n                        ...prevState.permsinstance,\n                        [key]: {\n                            currentVal: currentVal,\n                            bitflag: val\n                        }\n                    }\n                };\n            });\n        });\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.user.load\" />;\n        }\n        if (this.state.saving) {\n            return <Loading text=\"loading.user.save\" />;\n        }\n\n        // noinspection DuplicatedCode\n        const changetabs = (newkey: string | null) => {\n            if (!newkey) return;\n\n            RouteData.selectedusertab = newkey;\n            if (!GlobalObjects.setupMode) {\n                this.props.history.push(AppRoutes.useredit.link ?? AppRoutes.useredit.route);\n            }\n            this.setState({\n                tab: newkey\n            });\n        };\n\n        return (\n            <div className=\"text-center\">\n                <DebugJsonViewer obj={this.state.user} />\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                {this.state.user ? (\n                    <React.Fragment>\n                        {!this.canEdit ? (\n                            <Alert className=\"clearfix\" variant=\"error\">\n                                <FormattedMessage id=\"view.user.edit.cantedit\" />\n                            </Alert>\n                        ) : (\n                            \"\"\n                        )}\n                        <UserBadges user={this.state.user} />\n                        <h3 className=\"text-capitalize\">{this.state.user.name}</h3>\n                        <Button as={Link} to={AppRoutes.userlist.link ?? AppRoutes.userlist.route}>\n                            <FormattedMessage id=\"generic.goback\" />\n                        </Button>\n                        <Tabs\n                            activeKey={this.state.tab}\n                            onSelect={changetabs}\n                            id=\"test\"\n                            className=\"justify-content-center mb-3 mt-4 flex-column flex-md-row\">\n                            <Tab eventKey=\"info\" title={<FormattedMessage id=\"generic.info\" />}>\n                                <Col lg={5} className=\"text-center text-md-left mx-auto\">\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.userid\" />\n                                            </h5>\n                                        </Col>\n                                        <Col className=\"text-capitalize mb-2\">\n                                            {this.state.user.id}\n                                        </Col>\n                                    </Row>\n                                    {this.state.user.systemIdentifier ? (\n                                        <Row xs={1} md={2}>\n                                            <Col>\n                                                <h5 className=\"m-0\">\n                                                    <FormattedMessage id=\"generic.systemidentifier\" />\n                                                </h5>\n                                            </Col>\n                                            <Col className=\"mb-2 text-sm-break\">\n                                                {this.state.user.systemIdentifier}\n                                            </Col>\n                                        </Row>\n                                    ) : (\n                                        \"\"\n                                    )}\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.enabled\" />\n                                            </h5>\n                                        </Col>\n                                        <Col className=\"text-capitalize mb-2\">\n                                            {this.state.user.enabled.toString()}\n                                        </Col>\n                                    </Row>\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.created\" />\n                                            </h5>\n                                        </Col>\n                                        <OverlayTrigger\n                                            overlay={\n                                                <Tooltip id={`${this.state.user.name}-tooltip`}>\n                                                    {new Date(\n                                                        this.state.user.createdAt\n                                                    ).toLocaleString()}\n                                                </Tooltip>\n                                            }>\n                                            {({ ref, ...triggerHandler }) => (\n                                                <Col\n                                                    className=\"text-capitalize mb-2\"\n                                                    {...triggerHandler}>\n                                                    <span ref={ref as React.Ref<HTMLSpanElement>}>\n                                                        <FormattedRelativeTime\n                                                            value={\n                                                                (new Date(\n                                                                    this.state.user!.createdAt\n                                                                ).getTime() -\n                                                                    Date.now()) /\n                                                                1000\n                                                            }\n                                                            numeric=\"auto\"\n                                                            updateIntervalInSeconds={1}\n                                                        />\n                                                    </span>\n                                                </Col>\n                                            )}\n                                        </OverlayTrigger>\n                                    </Row>\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.createdby\" />\n                                            </h5>\n                                        </Col>\n                                        <OverlayTrigger\n                                            overlay={\n                                                <Tooltip\n                                                    id={`${this.state.user.name}-tooltip-createdby`}>\n                                                    <FormattedMessage id=\"generic.userid\" />\n                                                    {this.state.user.createdBy.id}\n                                                </Tooltip>\n                                            }>\n                                            {({ ref, ...triggerHandler }) => (\n                                                <Col\n                                                    className=\"text-capitalize mb-2\"\n                                                    {...triggerHandler}>\n                                                    <span ref={ref as React.Ref<HTMLSpanElement>}>\n                                                        {this.state.user!.createdBy.name}\n                                                    </span>\n                                                </Col>\n                                            )}\n                                        </OverlayTrigger>\n                                    </Row>\n                                    <div className=\"text-center mt-3\">\n                                        {this.canEdit || this.canEditOwnPassword ? (\n                                            <Button\n                                                className=\"mr-2\"\n                                                as={Link}\n                                                to={\n                                                    (AppRoutes.passwd.link ??\n                                                        AppRoutes.passwd.route) +\n                                                    this.state.user.id.toString()\n                                                }>\n                                                <FormattedMessage id=\"routes.passwd\" />\n                                            </Button>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                        {this.canEdit ? (\n                                            <Button\n                                                variant={\n                                                    this.state.user.enabled ? \"danger\" : \"success\"\n                                                }\n                                                onClick={async () => {\n                                                    this.setState({\n                                                        saving: true\n                                                    });\n\n                                                    const response = await UserClient.editUser({\n                                                        enabled: !this.state.user!.enabled,\n                                                        id: this.state.user!.id\n                                                    });\n                                                    if (response.code == StatusCode.OK) {\n                                                        this.loadUser(response.payload);\n                                                    } else {\n                                                        this.addError(response.error);\n                                                    }\n\n                                                    this.setState({\n                                                        saving: false\n                                                    });\n                                                }}>\n                                                <FormattedMessage\n                                                    id={\n                                                        this.state.user.enabled\n                                                            ? \"generic.disable\"\n                                                            : \"generic.enable\"\n                                                    }\n                                                />\n                                            </Button>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </div>\n                                </Col>\n                            </Tab>\n                            <Tab\n                                eventKey=\"adminperms\"\n                                title={<FormattedMessage id=\"perms.admin\" />}>\n                                {this.renderPerms(\"permsadmin\", \"admin\")}\n                            </Tab>\n                            <Tab\n                                eventKey=\"instanceperms\"\n                                title={<FormattedMessage id=\"perms.instance\" />}>\n                                {this.renderPerms(\"permsinstance\", \"instance\")}\n                            </Tab>\n                            <Tab eventKey=\"group\" title={<FormattedMessage id=\"perms.group\" />}>\n                                {this.renderGroups()}\n                            </Tab>\n                            {this.renderOAuth()}\n                        </Tabs>\n                    </React.Fragment>\n                ) : (\n                    \"\"\n                )}\n            </div>\n        );\n    }\n\n    private renderOAuth(): React.ReactNode {\n        const oAuthProviderInfos = this.context.serverInfo.oAuthProviderInfos;\n        const currentOAuthConnections =\n            this.state.newOAuthConnections ?? this.state.user?.oAuthConnections;\n        if (\n            this.state.user?.name.toLowerCase() === \"admin\" || // admin user can't have OAuthConnections\n            currentOAuthConnections == null ||\n            !oAuthProviderInfos ||\n            !Object.keys(oAuthProviderInfos).length\n        )\n            return null;\n\n        const save = async () => {\n            this.setState({\n                saving: true\n            });\n\n            if (!this.state.user) {\n                this.addError(\n                    new InternalError(ErrorCode.APP_FAIL, {\n                        jsError: Error(\"this.state.user is null in user edit save\")\n                    })\n                );\n                return;\n            }\n\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                oAuthConnections: this.state.newOAuthConnections\n            });\n            if (response.code == StatusCode.OK) {\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n\n            this.setState({\n                saving: false\n            });\n        };\n\n        const canEditOauth = this.canEdit || this.canEditOwnOAuth;\n        const filteredConnections = this.state.newOAuthConnections.filter(\n            oAuthConnection => !!oAuthProviderInfos[oAuthConnection.provider]\n        );\n\n        return (\n            <Tab\n                eventKey=\"oauth\"\n                title={<FormattedMessage id=\"view.user.edit.oauth.connections\" />}>\n                <h3 className=\"mb-3\">\n                    <FormattedMessage id=\"view.user.edit.oauth.current\" />\n                </h3>\n                <div>\n                    {filteredConnections.map((oAuthConnection, idx) => (\n                        <div className=\"justify-content-center d-flex\" key={idx}>\n                            <InputGroup className=\"w-75 mb-1\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>\n                                        <span>\n                                            <FormattedMessage id=\"view.user.edit.oauth.provider\" />\n                                        </span>\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    className=\"flex-grow-1 flex-md-grow-0 w-50 w-md-auto \"\n                                    as=\"select\"\n                                    custom\n                                    disabled={!canEditOauth}\n                                    onChange={event => {\n                                        const provider = event.target.value as OAuthProvider;\n                                        this.setState(prev => {\n                                            return {\n                                                newOAuthConnections: prev.newOAuthConnections.map(\n                                                    (val, idx2) => {\n                                                        if (idx2 !== idx) return val;\n                                                        return {\n                                                            ...val,\n                                                            provider: provider\n                                                        };\n                                                    }\n                                                )\n                                            };\n                                        });\n                                    }}>\n                                    {Object.keys(oAuthProviderInfos).map(key => {\n                                        return (\n                                            <FormattedMessage\n                                                key={key}\n                                                id={`view.user.edit.oauth.provider.${key.toLowerCase()}`}>\n                                                {txt => (\n                                                    <option\n                                                        value={key}\n                                                        selected={oAuthConnection.provider === key}>\n                                                        {txt}\n                                                    </option>\n                                                )}\n                                            </FormattedMessage>\n                                        );\n                                    })}\n                                </Form.Control>\n                                <InputGroup.Text className=\"rounded-0\">\n                                    <FormattedMessage id=\"view.user.edit.oauth.id\" />\n                                </InputGroup.Text>\n                                <FormControl\n                                    className=\"\"\n                                    value={oAuthConnection.externalUserId}\n                                    onChange={event => {\n                                        const externalUserId = event.target.value;\n                                        this.setState(prev => {\n                                            return {\n                                                newOAuthConnections: prev.newOAuthConnections.map(\n                                                    (val, idx2) => {\n                                                        if (idx2 !== idx) return val;\n                                                        return {\n                                                            ...val,\n                                                            externalUserId: externalUserId\n                                                        };\n                                                    }\n                                                )\n                                            };\n                                        });\n                                    }}\n                                    disabled={!canEditOauth}\n                                />\n                                <InputGroup.Append className=\"\">\n                                    <Button\n                                        variant=\"danger\"\n                                        className=\"text-darker\"\n                                        hidden={!canEditOauth}\n                                        onClick={() => {\n                                            this.setState(prev => {\n                                                return {\n                                                    newOAuthConnections: prev.newOAuthConnections.filter(\n                                                        (val, idx2) => idx !== idx2\n                                                    )\n                                                };\n                                            });\n                                        }}>\n                                        <div>\n                                            <FontAwesomeIcon icon={faTrash} />\n                                        </div>\n                                    </Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </div>\n                    ))}\n                </div>\n                {canEditOauth ? (\n                    <div className=\"text-center mt-3\">\n                        <Button\n                            className=\"mr-2\"\n                            onClick={() => {\n                                this.setState(prev => {\n                                    return {\n                                        newOAuthConnections: [\n                                            ...prev.newOAuthConnections,\n                                            {\n                                                provider: Object.keys(\n                                                    oAuthProviderInfos\n                                                )[0] as OAuthProvider,\n                                                externalUserId: \"\"\n                                            }\n                                        ]\n                                    };\n                                });\n                            }}>\n                            <FormattedMessage id=\"view.user.edit.oauth.add\" />\n                        </Button>\n                        <Button\n                            onClick={save}\n                            variant=\"success\"\n                            disabled={\n                                this.state.newOAuthConnections.some(\n                                    x => x.externalUserId.trim().length === 0\n                                ) ||\n                                //If all values match up, and the lenght is the same, there has been no change, disable the button\n                                (this.state.newOAuthConnections.every(\n                                    (val, idx) =>\n                                        val.externalUserId ===\n                                            (this.state.user?.oAuthConnections ?? [])[idx]\n                                                ?.externalUserId &&\n                                        val.provider ===\n                                            (this.state.user?.oAuthConnections ?? [])[idx]?.provider\n                                ) &&\n                                    this.state.newOAuthConnections.length ===\n                                        this.state.user?.oAuthConnections?.length)\n                            }>\n                            <FormattedMessage id=\"generic.savetab\" />\n                        </Button>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n            </Tab>\n        );\n    }\n\n    private renderGroups(): React.ReactNode {\n        //We can't use addError() here because that would trigger a rerender which would call this again and add another error and so on\n        if (!this.state.user || !this.state.groups) {\n            return (\n                <ErrorAlert\n                    error={\n                        new InternalError(ErrorCode.APP_FAIL, {\n                            jsError: Error(\"Assertion failed, user or group is null\")\n                        })\n                    }\n                />\n            );\n        }\n\n        return (\n            <div>\n                {!this.canRead ? (\n                    <Alert className=\"clearfix\" variant=\"error\">\n                        <FormattedMessage id=\"perms.group.cantlist\" />\n                    </Alert>\n                ) : null}\n                <h3 className=\"mb-3\">\n                    <FormattedMessage id=\"perms.group.current\" />\n                    {this.state.user.group ? (\n                        this.state.user.group.name\n                    ) : (\n                        <FormattedMessage id=\"perms.group.none\" />\n                    )}\n                </h3>\n                <div onChange={this.state.renameGroup ? undefined : this.changeGroup}>\n                    <InputGroup\n                        className=\"justify-content-center mb-3\"\n                        as=\"label\"\n                        htmlFor={\n                            \"group_none\" /*notice the underscore, the normal groups use a dash, this prevents conflict with groups named \"none\"*/\n                        }>\n                        <InputGroup.Prepend>\n                            <InputGroup.Radio\n                                id={\"group_none\"}\n                                name=\"group\"\n                                defaultChecked={this.state.user.group?.id === undefined}\n                                disabled={!this.canEdit}\n                            />\n                        </InputGroup.Prepend>\n                        <InputGroup.Append className=\"w-40 overflow-auto\">\n                            <InputGroup.Text className=\"flex-fill\">\n                                <FormattedMessage id=\"perms.group.none\" />\n                            </InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    {this.state.groups.map(group => {\n                        return (\n                            <InputGroup className=\"justify-content-center mb-1\" key={group.id}>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Radio\n                                        id={\"group-\" + group.id.toString()}\n                                        name=\"group\"\n                                        defaultChecked={this.state.user!.group?.id === group.id}\n                                        disabled={!this.canEdit}\n                                    />\n                                </InputGroup.Prepend>\n                                <InputGroup.Append className=\"w-40 overflow-auto\">\n                                    {this.state.renameGroup !== group ? (\n                                        <React.Fragment>\n                                            <InputGroup.Text\n                                                className=\"flex-fill\"\n                                                as=\"label\"\n                                                htmlFor={\"group-\" + group.id.toString()}>\n                                                <span>{group.name}</span>\n                                                <div className=\"text-right ml-auto\">\n                                                    <FormattedMessage\n                                                        id=\"generic.numusers\"\n                                                        values={{\n                                                            count: this.canRead\n                                                                ? group.users?.length\n                                                                : \"???\"\n                                                        }}\n                                                    />\n                                                </div>\n                                            </InputGroup.Text>\n                                            <OverlayTrigger\n                                                overlay={\n                                                    <Tooltip id={`${group.id}-rename-tooltip`}>\n                                                        <FormattedMessage id=\"perms.group.rename.tooltip\" />\n                                                    </Tooltip>\n                                                }>\n                                                {({ ref, ...triggerHandler }) => (\n                                                    <Button\n                                                        variant=\"secondary\"\n                                                        className=\"text-darker\"\n                                                        disabled={!this.canEdit}\n                                                        onClick={() =>\n                                                            this.setState({\n                                                                renameGroup: group,\n                                                                renameGroupName: group.name\n                                                            })\n                                                        }\n                                                        {...triggerHandler}>\n                                                        <div ref={ref as React.Ref<HTMLDivElement>}>\n                                                            <FontAwesomeIcon icon={faPen} />\n                                                        </div>\n                                                    </Button>\n                                                )}\n                                            </OverlayTrigger>\n                                            <OverlayTrigger\n                                                overlay={\n                                                    <Tooltip id={`${group.id}-delete-tooltip`}>\n                                                        <FormattedMessage id=\"perms.group.delete.tooltip\" />\n                                                    </Tooltip>\n                                                }\n                                                show={\n                                                    (!group.users?.length || !this.canEdit) &&\n                                                    group.id !== this.state.user!.group?.id\n                                                        ? false\n                                                        : undefined\n                                                }>\n                                                {({ ref, ...triggerHandler }) => (\n                                                    <Button\n                                                        variant=\"danger\"\n                                                        className=\"text-darker\"\n                                                        disabled={\n                                                            !!group.users?.length ||\n                                                            !this.canEdit ||\n                                                            group.id === this.state.user!.group?.id\n                                                        }\n                                                        onClick={() =>\n                                                            void this.deleteGroup(group.id)\n                                                        }\n                                                        {...triggerHandler}>\n                                                        <div ref={ref as React.Ref<HTMLDivElement>}>\n                                                            <FontAwesomeIcon icon={faTrash} />\n                                                        </div>\n                                                    </Button>\n                                                )}\n                                            </OverlayTrigger>\n                                        </React.Fragment>\n                                    ) : (\n                                        <React.Fragment>\n                                            <input\n                                                className=\"flex-fill\"\n                                                value={this.state.renameGroupName!}\n                                                onChange={event => {\n                                                    this.setState({\n                                                        renameGroupName: event.target.value\n                                                    });\n                                                }}\n                                            />\n                                            <Button\n                                                variant=\"success\"\n                                                className=\"text-darker\"\n                                                onClick={() => void this.renameGroup()}>\n                                                <FontAwesomeIcon icon={faCheck} />\n                                            </Button>\n                                            <Button\n                                                variant=\"danger\"\n                                                className=\"text-darker\"\n                                                onClick={() =>\n                                                    this.setState({\n                                                        renameGroup: null,\n                                                        renameGroupName: null\n                                                    })\n                                                }>\n                                                <FontAwesomeIcon icon={faTimes} />\n                                            </Button>\n                                        </React.Fragment>\n                                    )}\n                                </InputGroup.Append>\n                            </InputGroup>\n                        );\n                    })}\n                </div>\n                {/*<hr />\n                    <h4 className=\"mt-3\">\n                        <FormattedMessage id=\"perms.group.create\" />\n                    </h4>*/}\n                <InputGroup className=\"justify-content-center mb-1 mt-5\">\n                    <InputGroup.Prepend>\n                        <Button\n                            variant=\"primary\"\n                            onClick={this.createGroup}\n                            disabled={!this.canEdit || !this.state.createGroupName.length}>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </Button>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        className=\"w-40 overflow-auto flex-grow-0\"\n                        value={this.state.createGroupName}\n                        onChange={event => {\n                            this.setState({\n                                createGroupName: event.target.value\n                            });\n                        }}\n                        disabled={!this.canEdit}\n                    />\n                </InputGroup>\n            </div>\n        );\n    }\n\n    private async changeGroup(e: FormEvent<HTMLDivElement>) {\n        if (!this.state.user) {\n            this.addError(\n                new InternalError(ErrorCode.APP_FAIL, {\n                    jsError: Error(\"this.state.user is null in changegroup\")\n                })\n            );\n            return;\n        }\n\n        this.setState({\n            loading: true\n        });\n        const id = (e.target as HTMLInputElement).id;\n        if (id === \"group_none\") {\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                permissionSet: resolvePermissionSet(this.state.user)\n            });\n            if (response.code === StatusCode.OK) {\n                await this.loadGroups();\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n        } else {\n            const realID = parseInt(id.substr(6));\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                group: {\n                    id: realID\n                } as UserGroup\n            });\n            if (response.code === StatusCode.OK) {\n                await this.loadGroups();\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async renameGroup(): Promise<void> {\n        // safety\n        const renameGroup = this.state.renameGroup;\n        const newName = this.state.renameGroupName;\n        if (!renameGroup || !(newName && newName.trim().length > 0)) {\n            return;\n        }\n\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.updateGroup({\n            id: renameGroup.id,\n            name: newName\n        });\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                const newGroups = [...prev.groups];\n                newGroups[newGroups.findIndex(group => group.id === renameGroup.id)] =\n                    response.payload;\n                return {\n                    groups: newGroups,\n                    renameGroup: null,\n                    renameGroupName: null\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async deleteGroup(id: number) {\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.deleteGroup(id);\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    groups: prev.groups.filter(group => group.id !== id)\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async createGroup() {\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.createGroup(\n            this.state.createGroupName,\n            resolvePermissionSet(this.state.user!)\n        );\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    groups: prev.groups.concat([response.payload])\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private renderPerms(\n        enumname: \"permsadmin\" | \"permsinstance\",\n        permprefix: string\n    ): React.ReactNode {\n        const inputs: Record<\n            string,\n            { input: React.RefObject<HTMLInputElement>; field: React.RefObject<HTMLDivElement> }\n        > = {};\n        const setBold = (\n            inputRef: React.RefObject<HTMLInputElement>,\n            fieldRef: React.RefObject<HTMLDivElement>,\n            defaultVal: boolean\n        ) => {\n            if (!inputRef.current || !fieldRef.current) return;\n            if (inputRef.current.checked !== defaultVal) {\n                fieldRef.current.classList.add(\"font-weight-bold\");\n            } else {\n                fieldRef.current.classList.remove(\"font-weight-bold\");\n            }\n        };\n        const setAll = (val: boolean): (() => void) => {\n            return () => {\n                for (const [permname, refs] of Object.entries(inputs)) {\n                    if (!refs.input.current) return;\n\n                    refs.input.current.checked = val;\n                    setBold(refs.input, refs.field, this.state[enumname][permname].currentVal);\n                }\n            };\n        };\n        const resetAll = () => {\n            for (const [permname, refs] of Object.entries(inputs)) {\n                if (!refs.input.current) continue;\n\n                refs.input.current.checked = this.state[enumname][permname].currentVal;\n                setBold(refs.input, refs.field, this.state[enumname][permname].currentVal);\n            }\n        };\n        const save = async () => {\n            this.setState({\n                saving: true\n            });\n            let bitflag = 0;\n\n            for (const [permname, refs] of Object.entries(inputs)) {\n                if (!refs.input.current) continue;\n\n                bitflag += refs.input.current.checked ? this.state[enumname][permname].bitflag : 0;\n            }\n\n            if (!this.state.user) {\n                this.addError(\n                    new InternalError(ErrorCode.APP_FAIL, {\n                        jsError: Error(\"this.state.user is null in user edit save\")\n                    })\n                );\n                return;\n            }\n\n            if (this.state.user.group) {\n                const newset = Object.assign(\n                    Object.assign({}, this.state.user.group.permissionSet),\n                    {\n                        [enumname == \"permsadmin\"\n                            ? \"AdministrationRights\"\n                            : \"InstanceManagerRights\"]: bitflag\n                    } as\n                        | { AdministrationRights: AdministrationRights }\n                        | { InstanceManagerRights: InstanceManagerRights }\n                ) as PermissionSet;\n                const response = await UserGroupClient.updateGroup({\n                    id: this.state.user.group.id,\n                    permissionSet: newset\n                });\n                if (response.code == StatusCode.OK) {\n                    const response2 = await UserClient.getUser(this.state.user.id);\n                    if (response2.code == StatusCode.OK) {\n                        this.loadUser(response2.payload);\n                    } else {\n                        this.addError(response2.error);\n                    }\n                } else {\n                    this.addError(response.error);\n                }\n            } else {\n                const newset = Object.assign(Object.assign({}, this.state.user.permissionSet), {\n                    [enumname == \"permsadmin\"\n                        ? \"AdministrationRights\"\n                        : \"InstanceManagerRights\"]: bitflag\n                } as { AdministrationRights: AdministrationRights } | { InstanceManagerRights: InstanceManagerRights });\n                const response = await UserClient.editUser({\n                    id: this.state.user.id,\n                    permissionSet: newset\n                });\n                if (response.code == StatusCode.OK) {\n                    this.loadUser(response.payload);\n                } else {\n                    this.addError(response.error);\n                }\n            }\n\n            this.setState({\n                saving: false\n            });\n        };\n        return (\n            <React.Fragment>\n                {this.state.user?.group ? (\n                    <Alert variant=\"warning\">\n                        <FormattedMessage\n                            id=\"perms.group.warning\"\n                            values={{\n                                group: `${this.state.user.group.name} (${this.state.user.group.id})`\n                            }}\n                        />\n                    </Alert>\n                ) : null}\n                {this.canEdit ? (\n                    <React.Fragment>\n                        <h5>\n                            <FormattedMessage id=\"generic.setall\" />\n                        </h5>\n                        <Button onClick={setAll(true)}>\n                            <FormattedMessage id=\"generic.true\" />\n                        </Button>{\" \"}\n                        <Button onClick={setAll(false)}>\n                            <FormattedMessage id=\"generic.false\" />\n                        </Button>{\" \"}\n                        <Button onClick={resetAll}>\n                            <FormattedMessage id=\"generic.reset\" />\n                        </Button>\n                    </React.Fragment>\n                ) : (\n                    \"\"\n                )}\n                <Col md={8} lg={7} xl={6} className=\"mx-auto\">\n                    <hr />\n                    {Object.entries(this.state[enumname]).map(([perm, value]) => {\n                        const inputRef = React.createRef<HTMLInputElement>();\n                        const fieldRef = React.createRef<HTMLDivElement>();\n                        inputs[perm] = { input: inputRef, field: fieldRef };\n                        return (\n                            <InputGroup key={perm} as=\"label\" htmlFor={perm} className=\"mb-0\">\n                                <InputGroup.Prepend className=\"flex-grow-1 overflow-auto\">\n                                    <OverlayTrigger\n                                        overlay={\n                                            <Tooltip id={`perms.${permprefix}.${perm}.desc`}>\n                                                <FormattedMessage\n                                                    id={`perms.${permprefix}.${perm}.desc`}\n                                                />\n                                            </Tooltip>\n                                        }>\n                                        {({ ref, ...triggerHandler }) => (\n                                            <InputGroup.Text className=\"flex-fill\" ref={fieldRef}>\n                                                <div {...triggerHandler}>\n                                                    <FormattedMessage\n                                                        id={`perms.${permprefix}.${perm}`}\n                                                    />\n                                                </div>\n                                                <div className=\"ml-auto d-flex align-items-center\">\n                                                    <Form.Check\n                                                        inline\n                                                        type=\"switch\"\n                                                        custom\n                                                        id={`${enumname}.${perm}`}\n                                                        className=\"d-flex justify-content-center align-content-center mx-2\"\n                                                        label=\"\"\n                                                        ref={inputRef}\n                                                        disabled={!this.canEdit}\n                                                        defaultChecked={value.currentVal}\n                                                        onChange={() => {\n                                                            setBold(\n                                                                inputRef,\n                                                                fieldRef,\n                                                                value.currentVal\n                                                            );\n                                                        }}\n                                                    />\n                                                    <div\n                                                        {...triggerHandler}\n                                                        ref={ref as React.Ref<HTMLDivElement>}>\n                                                        <FontAwesomeIcon fixedWidth icon=\"info\" />\n                                                    </div>\n                                                </div>\n                                            </InputGroup.Text>\n                                        )}\n                                    </OverlayTrigger>\n                                </InputGroup.Prepend>\n                            </InputGroup>\n                        );\n                    })}\n                    <hr />\n                </Col>\n                {this.canEdit ? (\n                    <Button onClick={save}>\n                        <FormattedMessage id=\"generic.savetab\" />\n                    </Button>\n                ) : (\n                    \"\"\n                )}\n            </React.Fragment>\n        );\n    }\n}\nUserEdit.contextType = GeneralContext;\nexport default withRouter(UserEdit);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"onSelect\", \"transition\", \"mountOnEnter\", \"unmountOnExit\", \"children\", \"activeKey\"];\nimport React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nvar defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  var _child$props = child.props,\n      title = _child$props.title,\n      eventKey = _child$props.eventKey,\n      disabled = _child$props.disabled,\n      tabClassName = _child$props.tabClassName,\n      id = _child$props.id;\n\n  if (title == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavItem, {\n    as: NavLink,\n    eventKey: eventKey,\n    disabled: disabled,\n    id: id,\n    className: tabClassName\n  }, title);\n}\n\nvar Tabs = function Tabs(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      onSelect = _useUncontrolled.onSelect,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children,\n      _useUncontrolled$acti = _useUncontrolled.activeKey,\n      activeKey = _useUncontrolled$acti === void 0 ? getDefaultActiveKey(children) : _useUncontrolled$acti,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  return /*#__PURE__*/React.createElement(TabContainer, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, /*#__PURE__*/React.createElement(Nav, _extends({}, controlledProps, {\n    role: \"tablist\",\n    as: \"nav\"\n  }), map(children, renderTab)), /*#__PURE__*/React.createElement(TabContent, null, map(children, function (child) {\n    var childProps = _extends({}, child.props);\n\n    delete childProps.title;\n    delete childProps.disabled;\n    delete childProps.tabClassName;\n    return /*#__PURE__*/React.createElement(TabPane, childProps);\n  })));\n};\n\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;"],"names":["iconName","ligatures","unicode","svgPathData","exports","prefix","icon","JsonViewer","props","src","obj","name","theme","iconStyle","collapsed","displayDataTypes","DebugJsonViewer","configOptions","className","UserBadges","React","render","user","this","systemIdentifier","variant","id","enabled","group","GlobalObjects","UserEdit","constructor","context","super","createGroup","bind","changeGroup","Error","state","errors","loading","saving","permsadmin","permsinstance","tab","match","params","groups","Object","assign","users","renameGroup","renameGroupName","createGroupName","newOAuthConnections","RouteData","parseInt","canEdit","resolvePermissionSet","administrationRights","AdministrationRights","canRead","canEditOwnPassword","userid","canEditOwnOAuth","componentDidUpdate","prevProps","setState","response","UserClient","code","StatusCode","addError","error","loadUser","payload","loadGroups","groups1","UserGroupClient","page","pageSize","content","i","totalPages","groups2","push","oAuthConnections","Array","from","loadEnums","entries","forEach","k","v","isNaN","key","toLowerCase","val","currentVal","prevState","bitflag","InstanceManagerRights","instanceManagerRights","Loading","text","map","err","index","ErrorAlert","onClose","prev","newarr","undefined","Alert","Button","as","Link","to","AppRoutes","Tabs","activeKey","onSelect","newkey","setupMode","history","Tab","eventKey","title","Col","lg","Row","xs","md","toString","OverlayTrigger","overlay","Tooltip","Date","createdAt","toLocaleString","ref","triggerHandler","value","getTime","now","numeric","updateIntervalInSeconds","createdBy","onClick","async","renderPerms","renderGroups","renderOAuth","oAuthProviderInfos","serverInfo","currentOAuthConnections","keys","length","canEditOauth","filteredConnections","filter","oAuthConnection","provider","idx","InputGroup","Form","custom","disabled","onChange","event","target","idx2","txt","selected","FormControl","externalUserId","hidden","faTrash","InternalError","ErrorCode","jsError","some","x","trim","every","htmlFor","defaultChecked","values","count","faPen","show","deleteGroup","faCheck","faTimes","faPlus","e","permissionSet","realID","substr","newName","newGroups","findIndex","concat","enumname","permprefix","inputs","setBold","inputRef","fieldRef","defaultVal","current","checked","classList","add","remove","setAll","permname","refs","input","field","xl","perm","inline","type","label","fixedWidth","newset","response2","contextType","GeneralContext","withRouter","_excluded","Badge","_ref","bsPrefix","pill","_ref$as","Component","displayName","defaultProps","InputGroupAppend","InputGroupPrepend","InputGroupText","size","hasValidation","Text","Radio","Checkbox","Append","Prepend","DEVICE_SIZES","noGutters","decoratedBsPrefix","sizePrefix","classes","brkPoint","cols","propValue","infix","_React$Component","apply","arguments","prototype","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","children","useMemo","tabContext","getControlledId","getControllerId","TabContent","_excluded2","TabPane","_useTabContext","useContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","renderTab","child","_child$props","tabClassName","_useUncontrolled$acti","defaultActiveKey","getDefaultActiveKey","controlledProps","childProps"],"sourceRoot":""}