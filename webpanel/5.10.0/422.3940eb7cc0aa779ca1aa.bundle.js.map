{"version":3,"file":"422.3940eb7cc0aa779ca1aa.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/Errors.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/Subject.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HubConnection.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/AbortController.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/ILogger.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/ITransport.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/Loggers.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/Utils.js","webpack://tgstation-server-control-panel/./node_modules/lru-cache/index.js","webpack://tgstation-server-control-panel/./node_modules/semver/classes/comparator.js","webpack://tgstation-server-control-panel/./node_modules/semver/classes/range.js","webpack://tgstation-server-control-panel/./node_modules/semver/classes/semver.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/clean.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/cmp.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/coerce.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/compare-build.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/compare-loose.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/compare.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/diff.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/eq.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/gt.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/gte.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/inc.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/lt.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/lte.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/major.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/minor.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/neq.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/parse.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/patch.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/prerelease.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/rcompare.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/rsort.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/satisfies.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/sort.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/valid.js","webpack://tgstation-server-control-panel/./node_modules/semver/index.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/constants.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/debug.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/identifiers.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/parse-options.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/re.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/gtr.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/intersects.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/ltr.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/max-satisfying.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/min-satisfying.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/min-version.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/outside.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/simplify.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/subset.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/to-comparators.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/valid.js","webpack://tgstation-server-control-panel/./node_modules/yallist/iterator.js","webpack://tgstation-server-control-panel/./node_modules/yallist/yallist.js"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    constructor(connection, logger, protocol, reconnectPolicy) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version: this._protocol.version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        return this._sendMessage(this._protocol.writeMessage(message));\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                        this._invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this._fetchType = requireFunc(\"node-fetch\");\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XhrHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            await this._httpClient.delete(this._url, deleteOptions);\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* Disconnecting */ || this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        this.transport.onclose = (e) => this._stopConnection(e);\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this._negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"7.0.12\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n//# sourceMappingURL=Utils.js.map","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH, MAX_SAFE_BUILD_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_SAFE_COMPONENT_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"names":["HttpError","Error","constructor","errorMessage","statusCode","trueProto","prototype","super","this","__proto__","TimeoutError","AbortError","UnsupportedTransportError","message","transport","errorType","DisabledTransportError","FailedToStartTransportError","FailedToNegotiateWithServerError","AggregateErrors","innerErrors","HandshakeProtocol","writeHandshakeRequest","handshakeRequest","TextMessageFormat","JSON","stringify","parseHandshakeResponse","data","messageData","remainingData","binaryData","Uint8Array","separatorIndex","indexOf","responseLength","String","fromCharCode","apply","Array","slice","call","byteLength","buffer","textData","substring","length","messages","response","parse","type","Subject","observers","next","item","observer","error","err","complete","subscribe","push","HubConnectionState","HubConnection","connection","logger","protocol","reconnectPolicy","_nextKeepAlive","_freezeEventListener","_logger","log","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","_protocol","_reconnectPolicy","_handshakeProtocol","onreceive","_processIncomingData","onclose","_connectionClosed","_callbacks","_methods","_closedCallbacks","_reconnectingCallbacks","_reconnectedCallbacks","_invocationId","_receivedHandshakeResponse","_connectionState","Disconnected","_connectionStarted","_cachedPingMessage","writeMessage","static","state","connectionId","baseUrl","url","Reconnecting","start","_startPromise","_startWithStateTransitions","async","Promise","reject","Connecting","_startInternal","window","document","addEventListener","Connected","e","_stopDuringStartError","undefined","handshakePromise","resolve","_handshakeResolver","_handshakeRejecter","transferFormat","name","version","_sendMessage","_cleanupTimeout","_resetTimeoutPeriod","_resetKeepAliveInterval","features","inherentKeepAlive","_cleanupPingTimer","stop","startPromise","_stopPromise","_stopInternal","Disconnecting","_reconnectDelayHandle","clearTimeout","_completeClose","stream","methodName","args","streams","streamIds","_replaceStreamingParams","invocationDescriptor","_createStreamInvocation","promiseQueue","subject","cancelCallback","cancelInvocation","_createCancelInvocation","invocationId","then","_sendWithProtocol","invocationEvent","catch","_launchStreams","send","sendPromise","_createInvocation","invoke","result","on","newMethod","toLowerCase","off","method","handlers","removeIdx","splice","callback","onreconnecting","onreconnected","_processHandshakeResponse","parseMessages","_invokeClientMethod","allowReconnect","responseMessage","Date","getTime","_timeoutHandle","setTimeout","serverTimeout","_pingServerHandle","nextPing","invocationMessage","target","methods","_createCompletionMessage","methodsCopy","expectsResponse","res","exception","completionMessage","m","prevRes","arguments","_cancelCallbacksWithError","_reconnect","removeEventListener","forEach","c","reconnectStartTime","now","previousReconnectAttempts","retryError","nextRetryDelay","_getNextRetryDelay","toString","previousRetryCount","elapsedMilliseconds","retryReason","nextRetryDelayInMilliseconds","callbacks","Object","keys","key","nonblocking","streamId","_createStreamItemMessage","i","argument","_isObservable","arg","id","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","_retryDelays","retryContext","HeaderNames","Authorization","Cookie","HttpResponse","statusText","content","HttpClient","get","options","post","delete","getCookieString","AccessTokenHttpClient","innerClient","accessTokenFactory","_innerClient","_accessTokenFactory","request","allowRetry","_accessToken","_setAuthorizationHeader","headers","FetchHttpClient","fetch","requireFunc","_jar","CookieJar","_fetchType","bind","AbortController","_abortControllerType","abortSignal","aborted","abortController","onabort","abort","timeoutId","timeout","msTimeout","body","cache","credentials","withCredentials","mode","redirect","signal","ok","deserializeContent","status","responseType","payload","cookies","getCookies","join","arrayBuffer","text","XhrHttpClient","xhr","XMLHttpRequest","open","setRequestHeader","header","onload","responseText","onerror","ontimeout","DefaultHttpClient","_httpClient","_isAborted","LongPollingTransport","httpClient","_pollAbort","_options","_running","pollAborted","_url","value","pollOptions","pollUrl","_closeError","_receiving","_poll","logMessageContent","_raiseOnClose","deleteOptions","logMessage","ServerSentEventsTransport","accessToken","encodeURIComponent","eventSource","opened","EventSource","onmessage","_close","onopen","_eventSource","close","WebSocketTransport","webSocketConstructor","_logMessageContent","_webSocketConstructor","_headers","token","webSocket","replace","binaryType","_event","_webSocket","event","ErrorEvent","readyState","OPEN","_isCloseEvent","wasClean","code","reason","HttpConnection","_stopPromiseResolver","_negotiateVersion","_resolveUrl","webSocketModule","eventSourceModule","WebSocket","_startInternalPromise","_sendQueue","TransportSendQueue","_stopError","_stopConnection","skipNegotiation","_constructTransport","_startTransport","negotiateResponse","redirects","_getNegotiationResponse","ProtocolVersion","_createTransport","negotiateUrl","_resolveNegotiateUrl","negotiateVersion","connectionToken","_createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","_isITransport","transportExceptions","transports","availableTransports","negotiate","endpoint","transportOrError","_resolveTransportOrError","ex","connect","actualTransport","transportMatches","transferFormats","map","s","lastIndexOf","aTag","createElement","href","index","_transport","_buffer","_executing","_sendBufferedData","PromiseSource","_transportResult","_sendLoopPromise","_sendLoop","_bufferData","promise","transportResult","_concatBuffers","arrayBuffers","totalLength","b","reduce","a","offset","set","_resolver","_rejecter","JsonHubProtocol","input","hubMessages","parsedMessage","_isInvocationMessage","_isStreamItemMessage","_isCompletionMessage","_assertNotEmptyString","LogLevelNameMapping","trace","debug","info","information","warn","warning","critical","none","HubConnectionBuilder","configureLogging","logging","logLevel","mapping","parseLogLevel","withUrl","transportTypeOrOptions","httpConnectionOptions","withHubProtocol","withAutomaticReconnect","retryDelaysOrReconnectPolicy","isArray","build","MessageType","LogLevel","HttpTransportType","TransferFormat","NullLogger","_logLevel","_message","instance","output","RecordSeparator","split","pop","RecordSeparatorCode","Arg","val","match","values","Platform","isBrowser","isWebWorker","self","isReactNative","isNode","getDataDetail","includeContent","detail","isArrayBuffer","view","str","num","substr","formatArrayBuffer","ArrayBuffer","sendMessage","transportName","getUserAgentHeader","createLogger","ConsoleLogger","SubjectSubscription","_subject","_observer","dispose","_","minimumLogLevel","_minLevel","out","console","msg","toISOString","userAgentHeaderName","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","os","runtime","runtimeVersion","userAgent","majorAndMinor","process","platform","versions","node","getErrorString","stack","getGlobalThis","globalThis","g","Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","doUse","hit","isStale","del","unshiftNode","maxAge","diff","trim","walker","tail","prev","removeNode","Entry","forEachStep","fn","thisp","module","exports","max","TypeError","Infinity","lc","stale","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","itemCount","rforEach","head","toArray","k","Map","dump","v","filter","h","dumpLru","len","has","unshift","peek","load","arr","l","expiresAt","prune","ANY","Comparator","comp","parseOptions","loose","semver","operator","r","re","t","COMPARATORLOOSE","COMPARATOR","SemVer","test","er","cmp","intersects","Range","includePrerelease","startsWith","includes","safeRe","range","raw","format","parseRange","first","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","comparators","size","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","compare","other","compareMain","comparePre","compareBuild","inc","release","identifier","identifierBase","base","Number","isNaN","eq","neq","gt","gte","lt","lte","op","rtl","COERCERTL","exec","lastIndex","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","list","sort","internalRe","constants","identifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","env","NODE_DEBUG","numeric","anum","bnum","looseOption","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","r1","r2","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","iterator","insert","inserted","Node","create","pushNode","shift","forEachReverse","n","getReverse","mapReverse","initial","acc","reduceReverse","toArrayReverse","sliceReverse","deleteCount","nodes","reverse"],"sourceRoot":""}