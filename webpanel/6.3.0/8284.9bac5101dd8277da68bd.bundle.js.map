{"version":3,"file":"8284.9bac5101dd8277da68bd.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/InputField.tsx","webpack://tgstation-server-control-panel/./src/components/utils/JsonViewer.tsx","webpack://tgstation-server-control-panel/./src/contexts/InstanceEditContext.ts","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/InputGroup.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tabs.js"],"sourcesContent":["import { faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport type AnyEnum = {\n    [key: string]: string | number;\n    [index: number]: string;\n};\n\nexport enum FieldType {\n    Boolean = \"boolean\",\n    Number = \"number\",\n    String = \"string\",\n    TextArea = \"textarea\",\n    Password = \"password\",\n    Enum = \"enum\"\n}\n\nexport type InputFieldTypes = number | string | boolean;\n\nexport type InputFieldProps = {\n    name: string;\n    disabled?: boolean;\n    tooltip?: string;\n    type: FieldType;\n    hideReadOnly?: boolean;\n    additionalAppend?: React.ReactNode;\n    forceChanged?: boolean;\n} & (\n    | {\n          defaultValue?: boolean | null;\n          onChange: (newValue: boolean, isValid: boolean) => unknown;\n          type: FieldType.Boolean;\n      }\n    | {\n          defaultValue?: number | null;\n          onChange: (newValue: number, isValid: boolean) => unknown;\n          type: FieldType.Number;\n          min?: number;\n          max?: number;\n      }\n    | {\n          defaultValue?: string | null;\n          onChange: (newValue: string, isValid: boolean) => unknown;\n          type: FieldType.String;\n      }\n    | {\n          defaultValue?: string | null;\n          onChange: (newValue: string, isValid: boolean) => unknown;\n          type: FieldType.TextArea;\n      }\n    | {\n          defaultValue?: string | null;\n          onChange: (newValue: string, isValid: boolean) => unknown;\n          type: FieldType.Password;\n      }\n    | {\n          defaultValue?: number | null;\n          onChange: (newValue: number, isValid: boolean) => unknown;\n          type: FieldType.Enum;\n          noLocalize?: boolean;\n          enum: AnyEnum;\n      }\n);\n\ninterface ControlProps {\n    value: InputFieldTypes;\n    onChange: (newvalue: InputFieldTypes) => unknown;\n    disabled?: boolean;\n    name: string;\n}\n\nconst StringControl = React.forwardRef<HTMLInputElement, ControlProps>(\n    function StringControl(props, ref): JSX.Element {\n        return (\n            <Form.Control\n                value={props.value as string}\n                onChange={e => props.onChange(e.target.value)}\n                disabled={props.disabled}\n                ref={ref}\n            />\n        );\n    }\n);\n\nconst TextAreaControl = React.forwardRef<HTMLInputElement, ControlProps>(\n    function StringControl(props): JSX.Element {\n        return (\n            <Form.Control\n                as=\"textarea\"\n                value={props.value as string}\n                onChange={e => props.onChange(e.target.value)}\n                disabled={props.disabled}\n            />\n        );\n    }\n);\n\nconst PasswordControl = React.forwardRef<HTMLInputElement, ControlProps>(\n    function PasswordControl(props, ref): JSX.Element {\n        return (\n            <Form.Control\n                value={props.value as string}\n                onChange={e => props.onChange(e.target.value)}\n                disabled={props.disabled}\n                type=\"password\"\n                ref={ref}\n            />\n        );\n    }\n);\n\nconst BooleanControl = React.forwardRef<HTMLInputElement, ControlProps>(\n    function BooleanControl(props, ref): JSX.Element {\n        const rndId = Math.random().toString();\n        return (\n            <label\n                htmlFor={rndId}\n                className=\"d-flex m-0 flex-grow-1 justify-content-center align-content-center\">\n                <Form.Check\n                    id={rndId}\n                    checked={props.value as boolean}\n                    onChange={e => props.onChange(e.target.checked)}\n                    type=\"switch\"\n                    className=\"m-auto\"\n                    disabled={props.disabled}\n                    ref={ref}\n                />\n            </label>\n        );\n    }\n);\n\ntype NumberControlProps = ControlProps & {\n    min?: number;\n    max?: number;\n};\nconst NumberControl = React.forwardRef<HTMLInputElement, NumberControlProps>(\n    function NumberControl(props, ref): JSX.Element {\n        return (\n            <Form.Control\n                value={props.value as number}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    props.onChange(\n                        isNaN(e.target.valueAsNumber) ? e.target.value : e.target.valueAsNumber\n                    )\n                }\n                disabled={props.disabled}\n                min={props.min}\n                max={props.max}\n                type=\"number\"\n                ref={ref}\n            />\n        );\n    }\n);\n\ntype EnumControlProps = ControlProps & {\n    enum: AnyEnum;\n    noLocalize?: boolean;\n};\nconst EnumControl = React.forwardRef<HTMLSelectElement, EnumControlProps>(\n    function EnumControl(props, ref): JSX.Element {\n        return (\n            <Form.Control\n                value={props.value as string}\n                onChange={e => props.onChange(parseInt(e.target.value))}\n                disabled={props.disabled}\n                as=\"select\"\n                custom\n                ref={ref}>\n                {Object.entries(props.enum)\n                    //filters out reverse mapping\n                    .filter(([key]) => isNaN(parseInt(key)))\n                    .map(([key, value]) => {\n                        return props.noLocalize ? (\n                            <option key={value} value={value}>\n                                {key}\n                            </option>\n                        ) : (\n                            <FormattedMessage id={`${props.name}.${key}`} key={key}>\n                                {message => (\n                                    <option key={value} value={value}>\n                                        {message}\n                                    </option>\n                                )}\n                            </FormattedMessage>\n                        );\n                    })}\n            </Form.Control>\n        );\n    }\n);\n\nexport const defaultValues: Record<FieldType, InputFieldTypes> = {\n    [FieldType.Enum]: 0,\n    [FieldType.Number]: 0,\n    [FieldType.Boolean]: false,\n    [FieldType.String]: \"\",\n    [FieldType.Password]: \"\",\n    [FieldType.TextArea]: \"\"\n};\n\nexport default function InputField(props: InputFieldProps): JSX.Element {\n    const [currentValue, setCurrentValue] = useState(\n        props.defaultValue ?? defaultValues[props.type]\n    );\n    const controlRef = useRef<HTMLInputElement>(null);\n    useEffect(() => {\n        setCurrentValue(props.defaultValue ?? defaultValues[props.type]);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.defaultValue]);\n\n    useEffect(() => {\n        if (controlRef.current) {\n            if (controlRef.current.checkValidity()) {\n                controlRef.current.classList.remove(\"is-invalid\");\n            } else {\n                controlRef.current.classList.add(\"is-invalid\");\n            }\n        }\n\n        switch (props.type) {\n            case FieldType.Boolean:\n                props.onChange(\n                    currentValue as boolean,\n                    controlRef.current?.checkValidity() ?? true\n                );\n                return;\n            case FieldType.Enum:\n            case FieldType.Number:\n                props.onChange(currentValue as number, controlRef.current?.checkValidity() ?? true);\n                return;\n            case FieldType.String:\n            case FieldType.Password:\n            case FieldType.TextArea:\n                props.onChange(currentValue as string, controlRef.current?.checkValidity() ?? true);\n                return;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentValue]);\n\n    const tooltip = (innerid?: string) => {\n        if (!innerid) return <React.Fragment />;\n\n        return (\n            <Tooltip id={innerid}>\n                <FormattedMessage id={innerid} />\n            </Tooltip>\n        );\n    };\n\n    const basicControls: {\n        [Property in typeof props.type]: Property extends FieldType.Enum | FieldType.Number\n            ? undefined\n            : React.FC<ControlProps>;\n    } = {\n        string: StringControl,\n        password: PasswordControl,\n        boolean: BooleanControl,\n        textarea: TextAreaControl,\n        [FieldType.Number]: undefined,\n        [FieldType.Enum]: undefined\n    };\n\n    const changed =\n        currentValue != (props.defaultValue ?? defaultValues[props.type]) || props.forceChanged;\n\n    return (\n        <InputGroup>\n            <OverlayTrigger\n                overlay={tooltip(props.tooltip)}\n                show={props.tooltip ? undefined : false}>\n                {({ ref, ...triggerHandler }) => (\n                    <InputGroup.Prepend className=\"w-50 w-xl-40\">\n                        <InputGroup.Text className=\"flex-grow-1\" {...triggerHandler}>\n                            <span className={changed ? \"font-weight-bold\" : \"\"}>\n                                <FormattedMessage id={props.name} />\n                            </span>\n                            <div className=\"ml-auto\">\n                                {props.disabled && !props.hideReadOnly ? (\n                                    <FormattedMessage id=\"generic.readonly\" />\n                                ) : null}\n                                <div\n                                    ref={ref}\n                                    className=\"d-inline-block ml-2\"\n                                    style={{ visibility: props.tooltip ? \"unset\" : \"hidden\" }}>\n                                    <FontAwesomeIcon icon={faInfo} />\n                                </div>\n                            </div>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                )}\n            </OverlayTrigger>\n            {props.type === FieldType.Number ? (\n                <NumberControl\n                    value={currentValue}\n                    onChange={newValue => setCurrentValue(newValue)}\n                    name={props.name}\n                    disabled={props.disabled}\n                    max={props.max}\n                    min={props.min}\n                    ref={controlRef}\n                />\n            ) : props.type === FieldType.Enum ? (\n                <EnumControl\n                    value={currentValue}\n                    onChange={newValue => setCurrentValue(newValue)}\n                    name={props.name}\n                    enum={props.enum}\n                    noLocalize={props.noLocalize}\n                    disabled={props.disabled}\n                />\n            ) : (\n                React.createElement<ControlProps & React.RefAttributes<HTMLInputElement>>(\n                    basicControls[props.type],\n                    {\n                        value: currentValue,\n                        onChange: newValue => setCurrentValue(newValue),\n                        disabled: props.disabled,\n                        name: props.type,\n                        ref: controlRef\n                    }\n                )\n            )}\n            {!(!changed || props.disabled) || props.additionalAppend ? (\n                <InputGroup.Append>\n                    {!(!changed || props.disabled) ? (\n                        <Button\n                            variant=\"danger\"\n                            onClick={() =>\n                                setCurrentValue(props.defaultValue ?? defaultValues[props.type])\n                            }>\n                            <FontAwesomeIcon icon=\"undo\" />\n                        </Button>\n                    ) : null}\n                    {props.additionalAppend}\n                </InputGroup.Append>\n            ) : null}\n        </InputGroup>\n    );\n}\n","import React from \"react\";\nimport ReactJson from \"react-json-view\";\n\nimport configOptions from \"../../ApiClient/util/config\";\n\nexport default function JsonViewer(props: { obj: unknown }): JSX.Element {\n    return (\n        <ReactJson\n            src={props.obj as Record<string, unknown>}\n            name={\"JSON\"}\n            theme=\"tube\"\n            iconStyle=\"triangle\"\n            collapsed\n            displayDataTypes={false}\n        />\n    );\n}\n\nexport function DebugJsonViewer(props: { obj: unknown }): JSX.Element {\n    if (!configOptions.showjson.value) {\n        return <></>;\n    }\n    return (\n        <div className=\"text-left\">\n            <JsonViewer obj={props.obj} />\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport type {\n    InstancePermissionSetResponse,\n    InstanceResponse,\n    ServerInformationResponse,\n    UserResponse\n} from \"../ApiClient/generatedcode/generated\";\nimport InternalError from \"../ApiClient/models/InternalComms/InternalError\";\n\nexport type InstanceEditContext = {\n    deleteError: (error: InternalError) => void;\n    errors: Set<InternalError>;\n    reloadInstance: () => Promise<void>;\n    instance: InstanceResponse;\n    user: UserResponse;\n    serverInfo: ServerInformationResponse;\n    instancePermissionSet: InstancePermissionSetResponse;\n};\n\n//same as InstanceEditContext except used for components which arent loading under instanceedit so we cant guarentee that instance wont be null\nexport type UnsafeInstanceEditContext = {\n    deleteError: (error: InternalError) => void;\n    errors: Set<InternalError>;\n    reloadInstance: () => Promise<void>;\n    instance: InstanceResponse | null;\n    user: UserResponse;\n    serverInfo: ServerInformationResponse;\n    instancePermissionSet: InstancePermissionSetResponse | null;\n};\n\nexport const InstanceEditContext = React.createContext<InstanceEditContext>(\n    undefined as unknown as InstanceEditContext\n);\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"onSelect\", \"transition\", \"mountOnEnter\", \"unmountOnExit\", \"children\", \"activeKey\"];\nimport React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nvar defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  var _child$props = child.props,\n      title = _child$props.title,\n      eventKey = _child$props.eventKey,\n      disabled = _child$props.disabled,\n      tabClassName = _child$props.tabClassName,\n      id = _child$props.id;\n\n  if (title == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavItem, {\n    as: NavLink,\n    eventKey: eventKey,\n    disabled: disabled,\n    id: id,\n    className: tabClassName\n  }, title);\n}\n\nvar Tabs = function Tabs(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      onSelect = _useUncontrolled.onSelect,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children,\n      _useUncontrolled$acti = _useUncontrolled.activeKey,\n      activeKey = _useUncontrolled$acti === void 0 ? getDefaultActiveKey(children) : _useUncontrolled$acti,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  return /*#__PURE__*/React.createElement(TabContainer, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, /*#__PURE__*/React.createElement(Nav, _extends({}, controlledProps, {\n    role: \"tablist\",\n    as: \"nav\"\n  }), map(children, renderTab)), /*#__PURE__*/React.createElement(TabContent, null, map(children, function (child) {\n    var childProps = _extends({}, child.props);\n\n    delete childProps.title;\n    delete childProps.disabled;\n    delete childProps.tabClassName;\n    return /*#__PURE__*/React.createElement(TabPane, childProps);\n  })));\n};\n\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;"],"names":["FieldType","StringControl","React","props","ref","Form","Control","value","onChange","e","target","disabled","TextAreaControl","as","PasswordControl","type","BooleanControl","rndId","Math","random","toString","htmlFor","className","Check","id","checked","NumberControl","isNaN","valueAsNumber","min","max","EnumControl","parseInt","custom","Object","entries","enum","filter","key","map","noLocalize","FormattedMessage","name","message","defaultValues","Enum","Number","Boolean","String","Password","TextArea","InputField","currentValue","setCurrentValue","useState","defaultValue","controlRef","useRef","useEffect","current","checkValidity","classList","remove","add","basicControls","string","password","boolean","textarea","undefined","changed","forceChanged","InputGroup","OverlayTrigger","overlay","innerid","tooltip","Tooltip","show","triggerHandler","Prepend","Text","_extends","hideReadOnly","style","visibility","FontAwesomeIcon","icon","faInfo","newValue","additionalAppend","Append","Button","variant","onClick","JsonViewer","ReactJson","src","obj","theme","iconStyle","collapsed","displayDataTypes","DebugJsonViewer","configOptions","showjson","InstanceEditContext","_excluded","InputGroupAppend","InputGroupPrepend","InputGroupText","Component","_ref","bsPrefix","size","hasValidation","_ref$as","displayName","Radio","Checkbox","Tab","_React$Component","apply","this","arguments","prototype","render","Error","Container","Content","Pane","_useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","children","useMemo","tabContext","getControlledId","getControllerId","Provider","TabContent","decoratedBsPrefix","_excluded2","TabPane","_useTabContext","context","useContext","rest","shouldTransition","eventKey","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","renderTab","child","_child$props","title","tabClassName","Tabs","_useUncontrolled$acti","defaultActiveKey","getDefaultActiveKey","controlledProps","childProps","defaultProps"],"sourceRoot":""}