{"version":3,"file":"9558.f9f49501456653dad01f.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/translations/Translation.ts","webpack://tgstation-server-control-panel/./src/translations/TranslationFactory.ts","webpack://tgstation-server-control-panel/./src/App.tsx","webpack://tgstation-server-control-panel/./src/components/utils/Loading.tsx","webpack://tgstation-server-control-panel/./src/contexts/GeneralContext.ts","webpack://tgstation-server-control-panel/./src/utils/misc.ts","webpack://tgstation-server-control-panel/./src/translations/locales/ lazy ^\\.\\/.*\\.json$ namespace object"],"sourcesContent":["import ILocalization from \"./ILocalization\";\nimport ITranslation from \"./ITranslation\";\n\nexport default class Translation implements ITranslation {\n    public constructor(\n        public readonly locale: string,\n        public readonly messages: ILocalization\n    ) {}\n}\n","import ITranslation from \"./ITranslation\";\nimport ITranslationFactory from \"./ITranslationFactory\";\nimport Locales from \"./Locales\";\nimport Translation from \"./Translation\";\n\nclass TranslationFactory implements ITranslationFactory {\n    private static readonly fallbackLocale: string = Locales.en;\n\n    private static getShortHandedLocale(locale: string): string {\n        return locale.split(\"-\")[0];\n    }\n\n    public async loadTranslation(locale: string): Promise<ITranslation> {\n        //fancy type annotations but its just load the json file in this variable as a map of strings to strings\n        const localization: { [key: string]: string } = (await import(\n            `./locales/${locale}.json`\n        )) as { [key: string]: string };\n\n        if (!localization) {\n            let shortHandedLocale = TranslationFactory.getShortHandedLocale(locale);\n            if (shortHandedLocale === locale) {\n                if (shortHandedLocale === TranslationFactory.fallbackLocale)\n                    throw new Error(\"Invalid locale: \" + locale);\n                shortHandedLocale = TranslationFactory.fallbackLocale;\n            }\n            return await this.loadTranslation(shortHandedLocale);\n        }\n\n        let model: ITranslation | null = null;\n        try {\n            model = new Translation(locale, localization);\n        } catch (e) {\n            throw Error(`Error loading localization for locale '${locale}': ${JSON.stringify(e)}`);\n        }\n\n        return model;\n    }\n}\n\nexport default TranslationFactory;\n","import \"./App.css\";\n\n// polyfills\nimport * as React from \"react\";\nimport { Suspense } from \"react\";\nimport { IntlProvider } from \"react-intl\";\n\nimport InternalError, {\n    ErrorCode,\n    GenericErrors\n} from \"./ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"./ApiClient/models/InternalComms/InternalStatus\";\nimport ServerClient from \"./ApiClient/ServerClient\";\nimport UserClient from \"./ApiClient/UserClient\";\nimport LoginHooks from \"./ApiClient/util/LoginHooks\";\nimport Loading from \"./components/utils/Loading\";\nimport { GeneralContext, UnsafeGeneralContext } from \"./contexts/GeneralContext\";\nimport ITranslation from \"./translations/ITranslation\";\nimport ITranslationFactory from \"./translations/ITranslationFactory\";\nimport TranslationFactory from \"./translations/TranslationFactory\";\n\nconst polyfills = import(\"./polyfills\");\nconst icolibrary = import(\"./utils/icolibrary\");\nconst ConfigController = import(\"./ApiClient/util/ConfigController\");\nconst JobsController = import(\"./ApiClient/util/JobsController\");\nconst InnerApp = React.lazy(() => import(\"./InnerApp\"));\n\ninterface IState {\n    translation?: ITranslation;\n    translationError?: string;\n    loggedIn: boolean;\n    loggedOut: boolean;\n    loading: boolean;\n    polyfills: boolean;\n    GeneralContextInfo: UnsafeGeneralContext;\n}\n\ninterface IProps {\n    readonly locale: string;\n    readonly translationFactory?: ITranslationFactory;\n}\n\nclass App extends React.Component<IProps, IState> {\n    private readonly translationFactory: ITranslationFactory;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.finishLogin = this.finishLogin.bind(this);\n        this.finishLogout = this.finishLogout.bind(this);\n        this.updateContextUser = this.updateContextUser.bind(this);\n        this.updateContextServer = this.updateContextServer.bind(this);\n        this.deleteGeneralContextError = this.deleteGeneralContextError.bind(this);\n\n        this.translationFactory = this.props.translationFactory ?? new TranslationFactory();\n\n        this.state = {\n            loggedIn: false,\n            loggedOut: false,\n            loading: true,\n            polyfills: false,\n            GeneralContextInfo: {\n                errors: new Set(),\n                user: null,\n                serverInfo: null,\n                deleteError: this.deleteGeneralContextError\n            }\n        };\n    }\n\n    private async updateContextUser() {\n        const response = await UserClient.getCurrentUser();\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    GeneralContextInfo: {\n                        errors: prev.GeneralContextInfo.errors,\n                        user: response.payload,\n                        serverInfo: prev.GeneralContextInfo.serverInfo,\n                        deleteError: prev.GeneralContextInfo.deleteError\n                    }\n                };\n            });\n        } else {\n            if (response.error.code === ErrorCode.HTTP_ACCESS_DENIED) {\n                this.setState(prev => {\n                    return {\n                        GeneralContextInfo: {\n                            user: null,\n                            serverInfo: prev.GeneralContextInfo.serverInfo,\n                            deleteError: prev.GeneralContextInfo.deleteError,\n                            errors: prev.GeneralContextInfo.errors\n                        }\n                    };\n                });\n            } else {\n                setTimeout(() => void this.updateContextUser(), 5000);\n                this.setState(prev => {\n                    const newSet = new Set(prev.GeneralContextInfo.errors);\n                    newSet.add(response.error);\n                    return {\n                        GeneralContextInfo: {\n                            errors: newSet,\n                            deleteError: prev.GeneralContextInfo.deleteError,\n                            user: null,\n                            serverInfo: prev.GeneralContextInfo.serverInfo\n                        }\n                    };\n                });\n            }\n        }\n    }\n\n    private async updateContextServer(lastError?: InternalError<GenericErrors>) {\n        const response = await ServerClient.getServerInfo();\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                const newSet = new Set(prev.GeneralContextInfo.errors);\n                if (lastError) {\n                    newSet.delete(lastError);\n                }\n                return {\n                    GeneralContextInfo: {\n                        errors: newSet,\n                        user: prev.GeneralContextInfo.user,\n                        serverInfo: response.payload,\n                        deleteError: prev.GeneralContextInfo.deleteError\n                    }\n                };\n            });\n        } else {\n            setTimeout(() => void this.updateContextServer(response.error), 5000);\n            this.setState(prev => {\n                const newSet = new Set(prev.GeneralContextInfo.errors);\n                newSet.add(response.error);\n                if (lastError) {\n                    newSet.delete(lastError);\n                }\n                return {\n                    GeneralContextInfo: {\n                        errors: newSet,\n                        deleteError: prev.GeneralContextInfo.deleteError,\n                        user: prev.GeneralContextInfo.user,\n                        serverInfo: null\n                    }\n                };\n            });\n        }\n    }\n\n    public deleteGeneralContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.GeneralContextInfo.errors);\n            newSet.delete(error);\n            return {\n                GeneralContextInfo: {\n                    deleteError: prev.GeneralContextInfo.deleteError,\n                    user: prev.GeneralContextInfo.user,\n                    serverInfo: prev.GeneralContextInfo.serverInfo,\n                    errors: newSet\n                }\n            };\n        });\n    }\n\n    private finishLogin() {\n        console.log(\"Logging in\");\n\n        void this.updateContextUser().then(() =>\n            this.setState({\n                loggedIn: true,\n                loading: false\n            })\n        );\n    }\n\n    private finishLogout() {\n        this.setState({\n            loggedIn: false,\n            loggedOut: true\n        });\n\n        void this.updateContextUser();\n    }\n    public componentDidMount(): void {\n        void (async () => {\n            // dont lag the dom\n            const initIcons = await icolibrary;\n            initIcons.default();\n            (await ConfigController).default.loadconfig();\n            (await JobsController).default.init();\n\n            LoginHooks.on(\"loginSuccess\", this.finishLogin);\n            ServerClient.on(\"logout\", this.finishLogout);\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            ServerClient.on(\"purgeCache\", this.updateContextServer);\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            ServerClient.on(\"purgeCache\", this.updateContextUser);\n\n            await polyfills;\n\n            this.setState({ polyfills: true });\n\n            await this.loadTranslation();\n            const loggedInSuccessfully = await ServerClient.initApi();\n            await this.updateContextServer();\n            if (loggedInSuccessfully) {\n                await this.updateContextUser();\n            }\n\n            this.setState({\n                loading: false,\n                loggedIn: loggedInSuccessfully\n            });\n        })();\n    }\n\n    public componentWillUnmount(): void {\n        LoginHooks.removeListener(\"loginSuccess\", this.finishLogin);\n        ServerClient.removeListener(\"logout\", this.finishLogout);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        ServerClient.removeListener(\"purgeCache\", this.updateContextServer);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        ServerClient.removeListener(\"purgeCache\", this.updateContextUser);\n    }\n\n    public render(): React.ReactNode {\n        if (!this.state.polyfills) {\n            return <Loading>Loading polyfills...</Loading>;\n        }\n\n        if (this.state.translationError) {\n            return <p className=\"App-error\">{this.state.translationError}</p>;\n        }\n\n        if (!this.state.translation) {\n            return <Loading>Loading translations...</Loading>;\n        }\n        return (\n            <IntlProvider\n                locale={this.state.translation.locale}\n                messages={this.state.translation.messages}\n                defaultLocale=\"en\">\n                <Suspense fallback={<Loading text=\"loading.app\" />}>\n                    <GeneralContext.Provider\n                        value={this.state.GeneralContextInfo as GeneralContext}>\n                        <InnerApp\n                            loading={this.state.loading}\n                            loggedIn={this.state.loggedIn}\n                            loggedOut={this.state.loggedOut}\n                        />\n                    </GeneralContext.Provider>\n                </Suspense>\n            </IntlProvider>\n        );\n    }\n\n    private async loadTranslation(): Promise<void> {\n        console.time(\"LoadTranslations\");\n        try {\n            const translation = await this.translationFactory.loadTranslation(this.props.locale);\n            this.setState({\n                translation\n            });\n        } catch (error) {\n            this.setState({\n                translationError: JSON.stringify(error) ?? \"An unknown error occurred\"\n            });\n\n            return;\n        }\n\n        console.timeEnd(\"LoadTranslations\");\n    }\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport Spinner, { SpinnerProps } from \"react-bootstrap/Spinner\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst CssTransitionGroup = React.lazy(() => import(\"./CssTransitionGroup\"));\n\ntype IProps = SpinnerProps & {\n    animation: \"border\" | \"grow\";\n    center: boolean;\n    width: number;\n    widthUnit: string;\n    className?: string;\n    text?: string;\n    noIntl?: boolean;\n};\n\ntype IState = object;\n\nexport default class Loading extends React.Component<IProps, IState> {\n    public static defaultProps = {\n        animation: \"border\",\n        width: \"50\",\n        widthUnit: \"vmin\",\n        center: true\n    };\n\n    public render(): React.ReactNode {\n        return (\n            <Suspense fallback={this.renderSpinner()}>\n                <CssTransitionGroup>{this.renderSpinner()}</CssTransitionGroup>\n            </Suspense>\n        );\n    }\n\n    private renderSpinner(): NonNullable<React.ReactNode> {\n        const {\n            variant,\n            animation,\n            center,\n            className,\n            width,\n            widthUnit,\n            text,\n            children,\n            ...otherprops\n        } = this.props;\n        const styles: React.CSSProperties = {\n            width: `${width}${widthUnit}`,\n            height: `${width}${widthUnit}`\n        } as React.CSSProperties;\n\n        return (\n            <div className={center ? \"text-center\" : \"\"}>\n                <Spinner\n                    variant={variant ? variant : \"secondary\"}\n                    className={center ? `d-block mx-auto ${className ?? \"\"}` : className}\n                    style={styles}\n                    animation={animation ? animation : \"border\"}\n                    {...otherprops}\n                />\n                {text ? this.props.noIntl ? text : <FormattedMessage id={text} /> : \"\"}\n                {children}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport type { ServerInformationResponse, UserResponse } from \"../ApiClient/generatedcode/generated\";\nimport InternalError from \"../ApiClient/models/InternalComms/InternalError\";\n\nexport type GeneralContext = {\n    deleteError: (error: InternalError) => void;\n    errors: Set<InternalError>;\n    user: UserResponse;\n    serverInfo: ServerInformationResponse;\n};\n\n//same as GeneralContext except used for components which arent loading under the router so we cant guarentee that serverInfo and user wont be null\nexport type UnsafeGeneralContext = {\n    deleteError: (error: InternalError) => void;\n    errors: Set<InternalError>;\n    user: UserResponse | null;\n    serverInfo: ServerInformationResponse | null;\n};\n\nexport const GeneralContext = React.createContext<GeneralContext>(\n    undefined as unknown as GeneralContext\n);\n","import { pathToRegexp } from \"path-to-regexp\";\n\nimport {\n    AdministrationRights,\n    ChatBotRights,\n    ConfigurationRights,\n    DreamDaemonRights,\n    DreamMakerRights,\n    EngineRights,\n    InstanceManagerRights,\n    InstancePermissionSetResponse,\n    InstancePermissionSetRights,\n    PermissionSet,\n    RepositoryRights,\n    UserResponse\n} from \"../ApiClient/generatedcode/generated\";\n\nexport type DistributiveOmit<T, K extends keyof T> = T extends T ? Omit<T, K> : never;\n\nfunction download(filename: string, text: string): void {\n    const element = document.createElement(\"a\");\n    element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    element.setAttribute(\"download\", filename);\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nfunction replaceAll(str: string, find: string, replace: string, ignore?: boolean): string {\n    return str.replace(\n        new RegExp(find.replace(/([/,!\\\\^${}[\\]().*+?|<>\\-&])/g, \"\\\\$&\"), ignore ? \"gi\" : \"g\"),\n        replace.replace(/\\$/g, \"$$$$\")\n    );\n}\n\nfunction matchesPath(path: string, target: string, exact = false): boolean {\n    //remove trailing slashes\n    if (path.slice(-1) === \"/\") path = path.slice(0, -1);\n    if (target.slice(-1) === \"/\") target = target.slice(0, -1);\n\n    return pathToRegexp(target, undefined, { end: exact }).test(path);\n}\n\nfunction resolvePermissionSet(user: UserResponse): PermissionSet {\n    return (user.permissionSet ?? user.group?.permissionSet) as PermissionSet;\n}\n\nfunction bitflagIsTrue(bitfield: number, bitflag: number): boolean {\n    return !!(bitflag & bitfield);\n}\n\nfunction hasAdminRight(permissionSet: PermissionSet, right: AdministrationRights): boolean {\n    return bitflagIsTrue(permissionSet.administrationRights, right);\n}\n\nfunction hasInstanceManagerRight(\n    permissionSet: PermissionSet,\n    right: InstanceManagerRights\n): boolean {\n    return bitflagIsTrue(permissionSet.instanceManagerRights, right);\n}\n\nfunction hasEngineRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: EngineRights\n): boolean {\n    return bitflagIsTrue(permissionSet.engineRights, right);\n}\n\nfunction hasChatBotRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: ChatBotRights\n): boolean {\n    return bitflagIsTrue(permissionSet.chatBotRights, right);\n}\n\nfunction hasConfigRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: ConfigurationRights\n): boolean {\n    return bitflagIsTrue(permissionSet.configurationRights, right);\n}\n\nfunction hasDreamDaemonRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: DreamDaemonRights\n): boolean {\n    return bitflagIsTrue(permissionSet.dreamDaemonRights, right);\n}\n\nfunction hasDreamMakerRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: DreamMakerRights\n): boolean {\n    return bitflagIsTrue(permissionSet.dreamMakerRights, right);\n}\n\nfunction hasInstancePermRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: InstancePermissionSetRights\n): boolean {\n    return bitflagIsTrue(permissionSet.instancePermissionSetRights, right);\n}\n\nfunction hasRepoRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: RepositoryRights\n): boolean {\n    return bitflagIsTrue(permissionSet.repositoryRights, right);\n}\n\nfunction hasFilesRight(\n    permissionSet: InstancePermissionSetResponse,\n    right: ConfigurationRights\n): boolean {\n    return bitflagIsTrue(permissionSet.configurationRights, right);\n}\n\nexport {\n    download,\n    replaceAll,\n    matchesPath,\n    resolvePermissionSet,\n    bitflagIsTrue,\n    hasAdminRight,\n    hasEngineRight,\n    hasConfigRight,\n    hasRepoRight,\n    hasChatBotRight,\n    hasInstancePermRight,\n    hasInstanceManagerRight,\n    hasDreamMakerRight,\n    hasDreamDaemonRight,\n    hasFilesRight\n};\n","var map = {\n\t\"./en.json\": [\n\t\t2161,\n\t\t2161\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 1931;\nmodule.exports = webpackAsyncContext;"],"names":["Translation","constructor","locale","messages","TranslationFactory","getShortHandedLocale","split","loadTranslation","localization","shortHandedLocale","fallbackLocale","Error","this","model","e","JSON","stringify","Locales","en","polyfills","icolibrary","ConfigController","JobsController","InnerApp","React","App","props","super","translationFactory","finishLogin","bind","finishLogout","updateContextUser","updateContextServer","deleteGeneralContextError","state","loggedIn","loggedOut","loading","GeneralContextInfo","errors","Set","user","serverInfo","deleteError","response","UserClient","getCurrentUser","code","StatusCode","OK","setState","prev","payload","error","ErrorCode","HTTP_ACCESS_DENIED","setTimeout","newSet","add","lastError","ServerClient","getServerInfo","delete","console","log","then","componentDidMount","default","loadconfig","init","LoginHooks","on","loggedInSuccessfully","initApi","componentWillUnmount","removeListener","render","translationError","className","translation","IntlProvider","defaultLocale","Suspense","fallback","Loading","text","GeneralContext","Provider","value","time","timeEnd","CssTransitionGroup","renderSpinner","variant","animation","center","width","widthUnit","children","otherprops","styles","height","Spinner","_extends","style","noIntl","FormattedMessage","id","defaultProps","undefined","download","filename","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","replaceAll","str","find","replace","ignore","RegExp","matchesPath","path","target","exact","slice","pathToRegexp","end","test","resolvePermissionSet","permissionSet","group","bitflagIsTrue","bitfield","bitflag","hasAdminRight","right","administrationRights","hasInstanceManagerRight","instanceManagerRights","hasEngineRight","engineRights","hasChatBotRight","chatBotRights","hasDreamDaemonRight","dreamDaemonRights","hasDreamMakerRight","dreamMakerRights","hasInstancePermRight","instancePermissionSetRights","hasRepoRight","repositoryRights","hasFilesRight","configurationRights","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","ids","t","keys","Object","module","exports"],"sourceRoot":""}