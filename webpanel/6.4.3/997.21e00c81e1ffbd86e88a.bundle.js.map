{"version":3,"file":"997.21e00c81e1ffbd86e88a.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/views/Home.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as React from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\n\nimport ServerClient from \"../../ApiClient/ServerClient\";\nimport CredentialsProvider from \"../../ApiClient/util/CredentialsProvider\";\nimport RouteController from \"../../utils/RouteController\";\nimport { AppRoute, AppRoutes } from \"../../utils/routes\";\n\ntype IProps = object;\ninterface IState {\n    routes: Array<AppRoute>;\n    usingDefaultCreds: boolean;\n}\n\nexport default class Home extends React.Component<IProps, IState> {\n    public static readonly Route: string = \"/\";\n\n    public constructor(props: IProps) {\n        super(props);\n        this.setRoutes = this.setRoutes.bind(this);\n\n        this.state = {\n            routes: [],\n            usingDefaultCreds: false\n        };\n    }\n\n    private setRoutes(routes: AppRoute[]) {\n        this.setState(prevState => {\n            return {\n                routes: routes,\n                usingDefaultCreds: prevState.usingDefaultCreds\n            };\n        });\n    }\n\n    public componentDidMount(): void {\n        void (async () => {\n            this.setState({\n                routes: await RouteController.getRoutes(false)\n            });\n            RouteController.on(\"refreshAll\", this.setRoutes);\n\n            await ServerClient.wait4Token();\n            const usingDefaultCreds = CredentialsProvider.defaulted || false;\n            this.setState(prevState => {\n                return {\n                    routes: prevState.routes,\n                    usingDefaultCreds: usingDefaultCreds\n                };\n            });\n        })();\n    }\n\n    public componentWillUnmount(): void {\n        RouteController.removeListener(\"refreshAll\", this.setRoutes);\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <React.Fragment>\n                <Alert className=\"clearfix\" variant=\"warning\" show={this.state.usingDefaultCreds}>\n                    <FormattedMessage id=\"error.app.default_creds\" />\n                </Alert>\n                <Row xs={1} sm={2} md={3} lg={4} className=\"justify-content-center\">\n                    {this.state.routes.map(val => {\n                        //this means it shouldnt be displayed on the home screen\n                        if (!val.homeIcon) return;\n\n                        if (val === AppRoutes.home) return;\n\n                        return (\n                            <Col key={val.link ?? val.route} className=\"mb-1 home\">\n                                <Card\n                                    as={val.cachedAuth ? Link : \"div\"}\n                                    //@ts-expect-error //dont really know how to fix this so uhhhhhhh, this will do for now\n                                    to={val.link ?? val.route}\n                                    className={`text-decoration-none m-1 h-75 ${\n                                        val.cachedAuth\n                                            ? \"text-primary\"\n                                            : \"text-danger d-sm-flex d-none\"\n                                    }`}>\n                                    <Card.Body\n                                        style={{\n                                            height: \"245px\"\n                                        }}>\n                                        <FontAwesomeIcon\n                                            fixedWidth={true}\n                                            icon={val.homeIcon}\n                                            className=\"d-block w-100 h-100 m-auto\"\n                                        />\n                                    </Card.Body>\n                                    <Card.Footer\n                                        className={`text-center font-weight-bold ${\n                                            val.cachedAuth ? \"\" : \"text-danger font-italic\"\n                                        }`}>\n                                        <FormattedMessage id={val.name} />\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;"],"names":["Home","React","constructor","props","super","this","setRoutes","bind","state","routes","usingDefaultCreds","setState","prevState","componentDidMount","RouteController","getRoutes","on","ServerClient","wait4Token","CredentialsProvider","defaulted","componentWillUnmount","removeListener","render","Alert","className","variant","show","FormattedMessage","id","Row","xs","sm","md","lg","map","val","homeIcon","AppRoutes","home","Col","key","link","route","Card","as","cachedAuth","Link","to","Body","style","height","FontAwesomeIcon","fixedWidth","icon","Footer","name","Route","_excluded","DEVICE_SIZES","_ref","ref","bsPrefix","noGutters","_ref$as","Component","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","concat","displayName","defaultProps"],"sourceRoot":""}