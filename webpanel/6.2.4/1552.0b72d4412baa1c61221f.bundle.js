"use strict";(self.webpackChunktgstation_server_control_panel=self.webpackChunktgstation_server_control_panel||[]).push([[1552],{3728:function(e,t,r){var o,n=r(3110),i=r(5537),s=r(7602),a=r(4354),l=r(2576),c=r(6382),d=r(4173),u=r(5301),h=r(8437),p=r(6192),m=r(536);t.A=new((o=class e extends a.O{constructor(){super(),this.apiHttpClient=void 0,this.apiClient=void 0,this.apiRequestInterceptor={onFulfilled:async e=>{if("https://example.org:5000"===h.Ay.apipath.value){const e=new d.Ay(d.O4.NO_APIPATH,{void:!0});return Promise.reject(e)}if(e.overrideTokenDetection||"/api"!==e.url&&"/api/"!==e.url){const t=await this.wait4Token();e.headers.Authorization=`Bearer ${t.bearer||""}`}return e},onRejected:e=>Promise.reject(e)},this.apiResponseInterceptor={onFulfilled:e=>e,onRejected:(t,r)=>{const o=t;if(o?.code===d.O4.NO_APIPATH)return Promise.reject(o);if(!(t.response&&t.response.status&&e.globalHandledCodes.includes(t.response.status))){const e=t,r=new d.Ay(d.O4.AXIOS,{jsError:e},t.response);return Promise.reject(r)}const n=t.response;switch(t.response.status){case 400:{const e=n.data,t=new d.Ay(d.O4.HTTP_BAD_REQUEST,{errorMessage:e},n);return Promise.reject(t)}case 401:{const e=t.config;if("/api"===e.url||"api"===e.url)return Promise.resolve(t.response);if(this.autoLogin)return this.login().then((e=>{switch(e.code){case u.s.OK:return r.request(t.config);case u.s.ERROR:return this.emit("accessDenied"),this.logout(),Promise.reject(e)}}));{this.emit("accessDenied");const e=new d.Ay(d.O4.HTTP_ACCESS_DENIED,{void:!0},n,!0);return Promise.reject(e)}}case 403:{const e=t.config;if("/"!==e.url&&""!==e.url||"post"!==e.method){this.emit("accessDenied");const e=new d.Ay(d.O4.HTTP_ACCESS_DENIED,{void:!0},n,!0);return Promise.reject(e)}return Promise.resolve(t.response)}case 406:{const e=new d.Ay(d.O4.HTTP_NOT_ACCEPTABLE,{void:!0},n);return Promise.reject(e)}case 409:{const e=n.data,r=t.config;if("/Administration/Logs"===r.url&&"get"===r.method)return Promise.resolve(t.response);const o=new d.Ay(d.O4.HTTP_DATA_INEGRITY,{errorMessage:e},n);return Promise.reject(o)}case 426:{const e=n.data,t=new d.Ay(d.O4.HTTP_API_MISMATCH,{errorMessage:e},n);return Promise.reject(t)}case 500:{const e=n.data,t=new d.Ay(d.O4.HTTP_SERVER_ERROR,{errorMessage:e},n);return Promise.reject(t)}case 501:{const e=n.data,t=new d.Ay(d.O4.HTTP_UNIMPLEMENTED,{errorMessage:e},n);return Promise.reject(t)}case 503:return console.log("Server not ready, delaying request",t.config),new Promise((e=>{setTimeout(e,5e3)})).then((()=>r.request(t.config)));default:{const e=new d.Ay(d.O4.UNHANDLED_GLOBAL_RESPONSE,{axiosResponse:n},n);return Promise.reject(e)}}}},this.initialized=!1,this.loadingServerInfo=!1,this._serverInfo=void 0,this.autoLogin=!0,this.loggingIn=!1,this.getServerInfo=this.getServerInfo.bind(this),m.A.addHook(this.getServerInfo),this.on("purgeCache",(()=>{this._serverInfo=void 0,p.A.token&&m.A.runHooks(p.A.token)})),h.Ay.apipath.callback=()=>{console.log("API path changed"),window.location.reload()}}get serverInfo(){return this._serverInfo}get defaultHeaders(){return{Accept:"application/json",Api:"Tgstation.Server.Api/"+s.mG,"Webpanel-Version":s.xv}}async initApi(){console.log("Initializing API client"),console.time("APIInit"),this.apiHttpClient=new l.Qq({baseURL:h.Ay.apipath.value,withCredentials:!1,headers:new n.$t(this.defaultHeaders),validateStatus:t=>!e.globalHandledCodes.includes(t)}),this.apiHttpClient.instance.interceptors.request.use(this.apiRequestInterceptor.onFulfilled,this.apiRequestInterceptor.onRejected),this.apiHttpClient.instance.interceptors.response.use(this.apiResponseInterceptor.onFulfilled,(e=>this.apiResponseInterceptor.onRejected(e,this.apiHttpClient.instance))),this.apiClient=new l.jI(this.apiHttpClient),console.timeEnd("APIInit");let t=!1;const r=localStorage.getItem("SessionToken"),o=localStorage.getItem("SessionTokenExpiry"),i="true"==localStorage.getItem("SessionTokenDefault");if(r&&o)if(console.log("Found session token"),1e3*parseInt(o)>=Date.now()){const e={bearer:r};t=await this.setToken(e,i,!0)}else console.log("But it was expired");return this.initialized=!0,this.emit("initialized"),t}wait4Init(){return new Promise((e=>{this.initialized?e():this.on("initialized",(()=>e()))}))}wait4Token(){return new Promise((e=>{p.A.hasToken()?e(p.A.token):this.on("tokenAvailable",(t=>{e(t)}))}))}async login(e){await this.wait4Init(),console.log("Attempting login");let t,r,o=!1;if(e?p.A.credentials=e:p.A.credentials?.type===c.$.OAuth&&(this.logout(),o=!0),o||!p.A.credentials)return new u.A({code:u.s.ERROR,error:new d.Ay(d.O4.LOGIN_NOCREDS,{void:!0})});if(this.loggingIn)return await new Promise((e=>{const t=r=>{e(r),this.removeListener("loadLoginInfo",t)};this.on("loadLoginInfo",t)}));this.loggingIn=!0;try{p.A.credentials.type==c.$.Password?(r=p.A.credentials.userName.toLowerCase()==p.A.default.userName.toLowerCase()&&p.A.credentials.password==p.A.default.password,t=await this.apiClient.api.apiRootControllerCreateToken({auth:{username:p.A.credentials.userName,password:p.A.credentials.password}})):(r=!1,t=await this.apiClient.api.apiRootControllerCreateToken({headers:new n.$t({OAuthProvider:p.A.credentials.provider,Authorization:`OAuth ${p.A.credentials.token}`})}))}catch(e){const t=new u.A({code:u.s.ERROR,error:e});return this.emit("loadLoginInfo",t),t}finally{this.loggingIn=!1}switch(t.status){case 200:{console.log("Login success");const e=t.data;await this.setToken(e,r,!1);const o=new u.A({code:u.s.OK,payload:e});return this.emit("loadLoginInfo",o),o}case 401:{this.logout(),console.log("Failed to login");const e=new u.A({code:u.s.ERROR,error:new d.Ay(d.O4.LOGIN_FAIL,{void:!0},t)});return this.emit("loadLoginInfo",e),e}case 403:{this.logout(),console.log("Account disabled");const e=new u.A({code:u.s.ERROR,error:new d.Ay(d.O4.LOGIN_DISABLED,{void:!0},t)});return this.emit("loadLoginInfo",e),e}case 429:{this.logout(),console.log("rate limited");const e=new u.A({code:u.s.ERROR,error:new d.Ay(d.O4.LOGIN_RATELIMIT,{errorMessage:t.data},t)});return this.emit("loadLoginInfo",e),e}default:{const e=new u.A({code:u.s.ERROR,error:new d.Ay(d.O4.UNHANDLED_RESPONSE,{axiosResponse:t},t)});return this.emit("loadLoginInfo",e),e}}}logout(){p.A.hasToken()&&(console.log("Logging out"),p.A.credentials=void 0,p.A.token=void 0,localStorage.removeItem("SessionToken"),localStorage.removeItem("SessionTokenExpiry"),this.emit("purgeCache"),this.emit("logout"))}async getServerInfo(e,t=!1){if(await this.wait4Init(),this._serverInfo&&!t)return this._serverInfo;if(this.loadingServerInfo)return new Promise((e=>{if(this._serverInfo)return void e(this._serverInfo);const t=r=>{e(r),this.removeListener("loadServerInfo",t)};this.on("loadServerInfo",t)}));let r;this.loadingServerInfo=!0;try{r=await this.apiClient.api.apiRootControllerServerInfo()}catch(e){const t=new u.A({code:u.s.ERROR,error:e});return this.emit("loadServerInfo",t),this.loadingServerInfo=!1,t}if(200===r.status){const e=r.data,t=new u.A({code:u.s.OK,payload:e});return this.emit("loadServerInfo",t),this._serverInfo=t,this.loadingServerInfo=!1,t}{const e=new u.A({code:u.s.ERROR,error:new d.Ay(d.O4.UNHANDLED_RESPONSE,{axiosResponse:r},r)});return this.emit("loadServerInfo",e),this.loadingServerInfo=!1,e}}async setToken(e,t,r){const o=p.A.token,n=p.A.defaulted;if(p.A.token=e,p.A.defaulted=t,r){let e;try{e=200!=(await this.apiClient.api.apiRootControllerServerInfo({overrideTokenDetection:!0})).status}catch{e=!0}if(e)return p.A.token=o,p.A.defaulted=n,console.log("Stored token failed to authenticate"),!1;console.log("Stored token authenticated")}localStorage.setItem("SessionToken",e.bearer);const s=(0,i.s)(e.bearer);return s.exp&&localStorage.setItem("SessionTokenExpiry",s.exp.toString()),localStorage.setItem("SessionTokenDefault",t?"true":"false"),this.emit("tokenAvailable",e),m.A.runHooks(e),!0}}).globalHandledCodes=[400,401,403,406,409,426,500,501,503],o)},1552:function(e,t,r){var o=r(4354),n=r(2576),i=r(4173),s=r(5301),a=r(3728),l=r(8437),c=r(536);t.A=new class extends o.O{get cachedUser(){return this._cachedUser}constructor(){super(),this._cachedUser=void 0,this.loadingUserInfo=!1,this.createAllUsersWithAA=!1,this.getCurrentUser=this.getCurrentUser.bind(this),c.A.addHook((()=>this.getCurrentUser())),a.A.on("purgeCache",(()=>{this._cachedUser=void 0}))}async editUser(e){let t;await a.A.wait4Init();try{t=await a.A.apiClient.api.userControllerUpdate(e)}catch(e){return new s.A({code:s.s.ERROR,error:e})}switch(t.status){case 200:{const r=await this.getCurrentUser();return r.code!=s.s.OK?new s.A({code:s.s.ERROR,error:r.error}):(r.payload.id==e.id&&a.A.emit("purgeCache"),new s.A({code:s.s.OK,payload:t.data}))}case 404:{const e=t.data;return new s.A({code:s.s.ERROR,error:new i.Ay(i.O4.USER_NOT_FOUND,{errorMessage:e})})}default:return new s.A({code:s.s.ERROR,error:new i.Ay(i.O4.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async getCurrentUser(e){if(await a.A.wait4Init(),this._cachedUser&&!e)return this._cachedUser;if(this.loadingUserInfo)return await new Promise((e=>{const t=r=>{e(r),this.removeListener("loadUserInfo",t)};this.on("loadUserInfo",t)}));let t;this.loadingUserInfo=!0;try{t=await a.A.apiClient.api.userControllerRead()}catch(e){const t=new s.A({code:s.s.ERROR,error:e});return this.emit("loadUserInfo",t),this.loadingUserInfo=!1,t}if(200===t.status){const e=new s.A({code:s.s.OK,payload:t.data});return this._cachedUser=e,this.emit("loadUserInfo",e),this.loadingUserInfo=!1,e}{const e=new s.A({code:s.s.ERROR,error:new i.Ay(i.O4.UNHANDLED_RESPONSE,{axiosResponse:t},t)});return this.emit("loadUserInfo",e),this.loadingUserInfo=!1,e}}async listUsers({page:e=1,pageSize:t=l.Ay.itemsperpage.value}){let r;await a.A.wait4Init();try{r=await a.A.apiClient.api.userControllerList({page:e,pageSize:t})}catch(e){return new s.A({code:s.s.ERROR,error:e})}if(200===r.status){const e=r.data.content.sort(((e,t)=>e.id-t.id));return new s.A({code:s.s.OK,payload:{...r.data,content:e}})}return new s.A({code:s.s.ERROR,error:new i.Ay(i.O4.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}async getUser(e){let t;await a.A.wait4Init();try{t=await a.A.apiClient.api.userControllerGetId(e)}catch(e){return new s.A({code:s.s.ERROR,error:e})}switch(t.status){case 200:return new s.A({code:s.s.OK,payload:t.data});case 404:{const e=t.data;return new s.A({code:s.s.ERROR,error:new i.Ay(i.O4.USER_NOT_FOUND,{errorMessage:e})})}default:return new s.A({code:s.s.ERROR,error:new i.Ay(i.O4.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async createUser(e){if(await a.A.wait4Init(),void 0===e.enabled&&(e.enabled=!0),this.createAllUsersWithAA){e.instanceManagerRights=0,e.administrationRights=0;for(const t of Object.values(n.cq))"number"==typeof t&&(e.instanceManagerRights+=t);for(const t of Object.values(n.O4))"number"==typeof t&&(e.administrationRights+=t)}let t;try{t=await a.A.apiClient.api.userControllerCreate(e)}catch(e){return new s.A({code:s.s.ERROR,error:e})}switch(t.status){case 201:return new s.A({code:s.s.OK,payload:t.data});case 410:{const e=t.data;return new s.A({code:s.s.ERROR,error:new i.Ay(i.O4.USER_NO_SYS_IDENT,{errorMessage:e})})}default:return new s.A({code:s.s.ERROR,error:new i.Ay(i.O4.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}}},4354:function(e,t,r){r.d(t,{O:function(){return n}});var o=r(4101);class n extends o.TypedEmitter{constructor(){super(),null==window.clients&&(window.clients={}),console.log(this.constructor.name,this),window.clients[this.constructor.name]=this}}},2576:function(e,t,r){r.d(t,{B5:function(){return s},CF:function(){return E},GZ:function(){return h},HB:function(){return c},LD:function(){return S},NB:function(){return u},O4:function(){return i},Qq:function(){return T},SK:function(){return A},WX:function(){return I},_W:function(){return O},cq:function(){return R},em:function(){return g},jI:function(){return P},k_:function(){return a},mA:function(){return y},mS:function(){return p},p3:function(){return f},qd:function(){return l},rY:function(){return m},u3:function(){return d},vH:function(){return C}});var o=r(3110),n=r(1083);let i=function(e){return e[e.None=0]="None",e[e.WriteUsers=1]="WriteUsers",e[e.RestartHost=2]="RestartHost",e[e.ChangeVersion=4]="ChangeVersion",e[e.EditOwnPassword=8]="EditOwnPassword",e[e.ReadUsers=16]="ReadUsers",e[e.DownloadLogs=32]="DownloadLogs",e[e.EditOwnOAuthConnections=64]="EditOwnOAuthConnections",e[e.UploadVersion=128]="UploadVersion",e}({}),s=function(e){return e[e.None=0]="None",e[e.WriteEnabled=1]="WriteEnabled",e[e.WriteProvider=2]="WriteProvider",e[e.WriteChannels=4]="WriteChannels",e[e.WriteConnectionString=8]="WriteConnectionString",e[e.ReadConnectionString=16]="ReadConnectionString",e[e.Read=32]="Read",e[e.Create=64]="Create",e[e.Delete=128]="Delete",e[e.WriteName=256]="WriteName",e[e.WriteReconnectionInterval=512]="WriteReconnectionInterval",e[e.WriteChannelLimit=1024]="WriteChannelLimit",e}({}),a=function(e){return e[e.Irc=0]="Irc",e[e.Discord=1]="Discord",e}({}),l=function(e){return e[e.None=0]="None",e[e.Read=1]="Read",e[e.Write=2]="Write",e[e.List=4]="List",e[e.Delete=8]="Delete",e}({}),c=function(e){return e[e.Disallowed=0]="Disallowed",e[e.HostWrite=1]="HostWrite",e[e.SystemIdentityWrite=2]="SystemIdentityWrite",e}({}),d=function(e){return e[e.Optional=0]="Optional",e[e.Required=1]="Required",e[e.Skipped=2]="Skipped",e}({}),u=function(e){return e[e.None=0]="None",e[e.ReadRevision=1]="ReadRevision",e[e.SetPort=2]="SetPort",e[e.SetAutoStart=4]="SetAutoStart",e[e.SetSecurity=8]="SetSecurity",e[e.ReadMetadata=16]="ReadMetadata",e[e.SetWebClient=32]="SetWebClient",e[e.SoftRestart=64]="SoftRestart",e[e.SoftShutdown=128]="SoftShutdown",e[e.Restart=256]="Restart",e[e.Shutdown=512]="Shutdown",e[e.Start=1024]="Start",e[e.SetStartupTimeout=2048]="SetStartupTimeout",e[e.SetHealthCheckInterval=4096]="SetHealthCheckInterval",e[e.CreateDump=8192]="CreateDump",e[e.SetTopicTimeout=16384]="SetTopicTimeout",e[e.SetAdditionalParameters=32768]="SetAdditionalParameters",e[e.SetVisibility=65536]="SetVisibility",e[e.SetProfiler=131072]="SetProfiler",e[e.SetLogOutput=262144]="SetLogOutput",e[e.SetMapThreads=524288]="SetMapThreads",e[e.BroadcastMessage=1048576]="BroadcastMessage",e[e.SetMinidumps=2097152]="SetMinidumps",e}({}),h=function(e){return e[e.Trusted=0]="Trusted",e[e.Safe=1]="Safe",e[e.Ultrasafe=2]="Ultrasafe",e}({}),p=function(e){return e[e.Public=0]="Public",e[e.Private=1]="Private",e[e.Invisible=2]="Invisible",e}({}),m=function(e){return e[e.None=0]="None",e[e.Read=1]="Read",e[e.Compile=2]="Compile",e[e.CancelCompile=4]="CancelCompile",e[e.SetDme=8]="SetDme",e[e.SetApiValidationPort=16]="SetApiValidationPort",e[e.CompileJobs=32]="CompileJobs",e[e.SetSecurityLevel=64]="SetSecurityLevel",e[e.SetApiValidationRequirement=128]="SetApiValidationRequirement",e[e.SetTimeout=256]="SetTimeout",e[e.SetCompilerArguments=512]="SetCompilerArguments",e}({}),g=function(e){return e[e.None=0]="None",e[e.ReadActive=1]="ReadActive",e[e.ListInstalled=2]="ListInstalled",e[e.InstallOfficialOrChangeActiveByondVersion=4]="InstallOfficialOrChangeActiveByondVersion",e[e.CancelInstall=8]="CancelInstall",e[e.InstallCustomByondVersion=16]="InstallCustomByondVersion",e[e.DeleteInstall=32]="DeleteInstall",e[e.InstallOfficialOrChangeActiveOpenDreamVersion=64]="InstallOfficialOrChangeActiveOpenDreamVersion",e[e.InstallCustomOpenDreamVersion=128]="InstallCustomOpenDreamVersion",e}({}),f=function(e){return e[e.Byond=0]="Byond",e[e.OpenDream=1]="OpenDream",e}({}),C=function(e){return e[e.InternalServerError=0]="InternalServerError",e[e.ApiMismatch=1]="ApiMismatch",e[e.ModelValidationFailure=2]="ModelValidationFailure",e[e.IOError=3]="IOError",e[e.BadHeaders=4]="BadHeaders",e[e.TokenWithToken=5]="TokenWithToken",e[e.DatabaseIntegrityConflict=6]="DatabaseIntegrityConflict",e[e.MissingHostWatchdog=7]="MissingHostWatchdog",e[e.CannotChangeServerSuite=8]="CannotChangeServerSuite",e[e.RemoteApiError=9]="RemoteApiError",e[e.ServerUpdateInProgress=10]="ServerUpdateInProgress",e[e.UserNameChange=11]="UserNameChange",e[e.UserSidChange=12]="UserSidChange",e[e.UserMismatchNameSid=13]="UserMismatchNameSid",e[e.UserMismatchPasswordSid=14]="UserMismatchPasswordSid",e[e.UserPasswordLength=15]="UserPasswordLength",e[e.UserColonInName=16]="UserColonInName",e[e.UserMissingName=17]="UserMissingName",e[e.InstanceRelocateOnline=18]="InstanceRelocateOnline",e[e.InstanceAtExistingPath=19]="InstanceAtExistingPath",e[e.InstanceDetachOnline=20]="InstanceDetachOnline",e[e.InstanceAtConflictingPath=21]="InstanceAtConflictingPath",e[e.InstanceLimitReached=22]="InstanceLimitReached",e[e.InstanceWhitespaceNameOrPath=23]="InstanceWhitespaceNameOrPath",e[e.InstanceHeaderRequired=24]="InstanceHeaderRequired",e[e.RequiresPosixSystemIdentity=25]="RequiresPosixSystemIdentity",e[e.ConfigurationFileUpdated=26]="ConfigurationFileUpdated",e[e.ConfigurationDirectoryNotEmpty=27]="ConfigurationDirectoryNotEmpty",e[e.SwarmIntegrityCheckFailed=28]="SwarmIntegrityCheckFailed",e[e.RepoMismatchUserAndAccessToken=29]="RepoMismatchUserAndAccessToken",e[e.RepoCloning=30]="RepoCloning",e[e.RepoBusy=31]="RepoBusy",e[e.RepoExists=32]="RepoExists",e[e.RepoMissing=33]="RepoMissing",e[e.RepoMismatchShaAndReference=34]="RepoMismatchShaAndReference",e[e.RepoMismatchShaAndUpdate=35]="RepoMismatchShaAndUpdate",e[e.EngineCannotDeleteActiveVersion=36]="EngineCannotDeleteActiveVersion",e[e.RepoDuplicateTestMerge=37]="RepoDuplicateTestMerge",e[e.RepoWhitespaceCommitterName=38]="RepoWhitespaceCommitterName",e[e.RepoWhitespaceCommitterEmail=39]="RepoWhitespaceCommitterEmail",e[e.ApiPageTooLarge=40]="ApiPageTooLarge",e[e.ApiInvalidPageOrPageSize=41]="ApiInvalidPageOrPageSize",e[e.ChatBotWrongChannelType=42]="ChatBotWrongChannelType",e[e.ChatBotWhitespaceConnectionString=43]="ChatBotWhitespaceConnectionString",e[e.ChatBotWhitespaceName=44]="ChatBotWhitespaceName",e[e.ChatBotProviderMissing=45]="ChatBotProviderMissing",e[e.ConfigurationContendedAccess=46]="ConfigurationContendedAccess",e[e.ChatBotMax=47]="ChatBotMax",e[e.ChatBotMaxChannels=48]="ChatBotMaxChannels",e[e.ByondDirectXInstallFail=49]="ByondDirectXInstallFail",e[e.EngineDownloadFail=50]="EngineDownloadFail",e[e.EngineNoVersionsInstalled=51]="EngineNoVersionsInstalled",e[e.DeploymentNeverValidated=52]="DeploymentNeverValidated",e[e.DeploymentInvalidValidation=53]="DeploymentInvalidValidation",e[e.CannotRemoveLastAuthenticationOption=54]="CannotRemoveLastAuthenticationOption",e[e.DeploymentNoDme=55]="DeploymentNoDme",e[e.DeploymentMissingDme=56]="DeploymentMissingDme",e[e.DeploymentExitCode=57]="DeploymentExitCode",e[e.DeploymentInProgress=58]="DeploymentInProgress",e[e.InstanceMissingDreamDaemonSettings=59]="InstanceMissingDreamDaemonSettings",e[e.InstanceMissingDreamMakerSettings=60]="InstanceMissingDreamMakerSettings",e[e.InstanceMissingRepositorySettings=61]="InstanceMissingRepositorySettings",e[e.InstanceUpdateTestMergeConflict=62]="InstanceUpdateTestMergeConflict",e[e.RepoCredentialsRequired=63]="RepoCredentialsRequired",e[e.RepoCannotAuthenticate=64]="RepoCannotAuthenticate",e[e.RepoReferenceRequired=65]="RepoReferenceRequired",e[e.WatchdogRunning=66]="WatchdogRunning",e[e.WatchdogCompileJobCorrupted=67]="WatchdogCompileJobCorrupted",e[e.WatchdogStartupFailed=68]="WatchdogStartupFailed",e[e.WatchdogStartupTimeout=69]="WatchdogStartupTimeout",e[e.RepoUnsupportedTestMergeRemote=70]="RepoUnsupportedTestMergeRemote",e[e.RepoSwappedShaOrReference=71]="RepoSwappedShaOrReference",e[e.RepoMergeConflict=72]="RepoMergeConflict",e[e.RepoReferenceNotTracking=73]="RepoReferenceNotTracking",e[e.RepoTestMergeConflict=74]="RepoTestMergeConflict",e[e.InstanceNotAtWhitelistedPath=75]="InstanceNotAtWhitelistedPath",e[e.GameServerDoubleSoft=76]="GameServerDoubleSoft",e[e.DreamDaemonPagerRunning=77]="DreamDaemonPagerRunning",e[e.GameServerPortInUse=78]="GameServerPortInUse",e[e.PostDeployFailure=79]="PostDeployFailure",e[e.WatchdogNotRunning=80]="WatchdogNotRunning",e[e.ResourceNotPresent=81]="ResourceNotPresent",e[e.ResourceNeverPresent=82]="ResourceNeverPresent",e[e.GitHubApiRateLimit=83]="GitHubApiRateLimit",e[e.JobStopped=84]="JobStopped",e[e.MissingGCore=85]="MissingGCore",e[e.GCoreFailure=86]="GCoreFailure",e[e.RepoTestMergeInvalidRemote=87]="RepoTestMergeInvalidRemote",e[e.EngineNonExistentCustomVersion=88]="EngineNonExistentCustomVersion",e[e.GameServerOffline=89]="GameServerOffline",e[e.InstanceOffline=90]="InstanceOffline",e[e.ChatCannotConnectProvider=91]="ChatCannotConnectProvider",e[e.EngineFirewallFail=92]="EngineFirewallFail",e[e.NoPortsAvailable=93]="NoPortsAvailable",e[e.PortNotAvailable=94]="PortNotAvailable",e[e.AdminUserCannotOAuth=95]="AdminUserCannotOAuth",e[e.OAuthProviderDisabled=96]="OAuthProviderDisabled",e[e.FileUploadExpired=97]="FileUploadExpired",e[e.UserGroupAndPermissionSet=98]="UserGroupAndPermissionSet",e[e.UserGroupNotEmpty=99]="UserGroupNotEmpty",e[e.UserLimitReached=100]="UserLimitReached",e[e.UserGroupLimitReached=101]="UserGroupLimitReached",e[e.DeploymentTimeout=102]="DeploymentTimeout",e[e.BroadcastFailure=103]="BroadcastFailure",e[e.OpenDreamCantFindDotnet=104]="OpenDreamCantFindDotnet",e[e.OpenDreamTooOld=105]="OpenDreamTooOld",e[e.DotnetDiagnosticsFailure=106]="DotnetDiagnosticsFailure",e[e.DeploymentWrongDme=107]="DeploymentWrongDme",e[e.RepoTokenUsernameMismatch=108]="RepoTokenUsernameMismatch",e}({}),R=function(e){return e[e.None=0]="None",e[e.Read=1]="Read",e[e.Create=2]="Create",e[e.Rename=4]="Rename",e[e.Relocate=8]="Relocate",e[e.SetOnline=16]="SetOnline",e[e.Delete=32]="Delete",e[e.List=64]="List",e[e.SetConfiguration=128]="SetConfiguration",e[e.SetAutoUpdate=256]="SetAutoUpdate",e[e.SetChatBotLimit=512]="SetChatBotLimit",e[e.GrantPermissions=1024]="GrantPermissions",e}({}),A=function(e){return e[e.None=0]="None",e[e.Read=1]="Read",e[e.Write=2]="Write",e[e.Create=4]="Create",e}({}),S=function(e){return e.GitHub="GitHub",e.Discord="Discord",e.TGForums="TGForums",e.Keycloak="Keycloak",e.InvisionCommunity="InvisionCommunity",e}({}),y=function(e){return e[e.Unknown=0]="Unknown",e[e.GitHub=1]="GitHub",e[e.GitLab=2]="GitLab",e}({}),I=function(e){return e[e.None=0]="None",e[e.CancelPendingChanges=1]="CancelPendingChanges",e[e.SetOrigin=2]="SetOrigin",e[e.SetSha=4]="SetSha",e[e.MergePullRequest=8]="MergePullRequest",e[e.UpdateBranch=16]="UpdateBranch",e[e.ChangeCommitter=32]="ChangeCommitter",e[e.ChangeTestMergeCommits=64]="ChangeTestMergeCommits",e[e.ChangeCredentials=128]="ChangeCredentials",e[e.SetReference=256]="SetReference",e[e.Read=512]="Read",e[e.ChangeAutoUpdateSettings=1024]="ChangeAutoUpdateSettings",e[e.Delete=2048]="Delete",e[e.CancelClone=4096]="CancelClone",e[e.ChangeSubmoduleUpdate=8192]="ChangeSubmoduleUpdate",e[e.Reclone=16384]="Reclone",e}({}),E=function(e){return e[e.Administration=0]="Administration",e[e.InstanceManager=1]="InstanceManager",e[e.Repository=2]="Repository",e[e.Engine=3]="Engine",e[e.DreamMaker=4]="DreamMaker",e[e.DreamDaemon=5]="DreamDaemon",e[e.ChatBots=6]="ChatBots",e[e.Configuration=7]="Configuration",e[e.InstancePermissionSet=8]="InstancePermissionSet",e}({}),O=function(e){return e[e.Offline=0]="Offline",e[e.Restoring=1]="Restoring",e[e.Online=2]="Online",e[e.DelayedRestart=3]="DelayedRestart",e}({}),D=function(e){return e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded",e.Text="text/plain",e}({});class T{constructor({securityWorker:e,secure:t,format:r,...i}={}){this.instance=void 0,this.securityData=null,this.securityWorker=void 0,this.secure=void 0,this.format=void 0,this.setSecurityData=e=>{this.securityData=e},this.request=async({secure:e,path:t,type:r,query:n,format:i,body:s,headers:a,...l})=>{const c=("boolean"==typeof e?e:this.secure)&&this.securityWorker&&await this.securityWorker(this.securityData)||{};l.headers=a?new o.$t(a):new o.$t;const d=this.mergeRequestParams(l,c),u=i||this.format||void 0;return r===D.FormData&&s&&null!==s&&"object"==typeof s&&(s=this.createFormData(s)),r===D.Text&&s&&null!==s&&"string"!=typeof s&&(s=JSON.stringify(s)),this.instance.request({...d,headers:{...d.headers||{},...r?{"Content-Type":r}:{}},params:n,responseType:u,data:s,url:t})},this.instance=n.A.create({...i,baseURL:i.baseURL||""}),this.secure=t,this.format=r,this.securityWorker=e}mergeRequestParams(e,t){const r=e.method||t&&t.method;return{...this.instance.defaults,...e,...t||{},headers:{...r&&this.instance.defaults.headers[r.toLowerCase()]||{},...e.headers||{},...t&&t.headers||{}}}}stringifyFormItem(e){return"object"==typeof e&&null!==e?JSON.stringify(e):`${e}`}createFormData(e){return e instanceof FormData?e:Object.keys(e||{}).reduce(((t,r)=>{const o=e[r],n=o instanceof Array?o:[o];for(const e of n){const o=e instanceof Blob||e instanceof File;t.append(r,o?e:this.stringifyFormItem(e))}return t}),new FormData)}}class P{constructor(e){this.http=void 0,this.api={administrationControllerRead:(e,t={})=>this.http.request({path:"/api/Administration",method:"GET",query:e,secure:!0,format:"json",...t}),administrationControllerUpdate:(e,t={})=>this.http.request({path:"/api/Administration",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),administrationControllerDelete:(e={})=>this.http.request({path:"/api/Administration",method:"DELETE",secure:!0,...e}),administrationControllerListLogs:(e,t={})=>this.http.request({path:"/api/Administration/Logs",method:"GET",query:e,secure:!0,format:"json",...t}),administrationControllerGetLog:(e,t={})=>this.http.request({path:`/api/Administration/Logs/${e}`,method:"GET",secure:!0,format:"json",...t}),apiRootControllerServerInfo:(e={})=>this.http.request({path:"/api",method:"GET",format:"json",...e}),apiRootControllerCreateToken:(e={})=>this.http.request({path:"/api",method:"POST",secure:!0,format:"json",...e}),chatControllerCreate:(e,t={})=>this.http.request({path:"/api/Chat",method:"PUT",body:e,secure:!0,type:D.Json,format:"json",...t}),chatControllerUpdate:(e,t={})=>this.http.request({path:"/api/Chat",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),chatControllerDelete:(e,t={})=>this.http.request({path:`/api/Chat/${e}`,method:"DELETE",secure:!0,...t}),chatControllerGetId:(e,t={})=>this.http.request({path:`/api/Chat/${e}`,method:"GET",secure:!0,format:"json",...t}),chatControllerList:(e,t={})=>this.http.request({path:"/api/Chat/List",method:"GET",query:e,secure:!0,format:"json",...t}),configurationControllerUpdate:(e,t={})=>this.http.request({path:"/api/Config",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),configurationControllerCreateDirectory:(e,t={})=>this.http.request({path:"/api/Config",method:"PUT",body:e,secure:!0,type:D.Json,format:"json",...t}),configurationControllerDeleteDirectory:(e,t={})=>this.http.request({path:"/api/Config",method:"DELETE",body:e,secure:!0,type:D.Json,...t}),configurationControllerFile:(e,t={})=>this.http.request({path:`/api/Config/File/${e}`,method:"GET",secure:!0,format:"json",...t}),configurationControllerDirectory:({directoryPath:e,...t},r={})=>this.http.request({path:`/api/Config/List/${e}`,method:"GET",query:t,secure:!0,format:"json",...r}),configurationControllerList:(e,t={})=>this.http.request({path:"/api/Config/List",method:"GET",query:e,secure:!0,format:"json",...t}),dreamDaemonControllerCreate:(e={})=>this.http.request({path:"/api/DreamDaemon",method:"PUT",secure:!0,format:"json",...e}),dreamDaemonControllerRead:(e={})=>this.http.request({path:"/api/DreamDaemon",method:"GET",secure:!0,format:"json",...e}),dreamDaemonControllerDelete:(e={})=>this.http.request({path:"/api/DreamDaemon",method:"DELETE",secure:!0,...e}),dreamDaemonControllerUpdate:(e,t={})=>this.http.request({path:"/api/DreamDaemon",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),dreamDaemonControllerRestart:(e={})=>this.http.request({path:"/api/DreamDaemon",method:"PATCH",secure:!0,format:"json",...e}),dreamDaemonControllerCreateDump:(e={})=>this.http.request({path:"/api/DreamDaemon/Diagnostics",method:"PATCH",secure:!0,format:"json",...e}),dreamMakerControllerRead:(e={})=>this.http.request({path:"/api/DreamMaker",method:"GET",secure:!0,format:"json",...e}),dreamMakerControllerCreate:(e={})=>this.http.request({path:"/api/DreamMaker",method:"PUT",secure:!0,format:"json",...e}),dreamMakerControllerUpdate:(e,t={})=>this.http.request({path:"/api/DreamMaker",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),dreamMakerControllerGetId:(e,t={})=>this.http.request({path:`/api/DreamMaker/${e}`,method:"GET",secure:!0,format:"json",...t}),dreamMakerControllerList:(e,t={})=>this.http.request({path:"/api/DreamMaker/List",method:"GET",query:e,secure:!0,format:"json",...t}),engineControllerRead:(e={})=>this.http.request({path:"/api/Engine",method:"GET",secure:!0,format:"json",...e}),engineControllerUpdate:(e,t={})=>this.http.request({path:"/api/Engine",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),engineControllerDelete:(e,t={})=>this.http.request({path:"/api/Engine",method:"DELETE",body:e,secure:!0,type:D.Json,format:"json",...t}),engineControllerList:(e,t={})=>this.http.request({path:"/api/Engine/List",method:"GET",query:e,secure:!0,format:"json",...t}),instanceControllerCreate:(e,t={})=>this.http.request({path:"/api/Instance",method:"PUT",body:e,secure:!0,type:D.Json,format:"json",...t}),instanceControllerUpdate:(e,t={})=>this.http.request({path:"/api/Instance",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),instanceControllerDelete:(e,t={})=>this.http.request({path:`/api/Instance/${e}`,method:"DELETE",secure:!0,...t}),instanceControllerGetId:(e,t={})=>this.http.request({path:`/api/Instance/${e}`,method:"GET",secure:!0,format:"json",...t}),instanceControllerGrantPermissions:(e,t={})=>this.http.request({path:`/api/Instance/${e}`,method:"PATCH",secure:!0,...t}),instanceControllerList:(e,t={})=>this.http.request({path:"/api/Instance/List",method:"GET",query:e,secure:!0,format:"json",...t}),instancePermissionSetControllerCreate:(e,t={})=>this.http.request({path:"/api/InstancePermissionSet",method:"PUT",body:e,secure:!0,type:D.Json,format:"json",...t}),instancePermissionSetControllerUpdate:(e,t={})=>this.http.request({path:"/api/InstancePermissionSet",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),instancePermissionSetControllerRead:(e={})=>this.http.request({path:"/api/InstancePermissionSet",method:"GET",secure:!0,format:"json",...e}),instancePermissionSetControllerList:(e,t={})=>this.http.request({path:"/api/InstancePermissionSet/List",method:"GET",query:e,secure:!0,format:"json",...t}),instancePermissionSetControllerGetId:(e,t={})=>this.http.request({path:`/api/InstancePermissionSet/${e}`,method:"GET",secure:!0,format:"json",...t}),instancePermissionSetControllerDelete:(e,t={})=>this.http.request({path:`/api/InstancePermissionSet/${e}`,method:"DELETE",secure:!0,...t}),jobControllerRead:(e,t={})=>this.http.request({path:"/api/Job",method:"GET",query:e,secure:!0,format:"json",...t}),jobControllerList:(e,t={})=>this.http.request({path:"/api/Job/List",method:"GET",query:e,secure:!0,format:"json",...t}),jobControllerDelete:(e,t={})=>this.http.request({path:`/api/Job/${e}`,method:"DELETE",secure:!0,format:"json",...t}),jobControllerGetId:(e,t={})=>this.http.request({path:`/api/Job/${e}`,method:"GET",secure:!0,format:"json",...t}),repositoryControllerCreate:(e,t={})=>this.http.request({path:"/api/Repository",method:"PUT",body:e,secure:!0,type:D.Json,format:"json",...t}),repositoryControllerDelete:(e={})=>this.http.request({path:"/api/Repository",method:"DELETE",secure:!0,format:"json",...e}),repositoryControllerReclone:(e={})=>this.http.request({path:"/api/Repository",method:"PATCH",secure:!0,format:"json",...e}),repositoryControllerRead:(e={})=>this.http.request({path:"/api/Repository",method:"GET",secure:!0,format:"json",...e}),repositoryControllerUpdate:(e,t={})=>this.http.request({path:"/api/Repository",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),transferControllerDownload:(e,t={})=>this.http.request({path:"/api/Transfer",method:"GET",query:e,secure:!0,...t}),transferControllerUpload:(e,t,r={})=>this.http.request({path:"/api/Transfer",method:"PUT",query:e,body:t,secure:!0,...r}),userControllerCreate:(e,t={})=>this.http.request({path:"/api/User",method:"PUT",body:e,secure:!0,type:D.Json,format:"json",...t}),userControllerUpdate:(e,t={})=>this.http.request({path:"/api/User",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),userControllerRead:(e={})=>this.http.request({path:"/api/User",method:"GET",secure:!0,format:"json",...e}),userControllerList:(e,t={})=>this.http.request({path:"/api/User/List",method:"GET",query:e,secure:!0,format:"json",...t}),userControllerGetId:(e,t={})=>this.http.request({path:`/api/User/${e}`,method:"GET",secure:!0,format:"json",...t}),userGroupControllerCreate:(e,t={})=>this.http.request({path:"/api/UserGroup",method:"PUT",body:e,secure:!0,type:D.Json,format:"json",...t}),userGroupControllerUpdate:(e,t={})=>this.http.request({path:"/api/UserGroup",method:"POST",body:e,secure:!0,type:D.Json,format:"json",...t}),userGroupControllerGetId:(e,t={})=>this.http.request({path:`/api/UserGroup/${e}`,method:"GET",secure:!0,format:"json",...t}),userGroupControllerDelete:(e,t={})=>this.http.request({path:`/api/UserGroup/${e}`,method:"DELETE",secure:!0,...t}),userGroupControllerList:(e,t={})=>this.http.request({path:"/api/UserGroup/List",method:"GET",query:e,secure:!0,format:"json",...t})},this.http=e}}},6382:function(e,t,r){r.d(t,{$:function(){return o}});let o=function(e){return e[e.Password=0]="Password",e[e.OAuth=1]="OAuth",e}({})},4173:function(e,t,r){r.d(t,{Ay:function(){return c},MZ:function(){return l},O4:function(){return a}});var o=r(4118),n=r(2576),i=r(8437),s=r(6192);let a=function(e){return e.OK='Isnt displayed but is used as an "error" when everything is ok',e.HTTP_BAD_REQUEST="error.http.bad_request",e.HTTP_DATA_INEGRITY="error.http.data_integrity",e.HTTP_API_MISMATCH="error.http.api_mismatch",e.HTTP_SERVER_ERROR="error.http.server_error",e.HTTP_UNIMPLEMENTED="error.http.unimplemented",e.HTTP_ACCESS_DENIED="error.http.access_denied",e.HTTP_NOT_ACCEPTABLE="error.http.not_acceptable",e.UNHANDLED_RESPONSE="error.unhandled_response",e.UNHANDLED_GLOBAL_RESPONSE="error.unhandled_global_response",e.AXIOS="error.axios",e.GITHUB_FAIL="error.github",e.APP_FAIL="error.app",e.NO_APIPATH="error.no_apipath",e.LOGIN_FAIL="error.login.bad_user_pass",e.LOGIN_NOCREDS="error.login.no_creds",e.LOGIN_DISABLED="error.login.user_disabled",e.LOGIN_BAD_OAUTH="error.login.bad_oauth",e.LOGIN_RATELIMIT="error.login.rate_limit",e.USER_NO_SYS_IDENT="error.user.no_sys_ident",e.USER_NOT_FOUND="error.user.not_found",e.ADMIN_GITHUB_RATE="error.admin.rate",e.ADMIN_GITHUB_ERROR="error.admin.error",e.ADMIN_WATCHDOG_UNAVAIL="error.admin.watchdog.avail",e.ADMIN_VERSION_NOT_FOUND="error.admin.update.notfound",e.ADMIN_LOGS_IO_ERROR="error.admin.logs.io",e.JOB_JOB_NOT_FOUND="error.job.not_found",e.JOB_JOB_COMPLETE="error.job.complete",e.TRANSFER_NOT_AVAILABLE="error.transfer.not_available",e.UPLOAD_FAILED="error.transfer.upload_failed",e.GROUP_NOT_FOUND="error.group.not_found",e.GROUP_NOT_EMPTY="error.group.not_empty",e.NO_DB_ENTITY="error.no_db_entity",e.ENGINE_VERSION_NOT_FOUND="error.no_engine_version",e.COMPILE_JOB_NOT_FOUND="error.compile_job_not_found",e.CONFIG_FILE_NOT_FOUND="error.config_file_not_found",e.CONFIG_FILE_IO_ERROR="error.config_file_io",e.CONFIG_FILE_DIRECTORY_NOT_FOUND="error.config_file_directory_not_found",e.BAD_YML="error.bad_yml",e.BAD_TGS_YML_VERSION="error.bad_tgs_yml_version",e.BAD_CHANNELS_JSON="error.bad_channels_json",e.BAD_HUB_CONNECTION="error.bad_hub_connection",e}({}),l=function(e){return e[e.LOCALE=0]="LOCALE",e[e.TEXT=1]="TEXT",e}({});class c{constructor(e,t,r,a){if(this.code=void 0,this.desc=void 0,this.extendedInfo=void 0,this.originalErrorMessage=void 0,this.code=e,"errorMessage"in t){const e=t.errorMessage;this.originalErrorMessage=e,this.desc={type:l.TEXT,desc:`${n.vH[e.errorCode]}: ${e.message}${e.additionalData?": "+e.additionalData:""}`},e.message||(this.desc={type:l.TEXT,desc:n.vH[e.errorCode]})}if("jsError"in t){const e=t.jsError;this.desc={type:l.TEXT,desc:`${e.name}: ${e.message}`}}const c=(new Error).stack;r?.config.headers.Authorization&&(r.config.headers.Authorization="*********");let d=JSON.stringify({addon:t,origin:r,config:i.Ay,stack:c});d=d.replace(/Basic (?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?/g,"Basic **************"),d=d.replace(/{"username":".+?","password":".+?"}/g,'{"username":"*******","password":"*******"}'),s.A.hasToken()&&(d=(0,o.yh)(d,s.A.token.bearer,"**************")),i.Ay.githubtoken.value&&(d=(0,o.yh)(d,i.Ay.githubtoken.value,"**************")),this.extendedInfo=d,a||console.error(`Error occured within the application: ${this.code} (${this.desc?.desc??"No description"})`,this),window.breakonerror}}},5301:function(e,t,r){r.d(t,{s:function(){return o}});let o=function(e){return e[e.OK=0]="OK",e[e.ERROR=1]="ERROR",e}({});t.A=function(e){return Object.freeze(Object.assign({},e))}},6192:function(e,t,r){var o=r(6382);t.A=new class{hasToken(){return this.token&&this.token.bearer}constructor(){this.token=void 0,this.defaulted=void 0,this.credentials=void 0,this.default={type:o.$.Password,userName:"admin",password:"ISolemlySwearToDeleteTheDataDirectory"}}}},536:function(e,t,r){var o=r(4101);class n extends o.TypedEmitter{constructor(...e){super(...e),this.promiseHooks=new Set}runHooks(e){console.log("Running login hooks");let t=0;const r=[];for(const o of this.promiseHooks){const n=t;console.log(`Running hook ${o.name}(${n})`),r.push(new Promise(((t,r)=>{o(e).then((()=>{console.log(`Done hook ${o.name}(${n})`),t()})).catch((e=>{console.error(`Error running hook ${o.name}(${n}): `,e),r(e)}))}))),t++}Promise.all(r).then((()=>{console.log("Running post login event"),this.emit("loginSuccess",e)})).catch((()=>console.error("An error occured while running login hooks")))}addHook(e){this.promiseHooks.add(e)}removeHook(e){this.promiseHooks.delete(e)}}t.A=new n},8437:function(e,t,r){r.d(t,{iD:function(){return i},jL:function(){return n}});var o=r(7602);let n=function(e){return e.ALWAYS="always",e.AUTO="auto",e.NEVER="never",e}({}),i=function(e){return e.AUTO="auto",e.COLLAPSE="collapse",e.EXPAND="expand",e}({});const s={githubtoken:{id:"config.githubtoken",type:"pwd",value:""},apipath:{id:"config.apipath",type:"str",site_local:!0,value:window.publicPath?new URL("..",new URL(window.publicPath,window.location.href)).href:o.E},jobpollinactive:{id:"config.jobpollinactive",type:"num",value:15},jobpollactive:{id:"config.jobpollactive",type:"num",value:5},jobswidgetdisplay:{id:"config.jobswidgetdisplay",type:"enum",possibleValues:n,value:n.AUTO},instanceprobetimer:{id:"config.instanceprobetimer",type:"num",value:60},itemsperpage:{id:"config.itemsperpage",type:"num",value:25,min:1,max:100},instanceeditsidebar:{id:"config.instanceeditsidebar",type:"enum",possibleValues:i,value:i.AUTO},showjson:{id:"config.showjson",type:"bool",value:"DEV"===o.g},manualpr:{id:"config.manualpr",type:"bool",value:!0},restjobs2:{id:"config.restjobs2",type:"bool",value:!1}};t.Ay=s}}]);
//# sourceMappingURL=1552.0b72d4412baa1c61221f.bundle.js.map