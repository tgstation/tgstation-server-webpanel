"use strict";(self.webpackChunktgstation_server_control_panel=self.webpackChunktgstation_server_control_panel||[]).push([[3649],{1512:function(e,t,n){n.d(t,{A:function(){return l}});var a=n(6540),r=n(5038),s=n(3524),i=n(8065);function l(e){return a.createElement(r.A,{show:e.show,overlay:a.createElement(s.A,{id:e.tooltipid},a.createElement(i.A,{id:e.tooltipid}))},e.children)}},3649:function(e,t,n){n.r(t),n.d(t,{default:function(){return X}});var a=n(6540),r=n(5615),s=n(1274),i=n(472),l=n(616),o=n(5038),c=n(3524),d=n(2431),m=n(8065),u=n(1930),p=n(2576),h=n(4295),E=n(4173),g=n(5301),f=n(8143),y=n(8437),b=n(379),v=n(7621),A=n(3782),w=n(4118),S=n(7567),C=n(5659),P=n(1723),R=n(6113),T=n(6795),x=n(7255),k=n(1512),M=n(6784),N=n(8280),U=n(6052),I=n(9944),H=n(8854);function O(){return O=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)({}).hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},O.apply(null,arguments)}function D({pr:e,testmergeinfo:t,repoInfo:n,finalState:i,onRemove:l,onSelectCommit:o,onError:c}){const[d,u]=(0,a.useState)(!1),h=e=>{u((t=>{let n;return n="boolean"==typeof e?e:e(t),n&&Q(),n}))},[E,f]=(0,a.useState)(!1),[y,b]=(0,a.useState)(e.head),[S,C]=(0,a.useState)(i?i[1]:""),[R,T]=(0,a.useState)(null),[D,W]=(0,a.useState)(null),B=(0,a.useContext)(v.z),Q=(0,a.useCallback)((async a=>{if(R&&!a)return;const r=await A.A.getPRCommits({owner:n.remoteRepositoryOwner,repo:n.remoteRepositoryName,pr:e,wantedCommit:t?.targetCommitSha});if(r.code===g.s.ERROR)c(r.error);else{const e=new Map;r.payload[0].forEach((t=>e.set(t.sha,t))),T(e),W(r.payload[1]??null)}}),[n.remoteRepositoryOwner,n.remoteRepositoryName,e.head,t?.targetCommitSha]);(0,a.useEffect)((()=>d?void Q():void 0),[d,Q]),(0,a.useEffect)((()=>E?void Q():void 0),[E,Q]),(0,a.useEffect)((()=>h(!1)),[i]),(0,a.useEffect)((()=>C(i?i[1]:"")),[i]);let F;t&&(R?.has(t.targetCommitSha)?F=R?.get(t.targetCommitSha):D?.sha===t.targetCommitSha&&(F=D));const K=[...(R??[]).values()].map((n=>({name:n.name,value:n.sha,current:n.sha===t?.targetCommitSha,latest:n.sha===e.head,disabled:!1})));D&&(K.push({name:"...",value:"",current:!1,latest:!1,disabled:!0}),K.push({name:D.name,value:D.sha,current:D.sha===t?.targetCommitSha,latest:D.sha===e.head,disabled:!1}));const X=(0,w.bQ)(B.instancePermissionSet,p.WX.MergePullRequest),V=(0,w.bQ)(B.instancePermissionSet,p.WX.Read)&&(0,w.bQ)(B.instancePermissionSet,p.WX.UpdateBranch)||!t;return a.createElement(a.Fragment,null,a.createElement("tr",null,a.createElement("td",{className:"text-right"+(i?" font-weight-bold":"")},"#",e.number),a.createElement("td",null,a.createElement(U.A,{pill:!0,className:"text-white text-capitalize mr-2",style:{backgroundColor:{closed:"#c93c37",merged:"#8256d0",open:"#347d39"}[e.state]}},e.state),e.testmergelabel?a.createElement(U.A,{pill:!0,className:"text-white text-capitalize mr-2",variant:"primary"},a.createElement(m.A,{id:"view.instance.repo.testmergelabel"})):null),a.createElement("td",null,a.createElement("a",{href:e.link,target:"_blank",rel:"noreferrer"},e.title)),a.createElement("td",{className:"font-italic"},e.author),a.createElement("td",null,a.createElement("div",{className:"d-flex justify-content-center"},a.createElement("div",{className:"d-inline-block text-nowrap"},i?a.createElement(a.Fragment,null,a.createElement(k.A,{tooltipid:"generic.no_perm",show:!V&&void 0},a.createElement(r.A,{variant:"danger",className:"mx-1",onClick:l,disabled:!V},a.createElement(M.g,{icon:"minus",fixedWidth:!0}))),a.createElement(k.A,{tooltipid:"generic.no_perm",show:(!X||!V)&&void 0},a.createElement(r.A,{className:"mx-1",onClick:n=>n.shiftKey?o(e.head,t?.comment??null):f(!0),variant:i[0]===e.head?"primary":"info",disabled:!X||!V},a.createElement(M.g,{icon:"sync",fixedWidth:!0}))),t?a.createElement(r.A,{className:"mx-1",onClick:()=>h((e=>!e)),active:d},a.createElement(M.g,{icon:"info",fixedWidth:!0})):null):a.createElement(k.A,{tooltipid:"generic.no_perm",show:!X&&void 0},a.createElement(r.A,{variant:"success",className:"mx-1",disabled:!X,onClick:t=>t.shiftKey?o(e.head,null):f(!0)},a.createElement(M.g,{icon:"plus",fixedWidth:!0}))))))),a.createElement("tr",null,a.createElement("td",{className:"py-0 border-top-0"}),a.createElement("td",{colSpan:4,className:"py-0 border-top-0"},t?a.createElement(N.A,{in:d},a.createElement("div",null,a.createElement("div",{className:"py-3"},a.createElement("table",{className:"reset-table"},a.createElement("tbody",null,a.createElement("tr",null,a.createElement("td",{className:"text-nowrap"},a.createElement("span",{className:"p-2"},a.createElement(m.A,{id:"view.instance.repo.tm.by"}))),a.createElement("td",null,t.mergedBy.name)),a.createElement("tr",null,a.createElement("td",{className:"text-nowrap"},a.createElement("span",{className:"p-2"},a.createElement(m.A,{id:"view.instance.repo.tm.comment"}))),a.createElement("td",null,t.comment)),a.createElement("tr",null,a.createElement("td",{className:"text-nowrap"},a.createElement("span",{className:"p-2"},a.createElement(m.A,{id:"view.instance.repo.tm.commit"}))),a.createElement("td",null,F?a.createElement(a.Fragment,null,F.name,a.createElement("a",{className:"ml-1",href:F.url,target:"_blank",rel:"noreferrer"},"(",t.targetCommitSha.substring(0,7),")")):t.targetCommitSha.substring(0,7)))))))):null)),a.createElement(s.A,{show:E,onHide:()=>f(!1),centered:!0,size:"lg"},a.createElement(s.A.Header,{closeButton:!0},a.createElement(s.A.Title,null,a.createElement(m.A,{id:"view.instance.repo.tm.modal.title"}))),a.createElement(s.A.Body,null,a.createElement("h5",null,a.createElement("a",{href:e.link,target:"_blank",rel:"noreferrer",className:"text-decoration-none"},e.title)),a.createElement(m.A,{id:"view.instance.repo.tm.modal.label"}),R?a.createElement(I.A,{filterOptions:H.A,search:!0,options:K,value:y??F?.sha,autoComplete:"on",renderOption:(e,t,n,r)=>a.createElement("button",O({type:"button",className:r+(t.disabled?" font-weight-bold":"")},e),a.createElement(U.A,null,t.value.substring(0,7)),t.current?a.createElement(U.A,{variant:"primary",pill:!0,className:"mr-1"},a.createElement(m.A,{id:"generic.testmerged"})):null,t.latest?a.createElement(U.A,{variant:"success",pill:!0,className:"mr-1"},a.createElement(m.A,{id:"generic.latest"})):null,t.name),onChange:e=>b(e)}):a.createElement(x.default,{text:"loading.repo.commits",width:5,widthUnit:"rem"}),a.createElement(P.Ay,{name:"view.instance.repo.tm.modal.comment",type:P.PU.String,onChange:e=>C(e),defaultValue:t?.comment??""}),a.createElement("span",{className:"text-muted font-italic mt-4 d-inline-block"},a.createElement(m.A,{id:"view.instance.repo.tm.modal.tip"}))),a.createElement(s.A.Footer,null,a.createElement(r.A,{variant:"danger",onClick:()=>f(!1)},a.createElement(m.A,{id:"generic.close"})),a.createElement(r.A,{onClick:()=>{y&&o(y,S),f(!1)}},a.createElement(m.A,{id:"generic.save"})))))}function W(){return W=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)({}).hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},W.apply(null,arguments)}var B=function(e){return e.reapply="reapply",e.added="added",e.removed="removed",e.updated="updated",e.rename="renamed",e}(B||{}),Q=function(e){return e[e.None=0]="None",e[e.Local=1]="Local",e[e.Remote=2]="Remote",e}(Q||{}),F=function(e){return e[e.None=0]="None",e[e.Password=1]="Password",e[e.Token=2]="Token",e[e.PrivateKey=3]="PrivateKey",e}(F||{});class K extends a.Component{constructor(e){super(e),this.state={errors:[],repositoryInfo:null,writableCredentials:null,credMode:F.PrivateKey,showCredsModal:!1,loading:!0,cloning:!1,unableToHookClone:!1,gitHubPRs:null,manualPRs:new Set,resetType:Q.Remote,desiredState:new Map,showDeleteModal:!1,showRecloneModal:!1,manualPR:0,lastManualPR:0,deployAfter:!1,repoBusy:!1,loadingPRs:!1},this.fetchRepositoryInfo=this.fetchRepositoryInfo.bind(this)}addError(e){this.setState((t=>{const n=Array.from(t.errors);return n.push(e),{errors:n}}))}async componentDidMount(){this.setState({deployAfter:(0,w.eG)(this.context.instancePermissionSet,p.rY.Compile)}),await this.fetchRepositoryInfo(void 0,!0)}async fetchRepositoryInfo(e,t){(0,w.bQ)(this.context.instancePermissionSet,p.WX.Read)||(this.setState({loading:!1,cloning:!1}),this.reloadDesiredState(null,t??!1,!1),this.setState({repositoryInfo:null,credMode:F.PrivateKey}));const n=await f.A.getRepository(this.context.instance.id);if(this.setState({cloning:!1,repoBusy:!1}),n.code===g.s.ERROR)if(n.error.code===E.O4.HTTP_DATA_INEGRITY&&n.error.originalErrorMessage?.errorCode===p.vH.RepoCloning)if(this.setState({cloning:!0,unableToHookClone:!1}),e)b.default.registerCallback(e.id,this.fetchRepositoryInfo);else{const e=await h.A.listActiveJobs(this.context.instance.id,{page:1,pageSize:100});if(e.code===g.s.OK){const t=e.payload.content.sort(((e,t)=>t.id-e.id)).find((e=>e.description.includes("Clone")&&e.description.includes("repository")));t?b.default.registerCallback(t.id,this.fetchRepositoryInfo):this.setState({unableToHookClone:!0})}else this.addError(e.error),this.setState({unableToHookClone:!0})}else n.error.code===E.O4.HTTP_DATA_INEGRITY&&n.error.originalErrorMessage?.errorCode===p.vH.RepoBusy?this.setState({repoBusy:!0}):this.addError(n.error);else this.reloadPRs(n.payload,t),this.setState({repositoryInfo:n.payload,credMode:F.PrivateKey});this.setState({loading:!1})}reloadPRs(e,t){e.remoteGitProvider===p.mA.GitHub&&e.remoteRepositoryName&&e.remoteRepositoryOwner&&(this.setState({loadingPRs:!0}),A.A.getPRs({repo:e.remoteRepositoryName,owner:e.remoteRepositoryOwner,wantedPRs:e.revisionInformation?.activeTestMerges.map((e=>e.number))}).then((n=>{this.setState({loadingPRs:!1}),n.code===g.s.ERROR?this.addError(n.error):(this.setState({gitHubPRs:n.payload}),t&&this.reloadDesiredState(e,!0,!1,n.payload))})).catch((e=>{this.setState({loadingPRs:!1}),this.addError(new E.Ay(E.O4.APP_FAIL,{jsError:e}))})))}async applyTestmerges(e){const t={},n=this.state.repositoryInfo,a=this.state.resetType!==Q.None;if(this.state.resetType===Q.Local?t.checkoutSha=n?.revisionInformation?.originCommitSha:this.state.resetType===Q.Remote&&(t.updateFromOrigin=!0,t.reference=n?.reference),n&&n?.remoteGitProvider===p.mA.GitHub){const n=[];[...this.state.desiredState.entries()].forEach((([t,r])=>{if(!r)return;const[s,i,l]=r;(!s||a||e)&&n.push({number:t,targetCommitSha:i,comment:l})})),n.length&&(t.newTestMerges=n)}const r=t.newTestMerges??[];this.state.manualPRs.forEach((e=>r.push({number:e}))),r.length&&(t.newTestMerges=r),this.setState({loading:!0});const s=await f.A.editRepository(this.context.instance.id,t);if(this.setState({loading:!1}),s.code===g.s.OK)if(s.payload.activeJob){if(this.setState({loading:!0}),b.default.fastmode=5,b.default.registerCallback(s.payload.activeJob.id,(e=>this.fetchRepositoryInfo(e,void 0===e.errorCode&&void 0===e.exceptionDetails))),b.default.registerJob(s.payload.activeJob,this.context.instance.id),this.state.deployAfter){const e=s.payload.activeJob.id,t=setInterval((()=>{const n=b.default.jobs.get(e);("number"==typeof n?.progress||n?.stoppedAt)&&(u.A.startCompile(this.context.instance.id).then((e=>{e.code===g.s.ERROR&&this.addError(e.error)})),clearInterval(t))}),5e3)}}else await this.fetchRepositoryInfo();else this.addError(s.error)}reloadDesiredState(e,t,n,a){a=a??this.state.gitHubPRs,t&&this.setState((e=>({resetType:n?Q.None:e.resetType,manualPRs:new Set}))),e&&this.setState((r=>{const s=r.desiredState,i=new Map(t?[]:s);let l=!1;const o=t&&!n;e.revisionInformation?.activeTestMerges.forEach((e=>{const n=i.get(e.number);if(!t){if(!n)return;if(n&&!n[0])return}const r=a?.find((t=>e.number===t.number));if(o&&!("merged"!==r?.state))i.set(e.number,null),l=!0;else{const t=(o?r?.head:null)??e.targetCommitSha;o&&t!==e.targetCommitSha&&(l=!0),i.set(e.number,[!0,t,e.comment??""])}}));return{resetType:l?"(no branch)"===e.reference?Q.Local:Q.Remote:r.resetType,desiredState:i}}))}render(){return a.createElement("div",{className:"text-center"},a.createElement(T.Q,{obj:this.state}),this.renderErrors(),this.state.cloning?a.createElement(x.default,{text:"loading.repo.cloning"}):this.state.repositoryInfo&&!this.state.repositoryInfo.origin?this.renderPreClone():a.createElement(a.Fragment,null,a.createElement("h3",null,a.createElement(m.A,{id:"view.instance.repo.repoinfo"})),this.state.repoBusy?a.createElement(x.default,{text:"loading.repo.busy"}):a.createElement(a.Fragment,null,this.renderRepoInformation(),a.createElement("hr",null),this.renderSettings(),a.createElement("hr",null),this.renderTestMerges(),a.createElement("hr",null),this.renderReclone(),a.createElement("hr",null),this.renderDelete())))}renderErrors(){return a.createElement(a.Fragment,null,this.state.errors.map(((e,t)=>{if(e)return a.createElement(S.Ay,{key:t,error:e,onClose:()=>this.setState((e=>{const n=Array.from(e.errors);return n[t]=void 0,{errors:n}}))})})))}renderRepoInformation(){const e=this.state.repositoryInfo;return e?a.createElement("table",{className:"mx-auto text-left"},a.createElement("tbody",null,a.createElement("tr",null,a.createElement("td",null,a.createElement("span",{className:"mr-3"},a.createElement(m.A,{id:"view.instance.repo.info.origin"}))),a.createElement("td",null,e.origin)),a.createElement("tr",null,a.createElement("td",null,a.createElement("span",{className:"mr-3"},a.createElement(m.A,{id:"view.instance.repo.info.owner"}))),a.createElement("td",null,e.remoteRepositoryOwner)),a.createElement("tr",null,a.createElement("td",null,a.createElement("span",{className:"mr-3"},a.createElement(m.A,{id:"view.instance.repo.info.name"}))),a.createElement("td",null,e.remoteRepositoryName)))):a.createElement(C.A,{title:"view.instance.repo.norepoinfo"})}renderPreClone(){const e={origin:{type:P.PU.String,name:"fields.instance.repository.url"},reference:{type:P.PU.String,name:"fields.instance.repository.ref",defaultValue:""},updateSubmodules:{type:P.PU.Boolean,name:"fields.instance.repository.enablesubmodules",defaultValue:!0}};return a.createElement(a.Fragment,null,a.createElement("h3",null,a.createElement(m.A,{id:"view.instance.repo.clone"})),this.renderCredsModal(),a.createElement(R.A,{fields:e,hideDisabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.Read),onSave:async e=>{const t={...e};""==e.reference&&(t.reference=null),this.state.writableCredentials&&(t.accessUser=this.state.writableCredentials.accessUser,t.accessToken=this.state.writableCredentials.accessToken);const n=await f.A.cloneRepository(this.context.instance.id,t);n.code===g.s.OK?(this.setState({writableCredentials:null}),await this.fetchRepositoryInfo(n.payload.activeJob??void 0)):this.addError(n.error)},includeAll:!0,alwaysAllowSave:!!this.state.writableCredentials,saveMessageId:"generic.clone"}))}renderSettings(){const e=this.state.repositoryInfo,t={originCheckoutSha:{type:P.PU.String,name:"fields.instance.repository.origincheckoutsha",disabled:!0,defaultValue:e?e.revisionInformation?.originCommitSha:"",tooltip:"fields.instance.repository.origincheckoutsha.desc"},checkoutSha:{type:P.PU.String,name:"fields.instance.repository.checkoutsha",defaultValue:e?e.revisionInformation?.commitSha:"",tooltip:"fields.instance.repository.checkoutsha.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.SetSha)},reference:{type:P.PU.String,name:"fields.instance.repository.reference",defaultValue:e?e.reference:"",tooltip:"fields.instance.repository.reference.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.SetReference)},committerName:{type:P.PU.String,name:"fields.instance.repository.committerName",defaultValue:e?e.committerName:"",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeCommitter)},committerEmail:{type:P.PU.String,name:"fields.instance.repository.committerEmail",defaultValue:e?e.committerEmail:"",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeCommitter)},pushTestMergeCommits:{type:P.PU.Boolean,name:"fields.instance.repository.pushTestMergeCommits",defaultValue:!!e&&e.pushTestMergeCommits,tooltip:"fields.instance.repository.pushTestMergeCommits.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeTestMergeCommits)},createGitHubDeployments:{type:P.PU.Boolean,name:"fields.instance.repository.createGitHubDeployments",defaultValue:!!e&&e.createGitHubDeployments,tooltip:"fields.instance.repository.createGitHubDeployments.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeTestMergeCommits)},showTestMergeCommitters:{type:P.PU.Boolean,name:"fields.instance.repository.showTestMergeCommitters",defaultValue:!!e&&e.showTestMergeCommitters,tooltip:"fields.instance.repository.showTestMergeCommitters.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeTestMergeCommits)},autoUpdatesKeepTestMerges:{type:P.PU.Boolean,name:"fields.instance.repository.autoUpdatesKeepTestMerges",defaultValue:!!e&&e.autoUpdatesKeepTestMerges,tooltip:"fields.instance.repository.autoUpdatesKeepTestMerges.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeAutoUpdateSettings)},autoUpdatesSynchronize:{type:P.PU.Boolean,name:"fields.instance.repository.autoUpdatesSynchronize",defaultValue:!!e&&e.autoUpdatesSynchronize,tooltip:"fields.instance.repository.autoUpdatesSynchronize.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeAutoUpdateSettings)},postTestMergeComment:{type:P.PU.Boolean,name:"fields.instance.repository.postTestMergeComment",defaultValue:!!e&&e.postTestMergeComment,tooltip:"fields.instance.repository.postTestMergeComment.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeTestMergeCommits)},updateSubmodules:{type:P.PU.Boolean,name:"fields.instance.repository.updateSubmodules",defaultValue:!!e&&e.updateSubmodules,tooltip:"fields.instance.repository.updateSubmodules.desc",disabled:!(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeSubmoduleUpdate)}};return a.createElement(a.Fragment,null,a.createElement("h3",null,a.createElement(m.A,{id:"view.instance.repo.reposettings"})),this.renderCredsModal(),a.createElement(R.A,{fields:t,onSave:async e=>{this.setState({loading:!0,writableCredentials:null});const t={...e};this.state.writableCredentials&&(t.accessUser=this.state.writableCredentials.accessUser,t.accessToken=this.state.writableCredentials.accessToken);const n=await f.A.editRepository(this.context.instance.id,t);this.setState({loading:!1}),n.code===g.s.OK?n.payload.activeJob?(this.setState({loading:!0}),b.default.fastmode=5,b.default.registerCallback(n.payload.activeJob.id,(()=>this.fetchRepositoryInfo(void 0,!0))),b.default.registerJob(n.payload.activeJob,this.context.instance.id)):await this.fetchRepositoryInfo():this.addError(n.error)},alwaysAllowSave:!!this.state.writableCredentials}))}renderCredDetails(){const e=this.state.credMode,t=this.state.writableCredentials,n=this.state.repositoryInfo,[r]=Object.entries(F).find((([,t])=>t==e)),s=`fields.instance.repository.creds.mode.${r}`,i={username:{type:P.PU.String,name:s+".username",tooltip:s+".username.desc",defaultValue:t?.accessUser??n?.accessUser??""}},l={...i,token:{type:P.PU.Password,name:s+".token",tooltip:s+".token.desc",defaultValue:t?.accessToken??""}},o={...i,clientId:{type:P.PU.String,name:s+".id",tooltip:s+".id.desc"},privateKey:{type:P.PU.TextArea,name:s+".pk",tooltip:s+".pk.desc"}};return a.createElement(a.Fragment,null,a.createElement("div",{style:{display:e!=F.PrivateKey?"none":void 0}},a.createElement(R.A,{fields:o,onSave:e=>{const t=e.username?.trim(),n=e.clientId?.trim(),a=e.privateKey?.trim();if(!t?.length||!n?.length||!a?.length)return void alert("Please enter a username, client/app ID, and private key!");const r=`TGS_PK_${n}:${btoa(a)}`;this.setState({writableCredentials:{accessUser:t,accessToken:r},showCredsModal:!1})}})),a.createElement("div",{style:{display:e==F.PrivateKey?"none":void 0}},a.createElement(R.A,{fields:l,onSave:t=>{const n=t.username?.trim(),a=t.token?.trim();n?.length&&a?.length?this.setState({writableCredentials:{accessUser:n,accessToken:a},showCredsModal:!1}):alert(`Please enter both a username and a ${e==F.Password?"password":"token"}!`)}})))}renderCredsModal(){const e=(0,w.bQ)(this.context.instancePermissionSet,p.WX.ChangeCredentials),t=a.createElement(r.A,{disabled:!e,onClick:()=>this.setState({showCredsModal:!0})},a.createElement(m.A,{id:"generic.edit"})),n=this.state.credMode;return a.createElement(a.Fragment,null,a.createElement(s.A,{show:this.state.showCredsModal,onHide:()=>this.setState({showCredsModal:!1}),centered:!0,size:"lg"},a.createElement(s.A.Header,{closeButton:!0},a.createElement(s.A.Title,null,a.createElement(m.A,{id:"view.instance.repo.creds.modal.title"}))),a.createElement(s.A.Body,null,a.createElement(P.Ay,{name:"fields.instance.repository.creds.mode",type:P.PU.Enum,enum:F,defaultValue:n,onChange:e=>this.setState({credMode:e})}),n!=F.None?this.renderCredDetails():a.createElement(s.A.Footer,null,a.createElement(r.A,{className:"text-center",variant:"danger",onClick:()=>this.setState({showCredsModal:!1,writableCredentials:{accessUser:"",accessToken:""}})},a.createElement(m.A,{id:"generic.save"})),a.createElement(r.A,{className:"text-center",onClick:()=>this.setState({showCredsModal:!1,writableCredentials:null})},a.createElement(m.A,{id:"generic.reset"}))),n!=F.None?a.createElement(s.A.Footer,null,a.createElement(r.A,{className:"text-center",onClick:()=>this.setState({showCredsModal:!1,writableCredentials:null})},a.createElement(m.A,{id:"generic.reset"}))):null)),a.createElement("div",{className:"d-flex mt-5"},a.createElement(P.Ay,{name:"view.instance.repo.creds",tooltip:"view.instance.repo.creds.desc",type:P.PU.String,defaultValue:(this.state.writableCredentials?this.state.writableCredentials.accessUser:this.state.repositoryInfo?.accessUser)||"(Unset)",onChange:()=>{},disabled:!0,hideReadOnly:!0,additionalAppend:t,forceChanged:!!this.state.writableCredentials})))}renderTestMerges(){const e=this.state.repositoryInfo,t=(0,w.eG)(this.context.instancePermissionSet,p.rY.Compile),n=(0,w.bQ)(this.context.instancePermissionSet,p.WX.MergePullRequest),s=(0,w.bQ)(this.context.instancePermissionSet,p.WX.Read)&&(0,w.bQ)(this.context.instancePermissionSet,p.WX.UpdateBranch),u=new Map;e&&e.revisionInformation?.activeTestMerges.forEach((e=>u.set(e.number,e)));const h=this.state.gitHubPRs?.sort(((e,t)=>u.has(e.number)!==u.has(t.number)?u.has(e.number)?-1:1:e.testmergelabel!==t.testmergelabel?e.testmergelabel?-1:1:e.number-t.number))??[],E=h.map((t=>{const n=this.state.desiredState.get(t.number),a=e?e?.revisionInformation?.activeTestMerges.find((e=>e.number===t.number)):void 0;return n?a?a.targetCommitSha!==n[1]?[B.updated,t]:(a.comment??"")!==n[2]?[B.rename,t]:[B.reapply,t]:[B.added,t]:this.state.desiredState.get(t.number)?null:a?[B.removed,t]:null})).filter((e=>null!==e)),g=E.sort(((e,t)=>{const n=[B.removed,B.reapply,B.added,B.updated];for(const a of n)if(e[0]===a^t[0]===a)return e[0]===a?-1:1;return 0})),f=!!e&&"(no branch)"===e.reference,b=E.some((e=>e[0]!=B.added&&e[0]!=B.reapply)),v=0===E.filter((([e])=>e!==B.reapply)).length&&this.state.resetType===Q.None&&!this.state.manualPRs.size;return e&&e.remoteGitProvider==p.mA.Unknown?a.createElement(C.A,{title:"view.instance.repo.testmerges.badprovider"}):a.createElement("div",{className:"mx-5"},a.createElement(i.A,{className:"mb-5"},a.createElement(i.A.Header,null,a.createElement(m.A,{id:"view.instance.repo.pending.title"})),a.createElement(i.A.Body,{className:"text-left"},a.createElement("ul",null,v?a.createElement("li",{className:"font-weight-lighter font-italic"},a.createElement(m.A,{id:"view.instance.repo.pending.none"})):a.createElement(a.Fragment,null,e&&f?a.createElement("li",null,a.createElement(m.A,{id:"view.instance.repo.pending.reset.nobranch",values:{commit:e.revisionInformation?.originCommitSha.substring(0,7)}})):this.state.resetType===Q.Remote?a.createElement("li",null,a.createElement(m.A,{id:"view.instance.repo.pending.update"})):this.state.resetType===Q.Local?a.createElement("li",null,a.createElement(m.A,{id:"view.instance.repo.pending.reset"})):null,e&&e.remoteGitProvider===p.mA.GitHub?g.map((([e,t])=>{const n=this.state.desiredState.get(t.number);if(e===B.reapply&&this.state.resetType===Q.None&&!f)return null;let r=n?n[1].substring(0,7):null;const s=this.state.gitHubPRs?.find((e=>t.number===e.number));return r&&!s?.head.startsWith(r)||(r=`HEAD (${(r??s.head).substring(0,7)})`),a.createElement("li",{key:t.number},a.createElement(m.A,{id:`view.instance.repo.pending.${e}`,values:{number:t.number,commit:r,title:t.title}}))})):null,[...this.state.manualPRs.values()].map((e=>a.createElement("li",{key:e},a.createElement(m.A,{id:"view.instance.repo.pending.added.manual",values:{number:e}})))),this.state.deployAfter?a.createElement("li",{key:"deploy"},a.createElement(m.A,{id:"view.instance.repo.pending.deploy"})):null)),a.createElement(l.A,{size:"lg",className:"mb-2 text-center"},a.createElement(r.A,{disabled:f||!s,onClick:()=>this.setState({resetType:Q.Remote}),variant:this.state.resetType===Q.Remote?"secondary":"primary"},a.createElement(m.A,{id:"view.instance.repo.update.remote"})),a.createElement(o.A,{placement:"top",overlay:e=>a.createElement(c.A,W({id:"repo-local-reset-tip"},e),a.createElement(m.A,{id:"view.instance.repo.update.local.tip"}))},a.createElement(r.A,{onClick:()=>this.setState({resetType:Q.Local}),variant:this.state.resetType===Q.Local?"secondary":"primary"},a.createElement(m.A,{id:"view.instance.repo.update.local"}))),a.createElement(r.A,{disabled:b,onClick:()=>this.setState({resetType:Q.None}),variant:this.state.resetType===Q.None?"secondary":"primary"},a.createElement(m.A,{id:"view.instance.repo.update.none"}))),!y.Ay.manualpr.value&&e&&this.state.gitHubPRs&&e.remoteGitProvider!==p.mA.GitLab?null:a.createElement("div",{className:"d-flex mt-5"},a.createElement(P.Ay,{name:"view.instance.repo.manual",tooltip:"view.instance.repo.manual.desc",type:P.PU.Number,min:0,defaultValue:this.state.lastManualPR,onChange:e=>this.setState({manualPR:e}),disabled:!n}),a.createElement(k.A,{tooltipid:"generic.no_perm",show:!n&&void 0},a.createElement(r.A,{className:"nowrap ml-3",disabled:this.state.manualPR===this.state.lastManualPR||!n,onClick:()=>{this.setState((e=>({manualPRs:new Set([...e.manualPRs.values(),this.state.manualPR]),lastManualPR:this.state.manualPR})))}},a.createElement(m.A,{id:"view.instance.repo.addmanual"})))),a.createElement(P.Ay,{name:"view.instance.repo.deployAfter",tooltip:"view.instance.repo.deployAfter.desc",type:P.PU.Boolean,defaultValue:!!t&&this.state.deployAfter,disabled:!t,onChange:e=>this.setState({deployAfter:e})})),a.createElement(i.A.Footer,null,a.createElement(r.A,{variant:"danger",className:"mx-2",disabled:v,onClick:()=>this.reloadDesiredState(e,!0,!0)},a.createElement(m.A,{id:"generic.cancel"})),a.createElement(r.A,{className:"mx-2",disabled:v,onClick:()=>{this.applyTestmerges(f)}},a.createElement(m.A,{id:"generic.commit"})))),this.state.loadingPRs?a.createElement(x.default,{text:"loading.repo.prs"}):e?e&&e.remoteGitProvider===p.mA.GitHub?a.createElement(a.Fragment,null,a.createElement("h3",null,a.createElement(m.A,{id:"view.instance.repo.testmerges"})),a.createElement("br",null),a.createElement(d.A,{variant:"dark",striped:!0,hover:!0,className:"text-left"},a.createElement("tbody",null,h.map((t=>a.createElement(D,{key:t.number,testmergeinfo:u.get(t.number),pr:t,repoInfo:e,finalState:!!this.state.desiredState.get(t.number)&&this.state.desiredState.get(t.number).slice(1),onRemove:()=>this.setState((e=>({resetType:e.resetType===Q.None?Q.Remote:e.resetType,desiredState:new Map(e.desiredState).set(t.number,null)}))),onSelectCommit:(e,n)=>this.setState((a=>({desiredState:new Map(a.desiredState).set(t.number,[!1,e,n])}))),onError:e=>this.addError(e)})))))):null:a.createElement(C.A,{title:"view.instance.repo.noautomerge"}))}renderReclone(){const e=(0,w.bQ)(this.context.instancePermissionSet,p.WX.Reclone);return a.createElement(a.Fragment,null,a.createElement("h4",null,a.createElement(m.A,{id:"view.instance.repo.reclone.title"})),a.createElement("span",null,a.createElement(m.A,{id:"view.instance.repo.reclone.desc"})),a.createElement("br",null),a.createElement(r.A,{variant:"warning",className:"mt-2",disabled:!e,onClick:()=>this.setState({showRecloneModal:!0})},a.createElement(m.A,{id:"view.instance.repo.reclone"})),a.createElement(s.A,{show:this.state.showRecloneModal,onHide:()=>this.setState({showRecloneModal:!1}),centered:!0},a.createElement(s.A.Header,{closeButton:!0},a.createElement(s.A.Title,null,a.createElement(m.A,{id:"view.instance.repo.reclone.title"}))),a.createElement(s.A.Body,null,a.createElement("span",null,a.createElement(m.A,{id:"generic.areyousure"}))),a.createElement(s.A.Footer,null,a.createElement(r.A,{onClick:()=>this.setState({showRecloneModal:!1})},a.createElement(m.A,{id:"generic.cancel"})),a.createElement(r.A,{variant:"danger",onClick:()=>{(async()=>{this.setState({showRecloneModal:!1,loading:!0});const e=await f.A.recloneRepository(this.context.instance.id);this.setState({loading:!1}),e.code===g.s.OK?e.payload.activeJob?(this.setState({loading:!0}),b.default.fastmode=5,b.default.registerCallback(e.payload.activeJob.id,(e=>this.fetchRepositoryInfo(e,void 0===e.errorCode&&void 0===e.exceptionDetails))),b.default.registerJob(e.payload.activeJob,this.context.instance.id)):await this.fetchRepositoryInfo():this.addError(e.error)})()}},a.createElement(m.A,{id:"view.instance.repo.reclone"})))))}renderDelete(){const e=(0,w.bQ)(this.context.instancePermissionSet,p.WX.Delete);return a.createElement(a.Fragment,null,a.createElement("h4",null,a.createElement(m.A,{id:"view.instance.repo.delete.title"})),a.createElement("span",null,a.createElement(m.A,{id:"view.instance.repo.delete.desc"})),a.createElement("br",null),a.createElement(r.A,{variant:"danger",className:"mt-2",disabled:!e,onClick:()=>this.setState({showDeleteModal:!0})},a.createElement(m.A,{id:"view.instance.repo.delete"})),a.createElement(s.A,{show:this.state.showDeleteModal,onHide:()=>this.setState({showDeleteModal:!1}),centered:!0},a.createElement(s.A.Header,{closeButton:!0},a.createElement(s.A.Title,null,a.createElement(m.A,{id:"view.instance.repo.delete.title"}))),a.createElement(s.A.Body,null,a.createElement("span",null,a.createElement(m.A,{id:"generic.areyousure"}))),a.createElement(s.A.Footer,null,a.createElement(r.A,{onClick:()=>this.setState({showDeleteModal:!1})},a.createElement(m.A,{id:"generic.cancel"})),a.createElement(r.A,{variant:"danger",onClick:()=>{(async()=>{this.setState({showDeleteModal:!1,loading:!0});const e=await f.A.deleteRepository(this.context.instance.id);this.setState({loading:!1}),e.code===g.s.OK?e.payload.activeJob?(this.setState({loading:!0}),b.default.fastmode=5,b.default.registerCallback(e.payload.activeJob.id,(e=>this.fetchRepositoryInfo(e,void 0===e.errorCode&&void 0===e.exceptionDetails))),b.default.registerJob(e.payload.activeJob,this.context.instance.id)):await this.fetchRepositoryInfo():this.addError(e.error)})()}},a.createElement(m.A,{id:"view.instance.repo.delete"})))))}}K.contextType=v.z;var X=K}}]);
//# sourceMappingURL=3649.518e33f7e56655fe6b74.bundle.js.map