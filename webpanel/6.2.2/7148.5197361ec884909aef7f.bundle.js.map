{"version":3,"file":"7148.5197361ec884909aef7f.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./node_modules/@fortawesome/free-solid-svg-icons/faPlus.js","webpack://tgstation-server-control-panel/./node_modules/@fortawesome/free-solid-svg-icons/faTrash.js","webpack://tgstation-server-control-panel/./src/components/utils/JsonViewer.tsx","webpack://tgstation-server-control-panel/./src/components/utils/UserBadges.tsx","webpack://tgstation-server-control-panel/./src/utils/globalObjects.ts","webpack://tgstation-server-control-panel/./src/components/views/User/Edit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Badge.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/InputGroup.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Row.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tabs.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'plus';\nvar width = 448;\nvar height = 512;\nvar aliases = [10133,61543,\"add\"];\nvar unicode = '2b';\nvar svgPathData = 'M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    aliases,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faPlus = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = aliases;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;\nexports.aliases = aliases;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'trash';\nvar width = 448;\nvar height = 512;\nvar aliases = [];\nvar unicode = 'f1f8';\nvar svgPathData = 'M135.2 17.7L128 32 32 32C14.3 32 0 46.3 0 64S14.3 96 32 96l384 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-96 0-7.2-14.3C307.4 6.8 296.3 0 284.2 0L163.8 0c-12.1 0-23.2 6.8-28.6 17.7zM416 128L32 128 53.2 467c1.6 25.3 22.6 45 47.9 45l245.8 0c25.3 0 46.3-19.7 47.9-45L416 128z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    aliases,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faTrash = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = aliases;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;\nexports.aliases = aliases;","import React from \"react\";\nimport ReactJson from \"react-json-view\";\n\nimport configOptions from \"../../ApiClient/util/config\";\n\nexport default function JsonViewer(props: { obj: unknown }): JSX.Element {\n    return (\n        <ReactJson\n            src={props.obj as Record<string, unknown>}\n            name={\"JSON\"}\n            theme=\"tube\"\n            iconStyle=\"triangle\"\n            collapsed\n            displayDataTypes={false}\n        />\n    );\n}\n\nexport function DebugJsonViewer(props: { obj: unknown }): JSX.Element {\n    if (!configOptions.showjson.value) {\n        return <></>;\n    }\n    return (\n        <div className=\"text-left\">\n            <JsonViewer obj={props.obj} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { UserResponse } from \"../../ApiClient/generatedcode/generated\";\n\ninterface IProps {\n    user: UserResponse;\n}\n\ntype IState = object;\n\nexport default class UserBadges extends React.Component<IProps, IState> {\n    public render(): React.ReactNode {\n        const user = this.props.user;\n        return (\n            <React.Fragment>\n                {user.systemIdentifier ? (\n                    <Badge variant=\"primary\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.system.short\" />\n                    </Badge>\n                ) : (\n                    <Badge variant=\"primary\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.tgs\" />\n                    </Badge>\n                )}\n                {user.enabled ? (\n                    <Badge variant=\"success\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.enabled\" />\n                    </Badge>\n                ) : (\n                    <Badge variant=\"danger\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.disabled\" />\n                    </Badge>\n                )}\n                {user.group ? (\n                    <Badge variant=\"warning\" className=\"mx-1\">\n                        <FormattedMessage id=\"generic.grouped\" />\n                    </Badge>\n                ) : null}\n            </React.Fragment>\n        );\n    }\n}\n","//this should be a proper data store thing eventually but it will do 4 now\nimport Translation from \"../translations/Translation\";\n\nexport interface GlobalObjects {\n    translation?: Translation;\n    setupMode?: boolean;\n}\n\nexport const GlobalObjects: GlobalObjects = {};\n","import { faCheck, faPen, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons/faTrash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FormEvent } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Row from \"react-bootstrap/Row\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage, FormattedRelativeTime } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    AdministrationRights,\n    InstanceManagerRights,\n    OAuthConnection,\n    OAuthProvider,\n    PermissionSet,\n    UserGroup,\n    UserGroupResponse,\n    UserResponse\n} from \"../../../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport UserClient from \"../../../ApiClient/UserClient\";\nimport UserGroupClient from \"../../../ApiClient/UserGroupClient\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport { GlobalObjects } from \"../../../utils/globalObjects\";\nimport { resolvePermissionSet } from \"../../../utils/misc\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport ErrorAlert from \"../../utils/ErrorAlert\";\nimport { DebugJsonViewer } from \"../../utils/JsonViewer\";\nimport Loading from \"../../utils/Loading\";\nimport UserBadges from \"../../utils/UserBadges\";\n\ntype IProps = RouteComponentProps<{ id: string; tab?: string }>;\n\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    user?: UserResponse;\n    newOAuthConnections: OAuthConnection[];\n    loading: boolean;\n    saving: boolean;\n    permsadmin: { [key: string]: Permission };\n    permsinstance: { [key: string]: Permission };\n    tab: string;\n    groups: UserGroupResponse[];\n    renameGroup: UserGroupResponse | null;\n    renameGroupName: string | null;\n    createGroupName: string;\n}\n\ninterface Permission {\n    readonly bitflag: number;\n    readonly currentVal: boolean;\n}\n\nclass UserEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public constructor(props: IProps, context: GeneralContext) {\n        super(props);\n\n        this.createGroup = this.createGroup.bind(this);\n        this.changeGroup = this.changeGroup.bind(this);\n\n        if (!context.user) {\n            throw Error(\"UserEdit: this.context.user is null!\");\n        }\n\n        this.state = {\n            errors: [],\n            loading: true,\n            saving: false,\n            permsadmin: {},\n            permsinstance: {},\n            tab: props.match.params.tab ?? \"info\",\n            groups: context.user.group ? [Object.assign({ users: [] }, context.user.group)] : [],\n            renameGroup: null,\n            renameGroupName: null,\n            createGroupName: \"\",\n            newOAuthConnections: []\n        };\n\n        RouteData.selecteduserid = parseInt(props.match.params.id);\n        RouteData.selectedusertab = props.match.params.tab;\n    }\n\n    private get canEdit() {\n        return !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.WriteUsers\n        );\n    }\n\n    private get canRead() {\n        return !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.ReadUsers\n        );\n    }\n\n    private get canEditOwnPassword() {\n        const userid = parseInt(this.props.match.params.id);\n        return (\n            !!(\n                resolvePermissionSet(this.context.user).administrationRights &\n                AdministrationRights.EditOwnPassword\n            ) && this.context.user.id === userid\n        );\n    }\n\n    private get canEditOwnOAuth() {\n        const userid = parseInt(this.props.match.params.id);\n        return (\n            !!(\n                resolvePermissionSet(this.context.user).administrationRights &\n                AdministrationRights.EditOwnOAuthConnections\n            ) && this.context.user.id === userid\n        );\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IProps>) {\n        if (prevProps.match.params.tab !== this.props.match.params.tab) {\n            this.setState({\n                tab: this.props.match.params.tab ?? \"info\"\n            });\n        }\n    }\n\n    public async componentDidMount(): Promise<void> {\n        const userid = parseInt(this.props.match.params.id);\n        const response = await UserClient.getUser(userid);\n        switch (response.code) {\n            case StatusCode.ERROR: {\n                this.addError(response.error);\n                break;\n            }\n            case StatusCode.OK: {\n                this.loadUser(response.payload);\n                break;\n            }\n        }\n\n        await this.loadGroups();\n\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async loadGroups() {\n        if (!this.canRead) return;\n\n        const groups1 = await UserGroupClient.listGroups({ page: 1, pageSize: 100 });\n        if (groups1.code === StatusCode.OK) {\n            const groups = [...groups1.payload.content];\n            for (let i = 2; i <= groups1.payload.totalPages; i++) {\n                const groups2 = await UserGroupClient.listGroups({ page: i, pageSize: 100 });\n                if (groups2.code === StatusCode.ERROR) {\n                    this.addError(groups2.error);\n                    return;\n                } else {\n                    groups.push(...groups2.payload.content);\n                }\n            }\n            this.setState({\n                groups: groups\n            });\n        } else {\n            this.addError(groups1.error);\n        }\n    }\n\n    private loadUser(user: UserResponse) {\n        this.setState({\n            user,\n            newOAuthConnections: user.oAuthConnections ? Array.from(user.oAuthConnections) : []\n        });\n        this.loadEnums();\n    }\n\n    private loadEnums(): void {\n        // noinspection DuplicatedCode\n        Object.entries(AdministrationRights).forEach(([k, v]) => {\n            /* enums are objects that are reverse mapped, for example, an enum with a = 1 and b = 2 would look like this:\n             * {\n             *   \"a\": 1,\n             *   \"b\": 2,\n             *   1: \"a\",\n             *   2: \"b\"\n             * }\n             * so we need to drop everything that doesnt resolve to a string because otherwise we end up with twice the values\n             */\n            if (!isNaN(parseInt(k))) return;\n\n            const key = k.toLowerCase();\n            const val = v as number;\n\n            //we dont care about nothing\n            if (key == \"none\") return;\n\n            const currentVal = !!(\n                resolvePermissionSet(this.state.user!).administrationRights & val\n            );\n            this.setState(prevState => {\n                return {\n                    permsadmin: {\n                        ...prevState.permsadmin,\n                        [key]: {\n                            currentVal: currentVal,\n                            bitflag: val\n                        }\n                    }\n                };\n            });\n        });\n        // noinspection DuplicatedCode\n        Object.entries(InstanceManagerRights).forEach(([k, v]) => {\n            if (!isNaN(parseInt(k))) return;\n\n            const key = k.toLowerCase();\n            const val = v as number;\n\n            //we dont care about nothing\n            if (key == \"none\") return;\n\n            const currentVal = !!(\n                resolvePermissionSet(this.state.user!).instanceManagerRights & val\n            );\n            this.setState(prevState => {\n                return {\n                    permsinstance: {\n                        ...prevState.permsinstance,\n                        [key]: {\n                            currentVal: currentVal,\n                            bitflag: val\n                        }\n                    }\n                };\n            });\n        });\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.user.load\" />;\n        }\n        if (this.state.saving) {\n            return <Loading text=\"loading.user.save\" />;\n        }\n\n        // noinspection DuplicatedCode\n        const changetabs = (newkey: string | null) => {\n            if (!newkey) return;\n\n            RouteData.selectedusertab = newkey;\n            if (!GlobalObjects.setupMode) {\n                this.props.history.push(AppRoutes.useredit.link ?? AppRoutes.useredit.route);\n            }\n            this.setState({\n                tab: newkey\n            });\n        };\n\n        return (\n            <div className=\"text-center\">\n                <DebugJsonViewer obj={this.state.user} />\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                {this.state.user ? (\n                    <React.Fragment>\n                        {!this.canEdit ? (\n                            <Alert className=\"clearfix\" variant=\"error\">\n                                <FormattedMessage id=\"view.user.edit.cantedit\" />\n                            </Alert>\n                        ) : (\n                            \"\"\n                        )}\n                        <UserBadges user={this.state.user} />\n                        <h3 className=\"text-capitalize\">{this.state.user.name}</h3>\n                        <Button as={Link} to={AppRoutes.userlist.link ?? AppRoutes.userlist.route}>\n                            <FormattedMessage id=\"generic.goback\" />\n                        </Button>\n                        <Tabs\n                            activeKey={this.state.tab}\n                            onSelect={changetabs}\n                            id=\"test\"\n                            className=\"justify-content-center mb-3 mt-4 flex-column flex-md-row\">\n                            <Tab eventKey=\"info\" title={<FormattedMessage id=\"generic.info\" />}>\n                                <Col lg={5} className=\"text-center text-md-left mx-auto\">\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.userid\" />\n                                            </h5>\n                                        </Col>\n                                        <Col className=\"text-capitalize mb-2\">\n                                            {this.state.user.id}\n                                        </Col>\n                                    </Row>\n                                    {this.state.user.systemIdentifier ? (\n                                        <Row xs={1} md={2}>\n                                            <Col>\n                                                <h5 className=\"m-0\">\n                                                    <FormattedMessage id=\"generic.systemidentifier\" />\n                                                </h5>\n                                            </Col>\n                                            <Col className=\"mb-2 text-sm-break\">\n                                                {this.state.user.systemIdentifier}\n                                            </Col>\n                                        </Row>\n                                    ) : (\n                                        \"\"\n                                    )}\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.enabled\" />\n                                            </h5>\n                                        </Col>\n                                        <Col className=\"text-capitalize mb-2\">\n                                            {this.state.user.enabled.toString()}\n                                        </Col>\n                                    </Row>\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.created\" />\n                                            </h5>\n                                        </Col>\n                                        <OverlayTrigger\n                                            overlay={\n                                                <Tooltip id={`${this.state.user.name}-tooltip`}>\n                                                    {new Date(\n                                                        this.state.user.createdAt\n                                                    ).toLocaleString()}\n                                                </Tooltip>\n                                            }>\n                                            {({ ref, ...triggerHandler }) => (\n                                                <Col\n                                                    className=\"text-capitalize mb-2\"\n                                                    {...triggerHandler}>\n                                                    <span ref={ref as React.Ref<HTMLSpanElement>}>\n                                                        <FormattedRelativeTime\n                                                            value={\n                                                                (new Date(\n                                                                    this.state.user!.createdAt\n                                                                ).getTime() -\n                                                                    Date.now()) /\n                                                                1000\n                                                            }\n                                                            numeric=\"auto\"\n                                                            updateIntervalInSeconds={1}\n                                                        />\n                                                    </span>\n                                                </Col>\n                                            )}\n                                        </OverlayTrigger>\n                                    </Row>\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.createdby\" />\n                                            </h5>\n                                        </Col>\n                                        <OverlayTrigger\n                                            overlay={\n                                                <Tooltip\n                                                    id={`${this.state.user.name}-tooltip-createdby`}>\n                                                    <FormattedMessage id=\"generic.userid\" />\n                                                    {this.state.user.createdBy.id}\n                                                </Tooltip>\n                                            }>\n                                            {({ ref, ...triggerHandler }) => (\n                                                <Col\n                                                    className=\"text-capitalize mb-2\"\n                                                    {...triggerHandler}>\n                                                    <span ref={ref as React.Ref<HTMLSpanElement>}>\n                                                        {this.state.user!.createdBy.name}\n                                                    </span>\n                                                </Col>\n                                            )}\n                                        </OverlayTrigger>\n                                    </Row>\n                                    <div className=\"text-center mt-3\">\n                                        {this.canEdit || this.canEditOwnPassword ? (\n                                            <Button\n                                                className=\"mr-2\"\n                                                as={Link}\n                                                to={\n                                                    (AppRoutes.passwd.link ??\n                                                        AppRoutes.passwd.route) +\n                                                    this.state.user.id.toString()\n                                                }>\n                                                <FormattedMessage id=\"routes.passwd\" />\n                                            </Button>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                        {this.canEdit ? (\n                                            <Button\n                                                variant={\n                                                    this.state.user.enabled ? \"danger\" : \"success\"\n                                                }\n                                                onClick={() =>\n                                                    void (async () => {\n                                                        this.setState({\n                                                            saving: true\n                                                        });\n\n                                                        const response = await UserClient.editUser({\n                                                            enabled: !this.state.user!.enabled,\n                                                            id: this.state.user!.id\n                                                        });\n                                                        if (response.code == StatusCode.OK) {\n                                                            this.loadUser(response.payload);\n                                                        } else {\n                                                            this.addError(response.error);\n                                                        }\n\n                                                        this.setState({\n                                                            saving: false\n                                                        });\n                                                    })()\n                                                }>\n                                                <FormattedMessage\n                                                    id={\n                                                        this.state.user.enabled\n                                                            ? \"generic.disable\"\n                                                            : \"generic.enable\"\n                                                    }\n                                                />\n                                            </Button>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </div>\n                                </Col>\n                            </Tab>\n                            <Tab\n                                eventKey=\"adminperms\"\n                                title={<FormattedMessage id=\"perms.admin\" />}>\n                                {this.renderPerms(\"permsadmin\", \"admin\")}\n                            </Tab>\n                            <Tab\n                                eventKey=\"instanceperms\"\n                                title={<FormattedMessage id=\"perms.instance\" />}>\n                                {this.renderPerms(\"permsinstance\", \"instance\")}\n                            </Tab>\n                            <Tab eventKey=\"group\" title={<FormattedMessage id=\"perms.group\" />}>\n                                {this.renderGroups()}\n                            </Tab>\n                            {this.renderOAuth()}\n                        </Tabs>\n                    </React.Fragment>\n                ) : (\n                    \"\"\n                )}\n            </div>\n        );\n    }\n\n    private renderOAuth(): React.ReactNode {\n        const oAuthProviderInfos = this.context.serverInfo.oAuthProviderInfos;\n        const currentOAuthConnections =\n            this.state.newOAuthConnections ?? this.state.user?.oAuthConnections;\n        if (\n            this.state.user?.name.toLowerCase() === \"admin\" || // admin user can't have OAuthConnections\n            currentOAuthConnections == null ||\n            !oAuthProviderInfos ||\n            !Object.keys(oAuthProviderInfos).length\n        )\n            return null;\n\n        const save = async () => {\n            this.setState({\n                saving: true\n            });\n\n            if (!this.state.user) {\n                this.addError(\n                    new InternalError(ErrorCode.APP_FAIL, {\n                        jsError: Error(\"this.state.user is null in user edit save\")\n                    })\n                );\n                return;\n            }\n\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                oAuthConnections: this.state.newOAuthConnections\n            });\n            if (response.code == StatusCode.OK) {\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n\n            this.setState({\n                saving: false\n            });\n        };\n\n        const canEditOauth = this.canEdit || this.canEditOwnOAuth;\n        const filteredConnections = this.state.newOAuthConnections.filter(\n            oAuthConnection => !!oAuthProviderInfos[oAuthConnection.provider]\n        );\n\n        return (\n            <Tab\n                eventKey=\"oauth\"\n                title={<FormattedMessage id=\"view.user.edit.oauth.connections\" />}>\n                <h3 className=\"mb-3\">\n                    <FormattedMessage id=\"view.user.edit.oauth.current\" />\n                </h3>\n                <div>\n                    {filteredConnections.map((oAuthConnection, idx) => (\n                        <div className=\"justify-content-center d-flex\" key={idx}>\n                            <InputGroup className=\"w-75 mb-1\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>\n                                        <span>\n                                            <FormattedMessage id=\"view.user.edit.oauth.provider\" />\n                                        </span>\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    className=\"flex-grow-1 flex-md-grow-0 w-50 w-md-auto \"\n                                    as=\"select\"\n                                    custom\n                                    disabled={!canEditOauth}\n                                    onChange={event => {\n                                        const provider = event.target.value as OAuthProvider;\n                                        this.setState(prev => {\n                                            return {\n                                                newOAuthConnections: prev.newOAuthConnections.map(\n                                                    (val, idx2) => {\n                                                        if (idx2 !== idx) return val;\n                                                        return {\n                                                            ...val,\n                                                            provider: provider\n                                                        };\n                                                    }\n                                                )\n                                            };\n                                        });\n                                    }}>\n                                    {Object.keys(oAuthProviderInfos).map(key => {\n                                        return (\n                                            <FormattedMessage\n                                                key={key}\n                                                id={`view.user.edit.oauth.provider.${key.toLowerCase()}`}>\n                                                {txt => (\n                                                    <option\n                                                        value={key}\n                                                        selected={\n                                                            (oAuthConnection.provider as string) ===\n                                                            key\n                                                        }>\n                                                        {txt}\n                                                    </option>\n                                                )}\n                                            </FormattedMessage>\n                                        );\n                                    })}\n                                </Form.Control>\n                                <InputGroup.Text className=\"rounded-0\">\n                                    <FormattedMessage id=\"view.user.edit.oauth.id\" />\n                                </InputGroup.Text>\n                                <FormControl\n                                    className=\"\"\n                                    value={oAuthConnection.externalUserId}\n                                    onChange={event => {\n                                        const externalUserId = event.target.value;\n                                        this.setState(prev => {\n                                            return {\n                                                newOAuthConnections: prev.newOAuthConnections.map(\n                                                    (val, idx2) => {\n                                                        if (idx2 !== idx) return val;\n                                                        return {\n                                                            ...val,\n                                                            externalUserId: externalUserId\n                                                        };\n                                                    }\n                                                )\n                                            };\n                                        });\n                                    }}\n                                    disabled={!canEditOauth}\n                                />\n                                <InputGroup.Append className=\"\">\n                                    <Button\n                                        variant=\"danger\"\n                                        className=\"text-darker\"\n                                        hidden={!canEditOauth}\n                                        onClick={() => {\n                                            this.setState(prev => {\n                                                return {\n                                                    newOAuthConnections:\n                                                        prev.newOAuthConnections.filter(\n                                                            (val, idx2) => idx !== idx2\n                                                        )\n                                                };\n                                            });\n                                        }}>\n                                        <div>\n                                            <FontAwesomeIcon icon={faTrash} />\n                                        </div>\n                                    </Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </div>\n                    ))}\n                </div>\n                {canEditOauth ? (\n                    <div className=\"text-center mt-3\">\n                        <Button\n                            className=\"mr-2\"\n                            onClick={() => {\n                                this.setState(prev => {\n                                    return {\n                                        newOAuthConnections: [\n                                            ...prev.newOAuthConnections,\n                                            {\n                                                provider: Object.keys(\n                                                    oAuthProviderInfos\n                                                )[0] as OAuthProvider,\n                                                externalUserId: \"\"\n                                            }\n                                        ]\n                                    };\n                                });\n                            }}>\n                            <FormattedMessage id=\"view.user.edit.oauth.add\" />\n                        </Button>\n                        <Button\n                            onClick={() => void save()}\n                            variant=\"success\"\n                            disabled={\n                                this.state.newOAuthConnections.some(\n                                    x => x.externalUserId.trim().length === 0\n                                ) ||\n                                //If all values match up, and the lenght is the same, there has been no change, disable the button\n                                (this.state.newOAuthConnections.every(\n                                    (val, idx) =>\n                                        val.externalUserId ===\n                                            (this.state.user?.oAuthConnections ?? [])[idx]\n                                                ?.externalUserId &&\n                                        val.provider ===\n                                            (this.state.user?.oAuthConnections ?? [])[idx]?.provider\n                                ) &&\n                                    this.state.newOAuthConnections.length ===\n                                        this.state.user?.oAuthConnections?.length)\n                            }>\n                            <FormattedMessage id=\"generic.savetab\" />\n                        </Button>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n            </Tab>\n        );\n    }\n\n    private renderGroups(): React.ReactNode {\n        //We can't use addError() here because that would trigger a rerender which would call this again and add another error and so on\n        if (!this.state.user || !this.state.groups) {\n            return (\n                <ErrorAlert\n                    error={\n                        new InternalError(ErrorCode.APP_FAIL, {\n                            jsError: Error(\"Assertion failed, user or group is null\")\n                        })\n                    }\n                />\n            );\n        }\n\n        return (\n            <div>\n                {!this.canRead ? (\n                    <Alert className=\"clearfix\" variant=\"error\">\n                        <FormattedMessage id=\"perms.group.cantlist\" />\n                    </Alert>\n                ) : null}\n                <h3 className=\"mb-3\">\n                    <FormattedMessage id=\"perms.group.current\" />\n                    {this.state.user.group ? (\n                        this.state.user.group.name\n                    ) : (\n                        <FormattedMessage id=\"perms.group.none\" />\n                    )}\n                </h3>\n                <div onChange={this.state.renameGroup ? undefined : e => void this.changeGroup(e)}>\n                    <InputGroup\n                        className=\"justify-content-center mb-3\"\n                        as=\"label\"\n                        htmlFor={\n                            \"group_none\" /*notice the underscore, the normal groups use a dash, this prevents conflict with groups named \"none\"*/\n                        }>\n                        <InputGroup.Prepend>\n                            <InputGroup.Radio\n                                id={\"group_none\"}\n                                name=\"group\"\n                                defaultChecked={this.state.user.group?.id === undefined}\n                                disabled={!this.canEdit}\n                            />\n                        </InputGroup.Prepend>\n                        <InputGroup.Append className=\"w-40 overflow-auto\">\n                            <InputGroup.Text className=\"flex-fill\">\n                                <FormattedMessage id=\"perms.group.none\" />\n                            </InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    {this.state.groups.map(group => {\n                        return (\n                            <InputGroup className=\"justify-content-center mb-1\" key={group.id}>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Radio\n                                        id={\"group-\" + group.id.toString()}\n                                        name=\"group\"\n                                        defaultChecked={this.state.user!.group?.id === group.id}\n                                        disabled={!this.canEdit}\n                                    />\n                                </InputGroup.Prepend>\n                                <InputGroup.Append className=\"w-40 overflow-auto\">\n                                    {this.state.renameGroup !== group ? (\n                                        <React.Fragment>\n                                            <InputGroup.Text\n                                                className=\"flex-fill\"\n                                                as=\"label\"\n                                                htmlFor={\"group-\" + group.id.toString()}>\n                                                <span>{group.name}</span>\n                                                <div className=\"text-right ml-auto\">\n                                                    <FormattedMessage\n                                                        id=\"generic.numusers\"\n                                                        values={{\n                                                            count: this.canRead\n                                                                ? group.users?.length\n                                                                : \"???\"\n                                                        }}\n                                                    />\n                                                </div>\n                                            </InputGroup.Text>\n                                            <OverlayTrigger\n                                                overlay={\n                                                    <Tooltip id={`${group.id}-rename-tooltip`}>\n                                                        <FormattedMessage id=\"perms.group.rename.tooltip\" />\n                                                    </Tooltip>\n                                                }>\n                                                {({ ref, ...triggerHandler }) => (\n                                                    <Button\n                                                        variant=\"secondary\"\n                                                        className=\"text-darker\"\n                                                        disabled={!this.canEdit}\n                                                        onClick={() =>\n                                                            this.setState({\n                                                                renameGroup: group,\n                                                                renameGroupName: group.name\n                                                            })\n                                                        }\n                                                        {...triggerHandler}>\n                                                        <div ref={ref as React.Ref<HTMLDivElement>}>\n                                                            <FontAwesomeIcon icon={faPen} />\n                                                        </div>\n                                                    </Button>\n                                                )}\n                                            </OverlayTrigger>\n                                            <OverlayTrigger\n                                                overlay={\n                                                    <Tooltip id={`${group.id}-delete-tooltip`}>\n                                                        <FormattedMessage id=\"perms.group.delete.tooltip\" />\n                                                    </Tooltip>\n                                                }\n                                                show={\n                                                    (!group.users?.length || !this.canEdit) &&\n                                                    group.id !== this.state.user!.group?.id\n                                                        ? false\n                                                        : undefined\n                                                }>\n                                                {({ ref, ...triggerHandler }) => (\n                                                    <Button\n                                                        variant=\"danger\"\n                                                        className=\"text-darker\"\n                                                        disabled={\n                                                            !!group.users?.length ||\n                                                            !this.canEdit ||\n                                                            group.id === this.state.user!.group?.id\n                                                        }\n                                                        onClick={() =>\n                                                            void this.deleteGroup(group.id)\n                                                        }\n                                                        {...triggerHandler}>\n                                                        <div ref={ref as React.Ref<HTMLDivElement>}>\n                                                            <FontAwesomeIcon icon={faTrash} />\n                                                        </div>\n                                                    </Button>\n                                                )}\n                                            </OverlayTrigger>\n                                        </React.Fragment>\n                                    ) : (\n                                        <React.Fragment>\n                                            <input\n                                                className=\"flex-fill\"\n                                                value={this.state.renameGroupName!}\n                                                onChange={event => {\n                                                    this.setState({\n                                                        renameGroupName: event.target.value\n                                                    });\n                                                }}\n                                            />\n                                            <Button\n                                                variant=\"success\"\n                                                className=\"text-darker\"\n                                                onClick={() => void this.renameGroup()}>\n                                                <FontAwesomeIcon icon={faCheck} />\n                                            </Button>\n                                            <Button\n                                                variant=\"danger\"\n                                                className=\"text-darker\"\n                                                onClick={() =>\n                                                    this.setState({\n                                                        renameGroup: null,\n                                                        renameGroupName: null\n                                                    })\n                                                }>\n                                                <FontAwesomeIcon icon={faTimes} />\n                                            </Button>\n                                        </React.Fragment>\n                                    )}\n                                </InputGroup.Append>\n                            </InputGroup>\n                        );\n                    })}\n                </div>\n                {/*<hr />\n                    <h4 className=\"mt-3\">\n                        <FormattedMessage id=\"perms.group.create\" />\n                    </h4>*/}\n                <InputGroup className=\"justify-content-center mb-1 mt-5\">\n                    <InputGroup.Prepend>\n                        <Button\n                            variant=\"primary\"\n                            onClick={() => void this.createGroup()}\n                            disabled={!this.canEdit || !this.state.createGroupName.length}>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </Button>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        className=\"w-40 overflow-auto flex-grow-0\"\n                        value={this.state.createGroupName}\n                        onChange={event => {\n                            this.setState({\n                                createGroupName: event.target.value\n                            });\n                        }}\n                        disabled={!this.canEdit}\n                    />\n                </InputGroup>\n            </div>\n        );\n    }\n\n    private async changeGroup(e: FormEvent<HTMLDivElement>) {\n        if (!this.state.user) {\n            this.addError(\n                new InternalError(ErrorCode.APP_FAIL, {\n                    jsError: Error(\"this.state.user is null in changegroup\")\n                })\n            );\n            return;\n        }\n\n        this.setState({\n            loading: true\n        });\n        const id = (e.target as HTMLInputElement).id;\n        if (id === \"group_none\") {\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                permissionSet: resolvePermissionSet(this.state.user)\n            });\n            if (response.code === StatusCode.OK) {\n                await this.loadGroups();\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n        } else {\n            const realID = parseInt(id.substr(6));\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                group: {\n                    id: realID\n                } as UserGroup\n            });\n            if (response.code === StatusCode.OK) {\n                await this.loadGroups();\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async renameGroup(): Promise<void> {\n        // safety\n        const renameGroup = this.state.renameGroup;\n        const newName = this.state.renameGroupName;\n        if (!renameGroup || !(newName && newName.trim().length > 0)) {\n            return;\n        }\n\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.updateGroup({\n            id: renameGroup.id,\n            name: newName\n        });\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                const newGroups = [...prev.groups];\n                newGroups[newGroups.findIndex(group => group.id === renameGroup.id)] =\n                    response.payload;\n                return {\n                    groups: newGroups,\n                    renameGroup: null,\n                    renameGroupName: null\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async deleteGroup(id: number) {\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.deleteGroup(id);\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    groups: prev.groups.filter(group => group.id !== id)\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async createGroup() {\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.createGroup(\n            this.state.createGroupName,\n            resolvePermissionSet(this.state.user!)\n        );\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    groups: prev.groups.concat([response.payload])\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private renderPerms(\n        enumname: \"permsadmin\" | \"permsinstance\",\n        permprefix: string\n    ): React.ReactNode {\n        const inputs: Record<\n            string,\n            { input: React.RefObject<HTMLInputElement>; field: React.RefObject<HTMLDivElement> }\n        > = {};\n        const setBold = (\n            inputRef: React.RefObject<HTMLInputElement>,\n            fieldRef: React.RefObject<HTMLDivElement>,\n            defaultVal: boolean\n        ) => {\n            if (!inputRef.current || !fieldRef.current) return;\n            if (inputRef.current.checked !== defaultVal) {\n                fieldRef.current.classList.add(\"font-weight-bold\");\n            } else {\n                fieldRef.current.classList.remove(\"font-weight-bold\");\n            }\n        };\n        const setAll = (val: boolean): (() => void) => {\n            return () => {\n                for (const [permname, refs] of Object.entries(inputs)) {\n                    if (!refs.input.current) return;\n\n                    refs.input.current.checked = val;\n                    setBold(refs.input, refs.field, this.state[enumname][permname].currentVal);\n                }\n            };\n        };\n        const resetAll = () => {\n            for (const [permname, refs] of Object.entries(inputs)) {\n                if (!refs.input.current) continue;\n\n                refs.input.current.checked = this.state[enumname][permname].currentVal;\n                setBold(refs.input, refs.field, this.state[enumname][permname].currentVal);\n            }\n        };\n        const save = async () => {\n            this.setState({\n                saving: true\n            });\n            let bitflag = 0;\n\n            for (const [permname, refs] of Object.entries(inputs)) {\n                if (!refs.input.current) continue;\n\n                bitflag += refs.input.current.checked ? this.state[enumname][permname].bitflag : 0;\n            }\n\n            if (!this.state.user) {\n                this.addError(\n                    new InternalError(ErrorCode.APP_FAIL, {\n                        jsError: Error(\"this.state.user is null in user edit save\")\n                    })\n                );\n                return;\n            }\n\n            if (this.state.user.group) {\n                const newset = Object.assign(\n                    Object.assign({}, this.state.user.group.permissionSet),\n                    {\n                        [enumname == \"permsadmin\"\n                            ? \"AdministrationRights\"\n                            : \"InstanceManagerRights\"]: bitflag\n                    } as\n                        | { AdministrationRights: AdministrationRights }\n                        | { InstanceManagerRights: InstanceManagerRights }\n                ) as PermissionSet;\n                const response = await UserGroupClient.updateGroup({\n                    id: this.state.user.group.id,\n                    permissionSet: newset\n                });\n                if (response.code == StatusCode.OK) {\n                    const response2 = await UserClient.getUser(this.state.user.id);\n                    if (response2.code == StatusCode.OK) {\n                        this.loadUser(response2.payload);\n                    } else {\n                        this.addError(response2.error);\n                    }\n                } else {\n                    this.addError(response.error);\n                }\n            } else {\n                const newset = Object.assign(Object.assign({}, this.state.user.permissionSet), {\n                    [enumname == \"permsadmin\" ? \"AdministrationRights\" : \"InstanceManagerRights\"]:\n                        bitflag\n                } as\n                    | { AdministrationRights: AdministrationRights }\n                    | { InstanceManagerRights: InstanceManagerRights });\n                const response = await UserClient.editUser({\n                    id: this.state.user.id,\n                    permissionSet: newset\n                });\n                if (response.code == StatusCode.OK) {\n                    this.loadUser(response.payload);\n                } else {\n                    this.addError(response.error);\n                }\n            }\n\n            this.setState({\n                saving: false\n            });\n        };\n        return (\n            <React.Fragment>\n                {this.state.user?.group ? (\n                    <Alert variant=\"warning\">\n                        <FormattedMessage\n                            id=\"perms.group.warning\"\n                            values={{\n                                group: `${this.state.user.group.name} (${this.state.user.group.id})`\n                            }}\n                        />\n                    </Alert>\n                ) : null}\n                {this.canEdit ? (\n                    <React.Fragment>\n                        <h5>\n                            <FormattedMessage id=\"generic.setall\" />\n                        </h5>\n                        <Button onClick={setAll(true)}>\n                            <FormattedMessage id=\"generic.true\" />\n                        </Button>{\" \"}\n                        <Button onClick={setAll(false)}>\n                            <FormattedMessage id=\"generic.false\" />\n                        </Button>{\" \"}\n                        <Button onClick={resetAll}>\n                            <FormattedMessage id=\"generic.reset\" />\n                        </Button>\n                    </React.Fragment>\n                ) : (\n                    \"\"\n                )}\n                <Col md={8} lg={7} xl={6} className=\"mx-auto\">\n                    <hr />\n                    {Object.entries(this.state[enumname]).map(([perm, value]) => {\n                        const inputRef = React.createRef<HTMLInputElement>();\n                        const fieldRef = React.createRef<HTMLDivElement>();\n                        inputs[perm] = { input: inputRef, field: fieldRef };\n                        return (\n                            <InputGroup key={perm} as=\"label\" htmlFor={perm} className=\"mb-0\">\n                                <InputGroup.Prepend className=\"flex-grow-1 overflow-auto\">\n                                    <OverlayTrigger\n                                        overlay={\n                                            <Tooltip id={`perms.${permprefix}.${perm}.desc`}>\n                                                <FormattedMessage\n                                                    id={`perms.${permprefix}.${perm}.desc`}\n                                                />\n                                            </Tooltip>\n                                        }>\n                                        {({ ref, ...triggerHandler }) => (\n                                            <InputGroup.Text className=\"flex-fill\" ref={fieldRef}>\n                                                <div {...triggerHandler}>\n                                                    <FormattedMessage\n                                                        id={`perms.${permprefix}.${perm}`}\n                                                    />\n                                                </div>\n                                                <div className=\"ml-auto d-flex align-items-center\">\n                                                    <Form.Check\n                                                        inline\n                                                        type=\"switch\"\n                                                        custom\n                                                        id={`${enumname}.${perm}`}\n                                                        className=\"d-flex justify-content-center align-content-center mx-2\"\n                                                        label=\"\"\n                                                        ref={inputRef}\n                                                        disabled={!this.canEdit}\n                                                        defaultChecked={value.currentVal}\n                                                        onChange={() => {\n                                                            setBold(\n                                                                inputRef,\n                                                                fieldRef,\n                                                                value.currentVal\n                                                            );\n                                                        }}\n                                                    />\n                                                    <div\n                                                        {...triggerHandler}\n                                                        ref={ref as React.Ref<HTMLDivElement>}>\n                                                        <FontAwesomeIcon fixedWidth icon=\"info\" />\n                                                    </div>\n                                                </div>\n                                            </InputGroup.Text>\n                                        )}\n                                    </OverlayTrigger>\n                                </InputGroup.Prepend>\n                            </InputGroup>\n                        );\n                    })}\n                    <hr />\n                </Col>\n                {this.canEdit ? (\n                    <Button onClick={() => void save()}>\n                        <FormattedMessage id=\"generic.savetab\" />\n                    </Button>\n                ) : (\n                    \"\"\n                )}\n            </React.Fragment>\n        );\n    }\n}\nUserEdit.contextType = GeneralContext;\nexport default withRouter(UserEdit);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"onSelect\", \"transition\", \"mountOnEnter\", \"unmountOnExit\", \"children\", \"activeKey\"];\nimport React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nvar defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  var _child$props = child.props,\n      title = _child$props.title,\n      eventKey = _child$props.eventKey,\n      disabled = _child$props.disabled,\n      tabClassName = _child$props.tabClassName,\n      id = _child$props.id;\n\n  if (title == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavItem, {\n    as: NavLink,\n    eventKey: eventKey,\n    disabled: disabled,\n    id: id,\n    className: tabClassName\n  }, title);\n}\n\nvar Tabs = function Tabs(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      onSelect = _useUncontrolled.onSelect,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children,\n      _useUncontrolled$acti = _useUncontrolled.activeKey,\n      activeKey = _useUncontrolled$acti === void 0 ? getDefaultActiveKey(children) : _useUncontrolled$acti,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  return /*#__PURE__*/React.createElement(TabContainer, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, /*#__PURE__*/React.createElement(Nav, _extends({}, controlledProps, {\n    role: \"tablist\",\n    as: \"nav\"\n  }), map(children, renderTab)), /*#__PURE__*/React.createElement(TabContent, null, map(children, function (child) {\n    var childProps = _extends({}, child.props);\n\n    delete childProps.title;\n    delete childProps.disabled;\n    delete childProps.tabClassName;\n    return /*#__PURE__*/React.createElement(TabPane, childProps);\n  })));\n};\n\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;"],"names":["iconName","aliases","svgPathData","exports","prefix","icon","unicode","JsonViewer","props","React","ReactJson","src","obj","name","theme","iconStyle","collapsed","displayDataTypes","DebugJsonViewer","configOptions","showjson","value","className","UserBadges","render","user","this","systemIdentifier","Badge","variant","FormattedMessage","id","enabled","group","GlobalObjects","UserEdit","constructor","context","super","createGroup","bind","changeGroup","Error","state","errors","loading","saving","permsadmin","permsinstance","tab","match","params","groups","Object","assign","users","renameGroup","renameGroupName","createGroupName","newOAuthConnections","RouteData","selecteduserid","parseInt","selectedusertab","canEdit","resolvePermissionSet","administrationRights","AdministrationRights","WriteUsers","canRead","ReadUsers","canEditOwnPassword","userid","EditOwnPassword","canEditOwnOAuth","EditOwnOAuthConnections","componentDidUpdate","prevProps","setState","componentDidMount","response","UserClient","getUser","code","StatusCode","ERROR","addError","error","OK","loadUser","payload","loadGroups","groups1","UserGroupClient","listGroups","page","pageSize","content","i","totalPages","groups2","push","oAuthConnections","Array","from","loadEnums","entries","forEach","k","v","isNaN","key","toLowerCase","val","currentVal","prevState","bitflag","InstanceManagerRights","instanceManagerRights","Loading","text","map","err","index","ErrorAlert","onClose","prev","newarr","undefined","Alert","Button","as","Link","to","AppRoutes","userlist","link","route","Tabs","activeKey","onSelect","newkey","setupMode","history","useredit","Tab","eventKey","title","Col","lg","Row","xs","md","toString","OverlayTrigger","overlay","Tooltip","Date","createdAt","toLocaleString","ref","triggerHandler","_extends","FormattedRelativeTime","getTime","now","numeric","updateIntervalInSeconds","createdBy","passwd","onClick","editUser","renderPerms","renderGroups","renderOAuth","oAuthProviderInfos","serverInfo","currentOAuthConnections","keys","length","save","async","InternalError","ErrorCode","APP_FAIL","jsError","canEditOauth","filteredConnections","filter","oAuthConnection","provider","idx","InputGroup","Prepend","Text","Form","Control","custom","disabled","onChange","event","target","idx2","txt","selected","FormControl","externalUserId","Append","hidden","FontAwesomeIcon","faTrash","some","x","trim","every","e","htmlFor","Radio","defaultChecked","values","count","faPen","show","deleteGroup","faCheck","faTimes","faPlus","permissionSet","realID","substr","newName","updateGroup","newGroups","findIndex","concat","enumname","permprefix","inputs","setBold","inputRef","fieldRef","defaultVal","current","checked","classList","add","remove","setAll","permname","refs","input","field","newset","response2","resetAll","xl","perm","Check","inline","type","label","fixedWidth","contextType","GeneralContext","withRouter","_excluded","_ref","bsPrefix","pill","_ref$as","Component","displayName","defaultProps","InputGroupAppend","InputGroupPrepend","InputGroupText","size","hasValidation","Checkbox","DEVICE_SIZES","noGutters","decoratedBsPrefix","sizePrefix","classes","brkPoint","cols","propValue","infix","_React$Component","apply","arguments","prototype","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","children","useMemo","tabContext","getControlledId","getControllerId","Provider","TabContent","_excluded2","TabPane","_useTabContext","useContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","renderTab","child","_child$props","tabClassName","_useUncontrolled$acti","defaultActiveKey","getDefaultActiveKey","controlledProps","childProps"],"sourceRoot":""}