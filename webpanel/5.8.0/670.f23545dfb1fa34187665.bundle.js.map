{"version":3,"file":"670.f23545dfb1fa34187665.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/JsonViewer.tsx","webpack://tgstation-server-control-panel/./src/components/utils/PageHelper.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/List.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Badge.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/PageItem.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Pagination.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/PopoverTitle.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/PopoverContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Popover.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from \"react\";\nimport ReactJson from \"react-json-view\";\n\nimport configOptions from \"../../ApiClient/util/config\";\n\nexport default function JsonViewer(props: { obj: unknown }): JSX.Element {\n    return (\n        <ReactJson\n            src={props.obj as Record<string, unknown>}\n            name={\"JSON\"}\n            theme=\"tube\"\n            iconStyle=\"triangle\"\n            collapsed\n            displayDataTypes={false}\n        />\n    );\n}\n\nexport function DebugJsonViewer(props: { obj: unknown }): JSX.Element {\n    if (!configOptions.showjson.value) {\n        return <></>;\n    }\n    return (\n        <div className=\"text-left\">\n            <JsonViewer obj={props.obj} />\n        </div>\n    );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ComponentPropsWithoutRef } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport Popover from \"react-bootstrap/Popover\";\nimport { FormattedMessage } from \"react-intl\";\n\ntype IProps = {\n    selectPage: (page: number) => void;\n    totalPages: number;\n    currentPage: number;\n} & Partial<ComponentPropsWithoutRef<\"div\">>;\n\ninterface IState {\n    showGoto: boolean;\n    gotoValue: number;\n}\n\nexport default class PageHelper extends React.PureComponent<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showGoto: false,\n            gotoValue: props.currentPage\n        };\n    }\n\n    public render(): React.ReactNode {\n        const items: React.ReactNode[] = [];\n\n        const maxRight = Math.max(this.props.totalPages - this.props.currentPage - 1, 0);\n        const maxLeft = Math.max(this.props.currentPage - 2, 0);\n\n        const min = Math.max(\n            this.props.currentPage -\n                Math.max(\n                    5 - Number(this.props.currentPage !== this.props.totalPages) - maxRight,\n                    2\n                ),\n            2\n        );\n        const max = Math.min(\n            this.props.currentPage +\n                Math.max(5 - Number(this.props.currentPage !== 1) - maxLeft, 2),\n            this.props.totalPages - 1\n        );\n\n        //Start at the second page and stop at the second to last page\n        for (let i = min; i <= max; i++) {\n            items.push(\n                <Pagination.Item\n                    key={i}\n                    active={i === this.props.currentPage}\n                    onClick={() => this.props.selectPage(i)}>\n                    {i}\n                </Pagination.Item>\n            );\n        }\n\n        const ellipsis = this.props.totalPages > 7 ? <Pagination.Ellipsis disabled /> : null;\n\n        const findPopover = (\n            <Popover id=\"popover-gotopage\">\n                <Popover.Title>\n                    <FormattedMessage id=\"generic.goto.title\" />\n                </Popover.Title>\n                <Popover.Content>\n                    <form\n                        className=\"d-flex\"\n                        onSubmit={e => {\n                            e.preventDefault();\n                            this.props.selectPage(this.state.gotoValue);\n                            this.setState({\n                                showGoto: false\n                            });\n                        }}>\n                        <Form.Control\n                            className=\"mr-2\"\n                            type=\"number\"\n                            min={1}\n                            max={this.props.totalPages}\n                            value={this.state.gotoValue}\n                            onChange={e => this.setState({ gotoValue: parseInt(e.target.value) })}\n                            custom\n                        />\n                        <Button type=\"submit\">\n                            <FormattedMessage id=\"generic.goto\" />\n                        </Button>\n                    </form>\n                </Popover.Content>\n            </Popover>\n        );\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { selectPage: _1, totalPages: _2, currentPage: _3, ...props } = this.props;\n\n        return (\n            <div className=\"text-center\" style={{ position: \"sticky\", bottom: \"1.5em\" }} {...props}>\n                <Pagination className=\"justify-content-center\">\n                    <Pagination.Prev\n                        disabled={this.props.currentPage <= 1}\n                        onClick={() =>\n                            this.props.selectPage(Math.max(this.props.currentPage - 1, 1))\n                        }\n                    />\n                    <Pagination.Item\n                        active={this.props.currentPage <= 1}\n                        onClick={() => this.props.selectPage(1)}>\n                        1\n                    </Pagination.Item>\n                    {ellipsis}\n                    {items}\n                    {ellipsis}\n                    {this.props.totalPages >= 2 ? (\n                        <Pagination.Item\n                            active={this.props.currentPage >= this.props.totalPages}\n                            onClick={() => this.props.selectPage(this.props.totalPages)}>\n                            {this.props.totalPages}\n                        </Pagination.Item>\n                    ) : null}\n                    {this.props.totalPages > 7 ? (\n                        <OverlayTrigger\n                            show={this.state.showGoto}\n                            placement=\"top\"\n                            overlay={findPopover}>\n                            <Pagination.Item\n                                onClick={() =>\n                                    this.setState(prev => {\n                                        return {\n                                            showGoto: !prev.showGoto\n                                        };\n                                    })\n                                }>\n                                <FontAwesomeIcon icon=\"search\" />\n                            </Pagination.Item>\n                        </OverlayTrigger>\n                    ) : null}\n                    <Pagination.Next\n                        disabled={this.props.currentPage >= this.props.totalPages}\n                        onClick={() =>\n                            this.props.selectPage(\n                                Math.min(this.props.currentPage + 1, this.props.totalPages)\n                            )\n                        }\n                    />\n                </Pagination>\n            </div>\n        );\n    }\n}\n","import { faLock, faTrash, faUnlock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { CSSProperties, ReactNode } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Table from \"react-bootstrap/Table\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { satisfies as SemverSatisfies } from \"semver\";\n\nimport {\n    InstanceManagerRights,\n    InstanceResponse\n} from \"../../../ApiClient/generatedcode/generated\";\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError, { ErrorCode } from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport ServerClient from \"../../../ApiClient/ServerClient\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport { hasInstanceManagerRight, resolvePermissionSet } from \"../../../utils/misc\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport ErrorAlert from \"../../utils/ErrorAlert\";\nimport { DebugJsonViewer } from \"../../utils/JsonViewer\";\nimport Loading from \"../../utils/Loading\";\nimport PageHelper from \"../../utils/PageHelper\";\n\ntype Instance = InstanceResponse & {\n    canAccess: boolean;\n};\n\ninterface IState {\n    instances: Instance[];\n    loading?: boolean;\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    page: number;\n    maxPage?: number;\n}\ninterface IProps extends RouteComponentProps {}\n\nclass InstanceList extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.setOnline = this.setOnline.bind(this);\n        this.grantPermissions = this.grantPermissions.bind(this);\n\n        this.state = {\n            loading: true,\n            instances: [],\n            errors: [],\n            page: RouteData.instancelistpage ?? 1\n        };\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    public async componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<IState>) {\n        if (prevState.page !== this.state.page) {\n            RouteData.instancelistpage = this.state.page;\n            await this.loadInstances();\n        }\n    }\n\n    private async loadInstances(): Promise<void> {\n        this.setState({\n            loading: true\n        });\n\n        const instancelist = await InstanceClient.listInstances({ page: this.state.page });\n        const tgsversionresponse = await ServerClient.getServerInfo();\n        const enableVersionWorkaround =\n            tgsversionresponse.code === StatusCode.OK &&\n            SemverSatisfies(tgsversionresponse.payload.apiVersion, \"<9.1.0\");\n        const modifiedlist: Array<Instance> = [];\n        if (instancelist.code == StatusCode.OK) {\n            //Safety against being on non existant pages\n            if (\n                this.state.page > instancelist.payload.totalPages &&\n                instancelist.payload.totalPages !== 0\n            ) {\n                this.setState({\n                    page: 1\n                });\n                return;\n            }\n\n            const work: Array<Promise<void>> = [];\n            for (const instance of instancelist.payload.content) {\n                const modifiedinstance = instance as Instance;\n                if (!enableVersionWorkaround) {\n                    modifiedinstance.canAccess =\n                        modifiedinstance.online && modifiedinstance.accessible;\n                    modifiedlist.push(modifiedinstance);\n                } else if (instance.online) {\n                    work.push(\n                        InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                            instance.id\n                        ).then(permissionset => {\n                            if (permissionset.code == StatusCode.OK) {\n                                modifiedinstance.canAccess = true;\n                            } else {\n                                modifiedinstance.canAccess = false;\n                                if (permissionset.error.code !== ErrorCode.HTTP_ACCESS_DENIED) {\n                                    this.addError(permissionset.error);\n                                }\n                            }\n                            modifiedlist.push(modifiedinstance);\n                        })\n                    );\n                } else {\n                    modifiedinstance.canAccess = false;\n                    modifiedlist.push(modifiedinstance);\n                }\n            }\n\n            await Promise.all(work);\n\n            this.setState({\n                instances: modifiedlist.sort((a, b) => a.id - b.id),\n                maxPage: instancelist.payload.totalPages\n            });\n        } else {\n            this.addError(instancelist.error);\n        }\n\n        this.setState({\n            loading: false\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.loadInstances();\n    }\n\n    private async grantPermissions(instance: Instance) {\n        const instanceedit = await InstanceClient.grantPermissions(({\n            id: instance.id\n        } as unknown) as InstanceResponse);\n\n        if (instanceedit.code === StatusCode.OK) {\n            await this.loadInstances();\n        } else {\n            this.addError(instanceedit.error);\n        }\n    }\n\n    private async detach(instance: Instance) {\n        const desiredState = !instance.online;\n        if (\n            !desiredState ||\n            !confirm(\n                `Are you sure you want to detach the instance \"${instance.name}\"? Once detached, the instance will no longer be managed by TGS and you can delete the files manually or reattach it by creating a new instance at the existing path.`\n            )\n        ) {\n            return;\n        }\n\n        const response = await InstanceClient.detachInstance(instance.id);\n        if (response.code === StatusCode.OK) {\n            await this.loadInstances();\n        } else {\n            this.addError(response.error);\n        }\n    }\n\n    private async setOnline(instance: Instance) {\n        //Yes this is desynchronized and will use the last known state of the instance\n        // to determine what state we should put it in, thats intentional, if the user clicks Set Online, it needs\n        // to be online, no matter what it previously was\n        const desiredState = !instance.online;\n        if (\n            !desiredState &&\n            !confirm(`Are you sure you want to take the instance \"${instance.name}\" offline?`)\n        ) {\n            return;\n        }\n\n        const instanceedit = await InstanceClient.editInstance(({\n            id: instance.id,\n            online: desiredState\n        } as unknown) as InstanceResponse);\n        if (instanceedit.code === StatusCode.OK) {\n            await this.loadInstances();\n        } else {\n            this.addError(instanceedit.error);\n        }\n    }\n\n    public render(): ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.instance.list\" />;\n        }\n\n        const canOnline = !!(\n            resolvePermissionSet(this.context.user).instanceManagerRights &\n            InstanceManagerRights.SetOnline\n        );\n\n        const canGrant = hasInstanceManagerRight(\n            resolvePermissionSet(this.context.user),\n            InstanceManagerRights.GrantPermissions\n        );\n\n        const canDetach = hasInstanceManagerRight(\n            resolvePermissionSet(this.context.user),\n            InstanceManagerRights.Delete\n        );\n\n        const tablecellstyling: CSSProperties = {\n            verticalAlign: \"middle\"\n        };\n\n        return (\n            <div className=\"text-center\">\n                <DebugJsonViewer obj={this.state.instances} />\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                <h3>\n                    <FormattedMessage id=\"view.instance.list.title\" />\n                </h3>\n                <Table striped bordered hover variant=\"dark\" responsive className=\"mb-4\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>\n                                <FormattedMessage id=\"generic.name\" />\n                            </th>\n                            <th>\n                                <FormattedMessage id=\"generic.online\" />\n                            </th>\n                            <th>\n                                <FormattedMessage id=\"generic.path\" />\n                            </th>\n                            <th>\n                                <FormattedMessage id=\"generic.configmode\" />\n                            </th>\n                            <th>\n                                <FormattedMessage id=\"generic.action\" />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.instances.map(value => {\n                            return (\n                                <tr key={value.id}>\n                                    <td style={tablecellstyling}>{value.id}</td>\n                                    <td style={tablecellstyling}>{value.name}</td>\n                                    <td style={tablecellstyling}>\n                                        {value.online ? (\n                                            <Badge variant=\"success\">\n                                                <FormattedMessage id=\"generic.online\" />\n                                            </Badge>\n                                        ) : (\n                                            <Badge variant=\"danger\">\n                                                <FormattedMessage id=\"generic.offline\" />\n                                            </Badge>\n                                        )}\n                                    </td>\n                                    <td style={tablecellstyling}>\n                                        {value.moveJob ? (\n                                            <FormattedMessage id=\"view.instance.moving\" />\n                                        ) : (\n                                            value.path\n                                        )}\n                                    </td>\n                                    <td style={tablecellstyling}>\n                                        <FormattedMessage\n                                            id={`view.instance.configmode.${value.configurationType.toString()}`}\n                                        />\n                                    </td>\n                                    <td className=\"align-middle p-1\" style={tablecellstyling}>\n                                        {!value.canAccess && value.online ? (\n                                            <OverlayTrigger\n                                                placement=\"top\"\n                                                overlay={props => (\n                                                    <Tooltip\n                                                        id={`grant-tooltop-${value.id}`}\n                                                        {...props}>\n                                                        <FormattedMessage\n                                                            id={`view.instance.list.grant${\n                                                                !canGrant ? \".deny\" : \"\"\n                                                            }`}\n                                                        />\n                                                    </Tooltip>\n                                                )}>\n                                                <Button\n                                                    className=\"mx-1\"\n                                                    variant=\"warning\"\n                                                    onClick={() => this.grantPermissions(value)}\n                                                    disabled={!canGrant}>\n                                                    <FontAwesomeIcon\n                                                        icon={canGrant ? faUnlock : faLock}\n                                                    />\n                                                </Button>\n                                            </OverlayTrigger>\n                                        ) : (\n                                            <></>\n                                        )}\n                                        <Button\n                                            className=\"mx-1\"\n                                            onClick={() => {\n                                                RouteData.selectedinstanceid = value.id;\n                                                this.props.history.push(\n                                                    AppRoutes.instanceedit.link ??\n                                                        AppRoutes.instanceedit.route\n                                                );\n                                            }}\n                                            disabled={!value.canAccess}>\n                                            <FormattedMessage id=\"generic.access\" />\n                                        </Button>\n                                        <Button\n                                            className=\"mx-1\"\n                                            variant={value.online ? \"danger\" : \"success\"}\n                                            onClick={() => this.setOnline(value)}\n                                            disabled={!canOnline}>\n                                            <FormattedMessage\n                                                id={`view.instance.list.set.${\n                                                    value.online ? \"offline\" : \"online\"\n                                                }`}\n                                            />\n                                        </Button>\n                                        {!value.online ? (\n                                            <Button\n                                                variant=\"danger\"\n                                                onClick={() => this.detach(value)}\n                                                disabled={!canDetach}>\n                                                <FontAwesomeIcon icon={faTrash} />\n                                            </Button>\n                                        ) : null}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n                <PageHelper\n                    selectPage={newPage => this.setState({ page: newPage })}\n                    totalPages={this.state.maxPage ?? 1}\n                    currentPage={this.state.page}\n                />\n                <div className=\"align-middle\">\n                    <div className=\"mb-4\">{this.renderAddInstance()}</div>\n                    <Button\n                        className=\"mx-1\"\n                        onClick={() => {\n                            this.props.history.push(\n                                AppRoutes.instancejobs.link ?? AppRoutes.instancejobs.route\n                            );\n                        }}>\n                        <FormattedMessage id=\"routes.instancejobs\" />\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    private renderAddInstance(): React.ReactNode {\n        const canCreate = !!(\n            resolvePermissionSet(this.context.user).instanceManagerRights &\n            InstanceManagerRights.Create\n        );\n\n        return (\n            <OverlayTrigger\n                overlay={\n                    <Tooltip id=\"create-instance-tooltip\">\n                        <FormattedMessage id=\"perms.instance.create.warning\" />\n                    </Tooltip>\n                }\n                show={canCreate ? false : undefined}>\n                {({ ref, ...triggerHandler }) => (\n                    <Button\n                        ref={ref}\n                        className=\"mx-1\"\n                        variant=\"success\"\n                        onClick={() => {\n                            this.props.history.push(\n                                AppRoutes.instancecreate.link ?? AppRoutes.instancecreate.route\n                            );\n                        }}\n                        disabled={!canCreate}\n                        {...triggerHandler}>\n                        <div>\n                            <FontAwesomeIcon className=\"mr-2\" icon={faPlus} />\n                            <FormattedMessage id=\"routes.instancecreate\" />\n                        </div>\n                    </Button>\n                )}\n            </OverlayTrigger>\n        );\n    }\n}\nInstanceList.contextType = GeneralContext;\nexport default withRouter(InstanceList);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"],\n    _excluded2 = [\"children\"];\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n\n  function Button(_ref2) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"size\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"bsPrefix\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar PopoverTitle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'popover-header');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(bsPrefix, className)\n  }), children);\n});\nexport default PopoverTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"bsPrefix\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar PopoverContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'popover-body');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix)\n  }), children);\n});\nexport default PopoverContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"content\", \"arrowProps\", \"popper\", \"show\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PopoverTitle from './PopoverTitle';\nimport PopoverContent from './PopoverContent';\nvar defaultProps = {\n  placement: 'right'\n};\nvar Popover = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      content = _ref.content,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.popper,\n      _1 = _ref.show,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n\n  var _ref2 = (placement == null ? void 0 : placement.split('-')) || [],\n      primaryPlacement = _ref2[0];\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && \"bs-popover-\" + primaryPlacement)\n  }, props), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"arrow\"\n  }, arrowProps)), content ? /*#__PURE__*/React.createElement(PopoverContent, null, children) : children);\n});\nPopover.defaultProps = defaultProps;\nPopover.Title = PopoverTitle;\nPopover.Content = PopoverContent;\nexport default Popover;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["JsonViewer","props","src","obj","name","theme","iconStyle","collapsed","displayDataTypes","DebugJsonViewer","configOptions","className","PageHelper","React","constructor","super","this","state","showGoto","gotoValue","currentPage","render","items","maxRight","Math","max","totalPages","maxLeft","min","Number","i","push","key","active","onClick","selectPage","ellipsis","disabled","findPopover","id","onSubmit","e","preventDefault","setState","type","value","onChange","parseInt","target","custom","_1","_2","_3","style","position","bottom","show","placement","overlay","prev","icon","InstanceList","setOnline","bind","grantPermissions","loading","instances","errors","page","RouteData","addError","error","prevState","Array","from","prevProps","loadInstances","instancelist","InstanceClient","tgsversionresponse","ServerClient","enableVersionWorkaround","code","StatusCode","SemverSatisfies","payload","apiVersion","modifiedlist","work","instance","content","modifiedinstance","online","InstancePermissionSetClient","then","permissionset","canAccess","ErrorCode","accessible","Promise","all","sort","a","b","maxPage","instanceedit","confirm","response","desiredState","text","canOnline","resolvePermissionSet","context","user","instanceManagerRights","InstanceManagerRights","canGrant","hasInstanceManagerRight","canDetach","tablecellstyling","verticalAlign","map","err","index","onClose","newarr","undefined","striped","bordered","hover","variant","responsive","moveJob","path","configurationType","toString","faUnlock","faLock","history","AppRoutes","detach","faTrash","newPage","renderAddInstance","canCreate","ref","triggerHandler","faPlus","contextType","GeneralContext","withRouter","_excluded","Badge","_ref","bsPrefix","pill","_ref$as","as","Component","prefix","displayName","defaultProps","_excluded2","PageItem","activeLabel","children","SafeAnchor","createButton","defaultValue","label","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","size","decoratedBsPrefix","Item","Popover","arrowProps","popper","primaryPlacement","split","role","Title","Content","Table","borderless","classes","table","responsiveClass"],"sourceRoot":""}