{"version":3,"file":"4945.ca56b95a327c1fa584ea.bundle.js","mappings":"+VAGO,MAAMA,UAAkBC,MAM3B,WAAAC,CAAYC,EAAcC,GACtB,MAAMC,aAAuBC,UAC7BC,MAAM,GAAGJ,mBAA8BC,MACvCI,KAAKJ,WAAaA,EAGlBI,KAAKC,UAAYJ,CACrB,EAGG,MAAMK,UAAqBT,MAK9B,WAAAC,CAAYC,EAAe,uBACvB,MAAME,aAAuBC,UAC7BC,MAAMJ,GAGNK,KAAKC,UAAYJ,CACrB,EAGG,MAAMM,UAAmBV,MAK5B,WAAAC,CAAYC,EAAe,sBACvB,MAAME,aAAuBC,UAC7BC,MAAMJ,GAGNK,KAAKC,UAAYJ,CACrB,EAIG,MAAMO,UAAkCX,MAM3C,WAAAC,CAAYW,EAASC,GACjB,MAAMT,aAAuBC,UAC7BC,MAAMM,GACNL,KAAKM,UAAYA,EACjBN,KAAKO,UAAY,4BAGjBP,KAAKC,UAAYJ,CACrB,EAIG,MAAMW,UAA+Bf,MAMxC,WAAAC,CAAYW,EAASC,GACjB,MAAMT,aAAuBC,UAC7BC,MAAMM,GACNL,KAAKM,UAAYA,EACjBN,KAAKO,UAAY,yBAGjBP,KAAKC,UAAYJ,CACrB,EAIG,MAAMY,UAAoChB,MAM7C,WAAAC,CAAYW,EAASC,GACjB,MAAMT,aAAuBC,UAC7BC,MAAMM,GACNL,KAAKM,UAAYA,EACjBN,KAAKO,UAAY,8BAGjBP,KAAKC,UAAYJ,CACrB,EAIG,MAAMa,UAAyCjB,MAKlD,WAAAC,CAAYW,GACR,MAAMR,aAAuBC,UAC7BC,MAAMM,GACNL,KAAKO,UAAY,mCAGjBP,KAAKC,UAAYJ,CACrB,EAIG,MAAMc,UAAwBlB,MAMjC,WAAAC,CAAYW,EAASO,GACjB,MAAMf,aAAuBC,UAC7BC,MAAMM,GACNL,KAAKY,YAAcA,EAGnBZ,KAAKC,UAAYJ,CACrB,E,mHC9HG,MAAMgB,EAET,qBAAAC,CAAsBC,GAClB,OAAOC,EAAA,EAAkBC,MAAMC,KAAKC,UAAUJ,GAClD,CACA,sBAAAK,CAAuBC,GACnB,IAAIC,EACAC,EACJ,IAAI,QAAcF,GAAO,CAErB,MAAMG,EAAa,IAAIC,WAAWJ,GAC5BK,EAAiBF,EAAWG,QAAQX,EAAA,EAAkBY,qBAC5D,IAAwB,IAApBF,EACA,MAAM,IAAIjC,MAAM,0BAIpB,MAAMoC,EAAiBH,EAAiB,EACxCJ,EAAcQ,OAAOC,aAAaC,MAAM,KAAMC,MAAMnC,UAAUoC,MAAMC,KAAKX,EAAWU,MAAM,EAAGL,KAC7FN,EAAiBC,EAAWY,WAAaP,EAAkBL,EAAWU,MAAML,GAAgBQ,OAAS,IACzG,KACK,CACD,MAAMC,EAAWjB,EACXK,EAAiBY,EAASX,QAAQX,EAAA,EAAkBuB,iBAC1D,IAAwB,IAApBb,EACA,MAAM,IAAIjC,MAAM,0BAIpB,MAAMoC,EAAiBH,EAAiB,EACxCJ,EAAcgB,EAASE,UAAU,EAAGX,GACpCN,EAAiBe,EAASG,OAASZ,EAAkBS,EAASE,UAAUX,GAAkB,IAC9F,CAEA,MAAMa,EAAW1B,EAAA,EAAkB2B,MAAMrB,GACnCsB,EAAW1B,KAAKyB,MAAMD,EAAS,IACrC,GAAIE,EAASC,KACT,MAAM,IAAIpD,MAAM,kDAKpB,MAAO,CAAC8B,EAHgBqB,EAI5B,E,iCC5CG,MAAME,EACT,WAAApD,GACIM,KAAK+C,UAAY,EACrB,CACA,IAAAC,CAAKC,GACD,IAAK,MAAMC,KAAYlD,KAAK+C,UACxBG,EAASF,KAAKC,EAEtB,CACA,KAAAE,CAAMC,GACF,IAAK,MAAMF,KAAYlD,KAAK+C,UACpBG,EAASC,OACTD,EAASC,MAAMC,EAG3B,CACA,QAAAC,GACI,IAAK,MAAMH,KAAYlD,KAAK+C,UACpBG,EAASG,UACTH,EAASG,UAGrB,CACA,SAAAC,CAAUJ,GAEN,OADAlD,KAAK+C,UAAUQ,KAAKL,GACb,IAAI,KAAoBlD,KAAMkD,EACzC,ECzBG,MAAMM,EACT,WAAA9D,CAAY+D,EAAUC,EAAYC,GAC9B3D,KAAK4D,YAAc,IACnB5D,KAAK6D,UAAY,GACjB7D,KAAK8D,mBAAqB,EAC1B9D,KAAK+D,yBAA0B,EAE/B/D,KAAKgE,yBAA2B,EAChChE,KAAKiE,0BAA4B,EACjCjE,KAAKkE,mBAAqB,EAC1BlE,KAAKmE,sBAAuB,EAC5BnE,KAAKoE,UAAYX,EACjBzD,KAAKqE,YAAcX,EACnB1D,KAAK4D,YAAcD,CACvB,CACA,WAAMW,CAAMjE,GACR,MAAMkE,EAAoBvE,KAAKoE,UAAUI,aAAanE,GACtD,IAAIoE,EAAsBC,QAAQC,UAElC,GAAI3E,KAAK4E,qBAAqBvE,GAAU,CACpCL,KAAK8D,qBACL,IAAIe,EAA8B,OAC9BC,EAA8B,QAC9B,QAAcP,GACdvE,KAAKkE,oBAAsBK,EAAkBnC,WAG7CpC,KAAKkE,oBAAsBK,EAAkB9B,OAE7CzC,KAAKkE,oBAAsBlE,KAAK4D,cAChCa,EAAsB,IAAIC,SAAQ,CAACC,EAASI,KACxCF,EAA8BF,EAC9BG,EAA8BC,CAAM,KAG5C/E,KAAK6D,UAAUN,KAAK,IAAIyB,EAAaT,EAAmBvE,KAAK8D,mBAAoBe,EAA6BC,GAClH,CACA,IAKS9E,KAAKmE,4BACAnE,KAAKqE,YAAYY,KAAKV,EAEpC,CACA,MACIvE,KAAKkF,eACT,OACMT,CACV,CACA,IAAAU,CAAKC,GACD,IAAIC,GAAsB,EAE1B,IAAK,IAAIC,EAAQ,EAAGA,EAAQtF,KAAK6D,UAAUpB,OAAQ6C,IAAS,CACxD,MAAMC,EAAUvF,KAAK6D,UAAUyB,GAC/B,GAAIC,EAAQC,KAAOJ,EAAWK,WAC1BJ,EAAqBC,GACjB,QAAcC,EAAQG,UACtB1F,KAAKkE,oBAAsBqB,EAAQG,SAAStD,WAG5CpC,KAAKkE,oBAAsBqB,EAAQG,SAASjD,OAGhD8C,EAAQI,gBAEP,MAAI3F,KAAKkE,mBAAqBlE,KAAK4D,aAKpC,MAHA2B,EAAQI,WAIZ,CACJ,EAC4B,IAAxBN,IAEArF,KAAK6D,UAAY7D,KAAK6D,UAAU3B,MAAMmD,EAAqB,GAEnE,CACA,qBAAAO,CAAsBvF,GAClB,GAAIL,KAAK+D,wBACL,OAAI1D,EAAQwC,OAAS,IAAYgD,WAI7B7F,KAAK+D,yBAA0B,GACxB,GAIf,IAAK/D,KAAK4E,qBAAqBvE,GAC3B,OAAO,EAEX,MAAMyF,EAAY9F,KAAKgE,yBAEvB,OADAhE,KAAKgE,2BACD8B,GAAa9F,KAAKiE,2BACd6B,IAAc9F,KAAKiE,2BAGnBjE,KAAK+F,aAGF,IAEX/F,KAAKiE,0BAA4B6B,EAGjC9F,KAAK+F,aACE,EACX,CACA,cAAAC,CAAe3F,GACPA,EAAQoF,WAAazF,KAAKgE,yBAE1BhE,KAAKqE,YAAY4B,KAAK,IAAIxG,MAAM,gEAGpCO,KAAKgE,yBAA2B3D,EAAQoF,UAC5C,CACA,aAAAP,GACIlF,KAAKmE,sBAAuB,EAC5BnE,KAAK+D,yBAA0B,CACnC,CACA,aAAMmC,GACF,MAAMT,EAAuC,IAA1BzF,KAAK6D,UAAUpB,OAC5BzC,KAAK6D,UAAU,GAAG2B,IAClBxF,KAAK8D,mBAAqB,QAC1B9D,KAAKqE,YAAYY,KAAKjF,KAAKoE,UAAUI,aAAa,CAAE3B,KAAM,IAAYgD,SAAUJ,gBAGtF,MAAM/C,EAAW1C,KAAK6D,UACtB,IAAK,MAAM0B,KAAW7C,QACZ1C,KAAKqE,YAAYY,KAAKM,EAAQG,UAExC1F,KAAKmE,sBAAuB,CAChC,CACA,QAAAgC,CAAShD,GACLA,UAA8CA,EAAQ,IAAI1D,MAAM,mCAEhE,IAAK,MAAM8F,KAAWvF,KAAK6D,UACvB0B,EAAQa,UAAUjD,EAE1B,CACA,oBAAAyB,CAAqBvE,GAMjB,OAAQA,EAAQwC,MACZ,KAAK,IAAYwD,WACjB,KAAK,IAAYC,WACjB,KAAK,IAAYC,WACjB,KAAK,IAAYC,iBACjB,KAAK,IAAYC,iBACb,OAAO,EACX,KAAK,IAAYC,MACjB,KAAK,IAAYb,SACjB,KAAK,IAAYc,KACjB,KAAK,IAAYC,IACb,OAAO,EAEnB,CACA,SAAAb,QACiCc,IAAzB7G,KAAK8G,kBACL9G,KAAK8G,gBAAkBC,YAAWC,UAC9B,IACShH,KAAKmE,4BACAnE,KAAKqE,YAAYY,KAAKjF,KAAKoE,UAAUI,aAAa,CAAE3B,KAAM,IAAY+D,IAAKnB,WAAYzF,KAAKiE,4BAG1G,CACA,MAAQ,CACRgD,aAAajH,KAAK8G,iBAClB9G,KAAK8G,qBAAkBD,CAAS,GAEjC,KAEX,EAEJ,MAAM7B,EACF,WAAAtF,CAAYW,EAAS6G,EAAIC,EAAUC,GAC/BpH,KAAK0F,SAAWrF,EAChBL,KAAKwF,IAAM0B,EACXlH,KAAK2F,UAAYwB,EACjBnH,KAAKoG,UAAYgB,CACrB,EClLG,IAAIC,GACX,SAAWA,GAEPA,EAAiC,aAAI,eAErCA,EAA+B,WAAI,aAEnCA,EAA8B,UAAI,YAElCA,EAAkC,cAAI,gBAEtCA,EAAiC,aAAI,cACxC,CAXD,CAWGA,IAAuBA,EAAqB,CAAC,IAEzC,MAAMC,EAMT,aAAOC,CAAO7D,EAAY8D,EAAQ/D,EAAUgE,EAAiBC,EAA6BC,EAAiCC,GACvH,OAAO,IAAIN,EAAc5D,EAAY8D,EAAQ/D,EAAUgE,EAAiBC,EAA6BC,EAAiCC,EAC1I,CACA,WAAAlI,CAAYgE,EAAY8D,EAAQ/D,EAAUgE,EAAiBC,EAA6BC,EAAiCC,GACrH5H,KAAK6H,eAAiB,EACtB7H,KAAK8H,qBAAuB,KACxB9H,KAAK+H,QAAQC,IAAI,IAASC,QAAS,wNAAwN,EAE/P,KAAIC,WAAWxE,EAAY,cAC3B,KAAIwE,WAAWV,EAAQ,UACvB,KAAIU,WAAWzE,EAAU,YACzBzD,KAAK0H,4BAA8BA,QAAiFA,EAnC9F,IAoCtB1H,KAAK2H,gCAAkCA,QAAyFA,EAnCpG,KAoC5B3H,KAAKmI,6BAA+BP,QAAiFA,EAnC9E,IAoCvC5H,KAAK+H,QAAUP,EACfxH,KAAKoE,UAAYX,EACjBzD,KAAK0D,WAAaA,EAClB1D,KAAKoI,iBAAmBX,EACxBzH,KAAKqI,mBAAqB,IAAIxH,EAC9Bb,KAAK0D,WAAW4E,UAAajH,GAASrB,KAAKuI,qBAAqBlH,GAChErB,KAAK0D,WAAW8E,QAAWrF,GAAUnD,KAAKyI,kBAAkBtF,GAC5DnD,KAAK0I,WAAa,CAAC,EACnB1I,KAAK2I,SAAW,CAAC,EACjB3I,KAAK4I,iBAAmB,GACxB5I,KAAK6I,uBAAyB,GAC9B7I,KAAK8I,sBAAwB,GAC7B9I,KAAK+I,cAAgB,EACrB/I,KAAKgJ,4BAA6B,EAClChJ,KAAKiJ,iBAAmB5B,EAAmB6B,aAC3ClJ,KAAKmJ,oBAAqB,EAC1BnJ,KAAKoJ,mBAAqBpJ,KAAKoE,UAAUI,aAAa,CAAE3B,KAAM,IAAY8D,MAC9E,CAEA,SAAI0C,GACA,OAAOrJ,KAAKiJ,gBAChB,CAIA,gBAAIK,GACA,OAAOtJ,KAAK0D,YAAc1D,KAAK0D,WAAW4F,cAAwB,IACtE,CAEA,WAAIC,GACA,OAAOvJ,KAAK0D,WAAW6F,SAAW,EACtC,CAMA,WAAIA,CAAQC,GACR,GAAIxJ,KAAKiJ,mBAAqB5B,EAAmB6B,cAAgBlJ,KAAKiJ,mBAAqB5B,EAAmBoC,aAC1G,MAAM,IAAIhK,MAAM,0FAEpB,IAAK+J,EACD,MAAM,IAAI/J,MAAM,8CAEpBO,KAAK0D,WAAW6F,QAAUC,CAC9B,CAKA,KAAAE,GAEI,OADA1J,KAAK2J,cAAgB3J,KAAK4J,6BACnB5J,KAAK2J,aAChB,CACA,gCAAMC,GACF,GAAI5J,KAAKiJ,mBAAqB5B,EAAmB6B,aAC7C,OAAOxE,QAAQK,OAAO,IAAItF,MAAM,0EAEpCO,KAAKiJ,iBAAmB5B,EAAmBwC,WAC3C7J,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,2BACjC,UACU9J,KAAK+J,iBACP,KAASC,WAETC,OAAOC,SAASC,iBAAiB,SAAUnK,KAAK8H,sBAEpD9H,KAAKiJ,iBAAmB5B,EAAmB+C,UAC3CpK,KAAKmJ,oBAAqB,EAC1BnJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,wCACrC,CACA,MAAOO,GAGH,OAFArK,KAAKiJ,iBAAmB5B,EAAmB6B,aAC3ClJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,gEAAgEO,OAC1F3F,QAAQK,OAAOsF,EAC1B,CACJ,CACA,oBAAMN,GACF/J,KAAKsK,2BAAwBzD,EAC7B7G,KAAKgJ,4BAA6B,EAElC,MAAMuB,EAAmB,IAAI7F,SAAQ,CAACC,EAASI,KAC3C/E,KAAKwK,mBAAqB7F,EAC1B3E,KAAKyK,mBAAqB1F,CAAM,UAE9B/E,KAAK0D,WAAWgG,MAAM1J,KAAKoE,UAAUsG,gBAC3C,IACI,IAAIC,EAAU3K,KAAKoE,UAAUuG,QACxB3K,KAAK0D,WAAWkH,SAASC,YAG1BF,EAAU,GAEd,MAAM5J,EAAmB,CACrB0C,SAAUzD,KAAKoE,UAAU0G,KACzBH,WAaJ,GAXA3K,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,oCAC3B9J,KAAK+K,aAAa/K,KAAKqI,mBAAmBvH,sBAAsBC,IACtEf,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,sBAAsBhL,KAAKoE,UAAU0G,UAE5E9K,KAAKiL,kBACLjL,KAAKkL,sBACLlL,KAAKmL,gCACCZ,EAIFvK,KAAKsK,sBAKL,MAAMtK,KAAKsK,uBAEctK,KAAK0D,WAAWkH,SAASC,YAAa,KAE/D7K,KAAKoL,eAAiB,IAAI5H,EAAcxD,KAAKoE,UAAWpE,KAAK0D,WAAY1D,KAAKmI,8BAC9EnI,KAAK0D,WAAWkH,SAASS,aAAerL,KAAKoL,eAAelG,cAAcoG,KAAKtL,KAAKoL,gBACpFpL,KAAK0D,WAAWkH,SAASW,OAAS,KAC9B,GAAIvL,KAAKoL,eACL,OAAOpL,KAAKoL,eAAelF,SAC/B,GAGHlG,KAAK0D,WAAWkH,SAASY,yBACpBxL,KAAK+K,aAAa/K,KAAKoJ,mBAErC,CACA,MAAOiB,GAOH,MANArK,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,oCAAoCO,8CACrErK,KAAKiL,kBACLjL,KAAKyL,0BAGCzL,KAAK0D,WAAWuC,KAAKoE,GACrBA,CACV,CACJ,CAKA,UAAMpE,GAEF,MAAMyF,EAAe1L,KAAK2J,cAC1B3J,KAAK0D,WAAWkH,SAASC,WAAY,EACrC7K,KAAK2L,aAAe3L,KAAK4L,sBACnB5L,KAAK2L,aACX,UAEUD,CACV,CACA,MAAOrB,GAEP,CACJ,CACA,aAAAuB,CAAczI,GACV,GAAInD,KAAKiJ,mBAAqB5B,EAAmB6B,aAE7C,OADAlJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,8BAA8B3G,+DACxDuB,QAAQC,UAEnB,GAAI3E,KAAKiJ,mBAAqB5B,EAAmBwE,cAE7C,OADA7L,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,+BAA+B3G,4EACzDnD,KAAK2L,aAEhB,MAAMtC,EAAQrJ,KAAKiJ,iBAGnB,OAFAjJ,KAAKiJ,iBAAmB5B,EAAmBwE,cAC3C7L,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,2BAC7B9J,KAAK8L,uBAIL9L,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,iEACjC7C,aAAajH,KAAK8L,uBAClB9L,KAAK8L,2BAAwBjF,EAC7B7G,KAAK+L,iBACErH,QAAQC,YAEf0E,IAAUhC,EAAmB+C,WAE7BpK,KAAKgM,oBAEThM,KAAKiL,kBACLjL,KAAKyL,oBACLzL,KAAKsK,sBAAwBnH,GAAS,IAAI,KAAW,uEAI9CnD,KAAK0D,WAAWuC,KAAK9C,GAChC,CACA,uBAAM6I,GACF,UACUhM,KAAKiM,kBAAkBjM,KAAKkM,sBACtC,CACA,MAEA,CACJ,CAQA,MAAAC,CAAOC,KAAeC,GAClB,MAAOC,EAASC,GAAavM,KAAKwM,wBAAwBH,GACpDI,EAAuBzM,KAAK0M,wBAAwBN,EAAYC,EAAME,GAE5E,IAAII,EACJ,MAAMC,EAAU,IAAI9J,EAkCpB,OAjCA8J,EAAQC,eAAiB,KACrB,MAAMC,EAAmB9M,KAAK+M,wBAAwBN,EAAqBO,cAE3E,cADOhN,KAAK0I,WAAW+D,EAAqBO,cACrCL,EAAaM,MAAK,IACdjN,KAAKiM,kBAAkBa,IAChC,EAEN9M,KAAK0I,WAAW+D,EAAqBO,cAAgB,CAACE,EAAiB/J,KAC/DA,EACAyJ,EAAQzJ,MAAMA,GAGT+J,IAEDA,EAAgBrK,OAAS,IAAY0D,WACjC2G,EAAgB/J,MAChByJ,EAAQzJ,MAAM,IAAI1D,MAAMyN,EAAgB/J,QAGxCyJ,EAAQvJ,WAIZuJ,EAAQ5J,KAAMkK,EAAoB,MAE1C,EAEJP,EAAe3M,KAAKiM,kBAAkBQ,GACjCU,OAAO9C,IACRuC,EAAQzJ,MAAMkH,UACPrK,KAAK0I,WAAW+D,EAAqBO,aAAa,IAE7DhN,KAAKoN,eAAed,EAASK,GACtBC,CACX,CACA,YAAA7B,CAAa1K,GAET,OADAL,KAAKmL,0BACEnL,KAAK0D,WAAWuB,KAAK5E,EAChC,CAKA,iBAAA4L,CAAkB5L,GACd,OAAIL,KAAKoL,eACEpL,KAAKoL,eAAe9G,MAAMjE,GAG1BL,KAAK+K,aAAa/K,KAAKoE,UAAUI,aAAanE,GAE7D,CAUA,IAAA4E,CAAKmH,KAAeC,GAChB,MAAOC,EAASC,GAAavM,KAAKwM,wBAAwBH,GACpDgB,EAAcrN,KAAKiM,kBAAkBjM,KAAKsN,kBAAkBlB,EAAYC,GAAM,EAAME,IAE1F,OADAvM,KAAKoN,eAAed,EAASe,GACtBA,CACX,CAYA,MAAAE,CAAOnB,KAAeC,GAClB,MAAOC,EAASC,GAAavM,KAAKwM,wBAAwBH,GACpDI,EAAuBzM,KAAKsN,kBAAkBlB,EAAYC,GAAM,EAAOE,GA+B7E,OA9BU,IAAI7H,SAAQ,CAACC,EAASI,KAE5B/E,KAAK0I,WAAW+D,EAAqBO,cAAgB,CAACE,EAAiB/J,KAC/DA,EACA4B,EAAO5B,GAGF+J,IAEDA,EAAgBrK,OAAS,IAAY0D,WACjC2G,EAAgB/J,MAChB4B,EAAO,IAAItF,MAAMyN,EAAgB/J,QAGjCwB,EAAQuI,EAAgBM,QAI5BzI,EAAO,IAAItF,MAAM,4BAA4ByN,EAAgBrK,SAErE,EAEJ,MAAM8J,EAAe3M,KAAKiM,kBAAkBQ,GACvCU,OAAO9C,IACRtF,EAAOsF,UAEArK,KAAK0I,WAAW+D,EAAqBO,aAAa,IAE7DhN,KAAKoN,eAAed,EAASK,EAAa,GAGlD,CACA,EAAAc,CAAGrB,EAAYsB,GACNtB,GAAesB,IAGpBtB,EAAaA,EAAWuB,cACnB3N,KAAK2I,SAASyD,KACfpM,KAAK2I,SAASyD,GAAc,KAGsB,IAAlDpM,KAAK2I,SAASyD,GAAYzK,QAAQ+L,IAGtC1N,KAAK2I,SAASyD,GAAY7I,KAAKmK,GACnC,CACA,GAAAE,CAAIxB,EAAYyB,GACZ,IAAKzB,EACD,OAEJA,EAAaA,EAAWuB,cACxB,MAAMG,EAAW9N,KAAK2I,SAASyD,GAC/B,GAAK0B,EAGL,GAAID,EAAQ,CACR,MAAME,EAAYD,EAASnM,QAAQkM,IAChB,IAAfE,IACAD,EAASE,OAAOD,EAAW,GACH,IAApBD,EAASrL,eACFzC,KAAK2I,SAASyD,GAGjC,aAEWpM,KAAK2I,SAASyD,EAE7B,CAKA,OAAA5D,CAAQyF,GACAA,GACAjO,KAAK4I,iBAAiBrF,KAAK0K,EAEnC,CAKA,cAAAC,CAAeD,GACPA,GACAjO,KAAK6I,uBAAuBtF,KAAK0K,EAEzC,CAKA,aAAAE,CAAcF,GACNA,GACAjO,KAAK8I,sBAAsBvF,KAAK0K,EAExC,CACA,oBAAA1F,CAAqBlH,GAOjB,GANArB,KAAKiL,kBACAjL,KAAKgJ,6BACN3H,EAAOrB,KAAKoO,0BAA0B/M,GACtCrB,KAAKgJ,4BAA6B,GAGlC3H,EAAM,CAEN,MAAMqB,EAAW1C,KAAKoE,UAAUiK,cAAchN,EAAMrB,KAAK+H,SACzD,IAAK,MAAM1H,KAAWqC,EAClB,IAAI1C,KAAKoL,gBAAmBpL,KAAKoL,eAAexF,sBAAsBvF,GAItE,OAAQA,EAAQwC,MACZ,KAAK,IAAYwD,WACbrG,KAAKsO,oBAAoBjO,GACpB8M,OAAO9C,IACRrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,sCAAqC,QAAe4K,KAAK,IAE9F,MACJ,KAAK,IAAY/D,WACjB,KAAK,IAAYC,WAAY,CACzB,MAAM0H,EAAWjO,KAAK0I,WAAWrI,EAAQ2M,cACzC,GAAIiB,EAAU,CACN5N,EAAQwC,OAAS,IAAY0D,mBACtBvG,KAAK0I,WAAWrI,EAAQ2M,cAEnC,IACIiB,EAAS5N,EACb,CACA,MAAOgK,GACHrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,iCAAgC,QAAe4K,KACpF,CACJ,CACA,KACJ,CACA,KAAK,IAAY1D,KAEb,MACJ,KAAK,IAAYD,MAAO,CACpB1G,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,uCACvC,MAAM7H,EAAQ9C,EAAQ8C,MAAQ,IAAI1D,MAAM,sCAAwCY,EAAQ8C,YAAS0D,GAClE,IAA3BxG,EAAQkO,eAIRvO,KAAK0D,WAAWuC,KAAK9C,GAIrBnD,KAAK2L,aAAe3L,KAAK4L,cAAczI,GAE3C,KACJ,CACA,KAAK,IAAYyD,IACT5G,KAAKoL,gBACLpL,KAAKoL,eAAejG,KAAK9E,GAE7B,MACJ,KAAK,IAAYwF,SACT7F,KAAKoL,gBACLpL,KAAKoL,eAAepF,eAAe3F,GAEvC,MACJ,QACIL,KAAK+H,QAAQC,IAAI,IAASC,QAAS,yBAAyB5H,EAAQwC,SAIpF,CACA7C,KAAKkL,qBACT,CACA,yBAAAkD,CAA0B/M,GACtB,IAAImN,EACAjN,EACJ,KACKA,EAAeiN,GAAmBxO,KAAKqI,mBAAmBjH,uBAAuBC,EACtF,CACA,MAAOgJ,GACH,MAAMhK,EAAU,qCAAuCgK,EACvDrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAOY,GACjC,MAAM8C,EAAQ,IAAI1D,MAAMY,GAExB,MADAL,KAAKyK,mBAAmBtH,GAClBA,CACV,CACA,GAAIqL,EAAgBrL,MAAO,CACvB,MAAM9C,EAAU,oCAAsCmO,EAAgBrL,MACtEnD,KAAK+H,QAAQC,IAAI,IAASvI,MAAOY,GACjC,MAAM8C,EAAQ,IAAI1D,MAAMY,GAExB,MADAL,KAAKyK,mBAAmBtH,GAClBA,CACV,CAKA,OAHInD,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,8BAErC9J,KAAKwK,qBACEjJ,CACX,CACA,uBAAA4J,GACQnL,KAAK0D,WAAWkH,SAASY,oBAK7BxL,KAAK6H,gBAAiB,IAAI4G,MAAOC,UAAY1O,KAAK2H,gCAClD3H,KAAKyL,oBACT,CACA,mBAAAP,GACI,KAAKlL,KAAK0D,WAAWkH,UAAa5K,KAAK0D,WAAWkH,SAASY,oBAEvDxL,KAAK2O,eAAiB5H,YAAW,IAAM/G,KAAK4O,iBAAiB5O,KAAK0H,kCAEnCb,IAA3B7G,KAAK6O,oBAAiC,CACtC,IAAIC,EAAW9O,KAAK6H,gBAAiB,IAAI4G,MAAOC,UAC5CI,EAAW,IACXA,EAAW,GAGf9O,KAAK6O,kBAAoB9H,YAAWC,UAChC,GAAIhH,KAAKiJ,mBAAqB5B,EAAmB+C,UAC7C,UACUpK,KAAK+K,aAAa/K,KAAKoJ,mBACjC,CACA,MAGIpJ,KAAKyL,mBACT,CACJ,GACDqD,EACP,CAER,CAEA,aAAAF,GAII5O,KAAK0D,WAAWuC,KAAK,IAAIxG,MAAM,uEACnC,CACA,yBAAM6O,CAAoBS,GACtB,MAAM3C,EAAa2C,EAAkBC,OAAOrB,cACtCsB,EAAUjP,KAAK2I,SAASyD,GAC9B,IAAK6C,EAOD,OANAjP,KAAK+H,QAAQC,IAAI,IAASC,QAAS,mCAAmCmE,kBAElE2C,EAAkB/B,eAClBhN,KAAK+H,QAAQC,IAAI,IAASC,QAAS,wBAAwBmE,gCAAyC2C,EAAkB/B,wBAChHhN,KAAKiM,kBAAkBjM,KAAKkP,yBAAyBH,EAAkB/B,aAAc,kCAAmC,SAKtI,MAAMmC,EAAcF,EAAQ/M,QAEtBkN,IAAkBL,EAAkB/B,aAE1C,IAAIqC,EACAC,EACAC,EACJ,IAAK,MAAMC,KAAKL,EACZ,IACI,MAAMM,EAAUJ,EAChBA,QAAYG,EAAExN,MAAMhC,KAAM+O,EAAkBW,WACxCN,GAAmBC,GAAOI,IAC1BzP,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,kCAAkC2M,gCACnEmD,EAAoBvP,KAAKkP,yBAAyBH,EAAkB/B,aAAc,oCAAqC,OAG3HsC,OAAYzI,CAChB,CACA,MAAOwD,GACHiF,EAAYjF,EACZrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,8BAA8B2M,mBAA4B/B,MAC/F,CAEAkF,QACMvP,KAAKiM,kBAAkBsD,GAExBH,GAEDE,EACAC,EAAoBvP,KAAKkP,yBAAyBH,EAAkB/B,aAAc,GAAGsC,IAAa,WAErFzI,IAARwI,EACLE,EAAoBvP,KAAKkP,yBAAyBH,EAAkB/B,aAAc,KAAMqC,IAGxFrP,KAAK+H,QAAQC,IAAI,IAASC,QAAS,wBAAwBmE,gCAAyC2C,EAAkB/B,kBAEtHuC,EAAoBvP,KAAKkP,yBAAyBH,EAAkB/B,aAAc,kCAAmC,aAEnHhN,KAAKiM,kBAAkBsD,IAGzBF,GACArP,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,qBAAqB2M,kDAGlE,CACA,iBAAA3D,CAAkBtF,GACdnD,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,kCAAkC3G,4BAAgCnD,KAAKiJ,qBAExGjJ,KAAKsK,sBAAwBtK,KAAKsK,uBAAyBnH,GAAS,IAAI,KAAW,iFAG/EnD,KAAKwK,oBACLxK,KAAKwK,qBAETxK,KAAK2P,0BAA0BxM,GAAS,IAAI1D,MAAM,uEAClDO,KAAKiL,kBACLjL,KAAKyL,oBACDzL,KAAKiJ,mBAAqB5B,EAAmBwE,cAC7C7L,KAAK+L,eAAe5I,GAEfnD,KAAKiJ,mBAAqB5B,EAAmB+C,WAAapK,KAAKoI,iBAEpEpI,KAAK4P,WAAWzM,GAEXnD,KAAKiJ,mBAAqB5B,EAAmB+C,WAClDpK,KAAK+L,eAAe5I,EAO5B,CACA,cAAA4I,CAAe5I,GACX,GAAInD,KAAKmJ,mBAAoB,CACzBnJ,KAAKiJ,iBAAmB5B,EAAmB6B,aAC3ClJ,KAAKmJ,oBAAqB,EACtBnJ,KAAKoL,iBACLpL,KAAKoL,eAAejF,SAAShD,QAAqCA,EAAQ,IAAI1D,MAAM,uBACpFO,KAAKoL,oBAAiBvE,GAEtB,KAASmD,WACTC,OAAOC,SAAS2F,oBAAoB,SAAU7P,KAAK8H,sBAEvD,IACI9H,KAAK4I,iBAAiBkH,SAASC,GAAMA,EAAE/N,MAAMhC,KAAM,CAACmD,KACxD,CACA,MAAOkH,GACHrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,0CAA0C0D,mBAAuBkH,MACtG,CACJ,CACJ,CACA,gBAAMuF,CAAWzM,GACb,MAAM6M,EAAqBvB,KAAKwB,MAChC,IAAIC,EAA4B,EAC5BC,OAAuBtJ,IAAV1D,EAAsBA,EAAQ,IAAI1D,MAAM,mDACrD2Q,EAAiBpQ,KAAKqQ,mBAAmBH,IAA6B,EAAGC,GAC7E,GAAuB,OAAnBC,EAGA,OAFApQ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,2GACjC9J,KAAK+L,eAAe5I,GAUxB,GAPAnD,KAAKiJ,iBAAmB5B,EAAmBoC,aACvCtG,EACAnD,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,6CAA6C7H,OAGpFnD,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,4BAEA,IAAvChL,KAAK6I,uBAAuBpG,OAAc,CAC1C,IACIzC,KAAK6I,uBAAuBiH,SAASC,GAAMA,EAAE/N,MAAMhC,KAAM,CAACmD,KAC9D,CACA,MAAOkH,GACHrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,iDAAiD0D,mBAAuBkH,MAC7G,CAEA,GAAIrK,KAAKiJ,mBAAqB5B,EAAmBoC,aAE7C,YADAzJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,wFAGzC,CACA,KAA0B,OAAnBsG,GAAyB,CAM5B,GALApQ,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,4BAA4BkF,mBAA2CE,eACxG,IAAI1L,SAASC,IACf3E,KAAK8L,sBAAwB/E,WAAWpC,EAASyL,EAAe,IAEpEpQ,KAAK8L,2BAAwBjF,EACzB7G,KAAKiJ,mBAAqB5B,EAAmBoC,aAE7C,YADAzJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,qFAGrC,IAII,SAHM9J,KAAK+J,iBACX/J,KAAKiJ,iBAAmB5B,EAAmB+C,UAC3CpK,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,2CACG,IAAtChL,KAAK8I,sBAAsBrG,OAC3B,IACIzC,KAAK8I,sBAAsBgH,SAASC,GAAMA,EAAE/N,MAAMhC,KAAM,CAACA,KAAK0D,WAAW4F,gBAC7E,CACA,MAAOe,GACHrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,uDAAuDO,KAAK0D,WAAW4F,8BAA8Be,MAC1I,CAEJ,MACJ,CACA,MAAOA,GAEH,GADArK,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,8CAA8CX,OACjFrK,KAAKiJ,mBAAqB5B,EAAmBoC,aAM7C,OALAzJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,4BAA4B9J,KAAKiJ,mGAE9DjJ,KAAKiJ,mBAAqB5B,EAAmBwE,eAC7C7L,KAAK+L,kBAIboE,EAAa9F,aAAa5K,MAAQ4K,EAAI,IAAI5K,MAAM4K,EAAEiG,YAClDF,EAAiBpQ,KAAKqQ,mBAAmBH,IAA6BzB,KAAKwB,MAAQD,EAAoBG,EAC3G,CACJ,CACAnQ,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,+CAA+CyD,KAAKwB,MAAQD,YAA6BE,gDAChIlQ,KAAK+L,gBACT,CACA,kBAAAsE,CAAmBE,EAAoBC,EAAqBC,GACxD,IACI,OAAOzQ,KAAKoI,iBAAiBsI,6BAA6B,CACtDF,sBACAD,qBACAE,eAER,CACA,MAAOpG,GAEH,OADArK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,6CAA6C8Q,MAAuBC,mBAAqCnG,OACnI,IACX,CACJ,CACA,yBAAAsF,CAA0BxM,GACtB,MAAMwN,EAAY3Q,KAAK0I,WACvB1I,KAAK0I,WAAa,CAAC,EACnBkI,OAAOC,KAAKF,GACPb,SAASgB,IACV,MAAM7C,EAAW0C,EAAUG,GAC3B,IACI7C,EAAS,KAAM9K,EACnB,CACA,MAAOkH,GACHrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,wCAAwC0D,oBAAuB,QAAekH,KACnH,IAER,CACA,iBAAAoB,GACQzL,KAAK6O,oBACL5H,aAAajH,KAAK6O,mBAClB7O,KAAK6O,uBAAoBhI,EAEjC,CACA,eAAAoE,GACQjL,KAAK2O,gBACL1H,aAAajH,KAAK2O,eAE1B,CACA,iBAAArB,CAAkBlB,EAAYC,EAAM0E,EAAaxE,GAC7C,GAAIwE,EACA,OAAyB,IAArBxE,EAAU9J,OACH,CACHiN,UAAWrD,EACXE,YACAyC,OAAQ5C,EACRvJ,KAAM,IAAYwD,YAIf,CACHqJ,UAAWrD,EACX2C,OAAQ5C,EACRvJ,KAAM,IAAYwD,YAIzB,CACD,MAAM2G,EAAehN,KAAK+I,cAE1B,OADA/I,KAAK+I,gBACoB,IAArBwD,EAAU9J,OACH,CACHiN,UAAWrD,EACXW,aAAcA,EAAasD,WAC3B/D,YACAyC,OAAQ5C,EACRvJ,KAAM,IAAYwD,YAIf,CACHqJ,UAAWrD,EACXW,aAAcA,EAAasD,WAC3BtB,OAAQ5C,EACRvJ,KAAM,IAAYwD,WAG9B,CACJ,CACA,cAAA+G,CAAed,EAASK,GACpB,GAAuB,IAAnBL,EAAQ7J,OAAZ,CAIKkK,IACDA,EAAejI,QAAQC,WAI3B,IAAK,MAAMqM,KAAY1E,EACnBA,EAAQ0E,GAAU1N,UAAU,CACxBD,SAAU,KACNsJ,EAAeA,EAAaM,MAAK,IAAMjN,KAAKiM,kBAAkBjM,KAAKkP,yBAAyB8B,KAAW,EAE3G7N,MAAQC,IACJ,IAAI/C,EAEAA,EADA+C,aAAe3D,MACL2D,EAAI/C,QAET+C,GAAOA,EAAIkN,SACNlN,EAAIkN,WAGJ,gBAEd3D,EAAeA,EAAaM,MAAK,IAAMjN,KAAKiM,kBAAkBjM,KAAKkP,yBAAyB8B,EAAU3Q,KAAU,EAEpH2C,KAAOC,IACH0J,EAAeA,EAAaM,MAAK,IAAMjN,KAAKiM,kBAAkBjM,KAAKiR,yBAAyBD,EAAU/N,KAAO,GA1BzH,CA8BJ,CACA,uBAAAuJ,CAAwBH,GACpB,MAAMC,EAAU,GACVC,EAAY,GAClB,IAAK,IAAI2E,EAAI,EAAGA,EAAI7E,EAAK5J,OAAQyO,IAAK,CAClC,MAAMC,EAAW9E,EAAK6E,GACtB,GAAIlR,KAAKoR,cAAcD,GAAW,CAC9B,MAAMH,EAAWhR,KAAK+I,cACtB/I,KAAK+I,gBAELuD,EAAQ0E,GAAYG,EACpB5E,EAAUhJ,KAAKyN,EAASV,YAExBjE,EAAK2B,OAAOkD,EAAG,EACnB,CACJ,CACA,MAAO,CAAC5E,EAASC,EACrB,CACA,aAAA6E,CAAcC,GAEV,OAAOA,GAAOA,EAAI/N,WAAsC,mBAAlB+N,EAAI/N,SAC9C,CACA,uBAAAoJ,CAAwBN,EAAYC,EAAME,GACtC,MAAMS,EAAehN,KAAK+I,cAE1B,OADA/I,KAAK+I,gBACoB,IAArBwD,EAAU9J,OACH,CACHiN,UAAWrD,EACXW,aAAcA,EAAasD,WAC3B/D,YACAyC,OAAQ5C,EACRvJ,KAAM,IAAY2D,kBAIf,CACHkJ,UAAWrD,EACXW,aAAcA,EAAasD,WAC3BtB,OAAQ5C,EACRvJ,KAAM,IAAY2D,iBAG9B,CACA,uBAAAuG,CAAwB7F,GACpB,MAAO,CACH8F,aAAc9F,EACdrE,KAAM,IAAY4D,iBAE1B,CACA,wBAAAwK,CAAyB/J,EAAIjE,GACzB,MAAO,CACH+J,aAAc9F,EACdjE,OACAJ,KAAM,IAAYyD,WAE1B,CACA,wBAAA4I,CAAyBhI,EAAI/D,EAAOqK,GAChC,OAAIrK,EACO,CACHA,QACA6J,aAAc9F,EACdrE,KAAM,IAAY0D,YAGnB,CACHyG,aAAc9F,EACdsG,SACA3K,KAAM,IAAY0D,WAE1B,CACA,mBAAA2F,GACI,MAAO,CAAErJ,KAAM,IAAY6D,MAC/B,E,oECr6BJ,MAAM4K,EAAuC,CAAC,EAAG,IAAM,IAAO,IAAO,MAE9D,MAAMC,EACT,WAAA7R,CAAY8R,GACRxR,KAAKyR,kBAA+B5K,IAAhB2K,EAA4B,IAAIA,EAAa,MAAQF,CAC7E,CACA,4BAAAZ,CAA6BgB,GACzB,OAAO1R,KAAKyR,aAAaC,EAAanB,mBAC1C,ECTG,MAAMoB,GAEbA,EAAYC,cAAgB,gBAC5BD,EAAYE,OAAS,SCFd,MAAMC,EACT,WAAApS,CAAYE,EAAYmS,EAAYC,GAChChS,KAAKJ,WAAaA,EAClBI,KAAK+R,WAAaA,EAClB/R,KAAKgS,QAAUA,CACnB,EAMG,MAAMC,EACT,GAAAC,CAAI1I,EAAK2I,GACL,OAAOnS,KAAKiF,KAAK,IACVkN,EACHtE,OAAQ,MACRrE,OAER,CACA,IAAA4I,CAAK5I,EAAK2I,GACN,OAAOnS,KAAKiF,KAAK,IACVkN,EACHtE,OAAQ,OACRrE,OAER,CACA,OAAOA,EAAK2I,GACR,OAAOnS,KAAKiF,KAAK,IACVkN,EACHtE,OAAQ,SACRrE,OAER,CAOA,eAAA6I,CAAgB7I,GACZ,MAAO,EACX,ECvCG,MAAM8I,UAA8BL,EACvC,WAAAvS,CAAY6S,EAAaC,GACrBzS,QACAC,KAAKyS,aAAeF,EACpBvS,KAAK0S,oBAAsBF,CAC/B,CACA,UAAMvN,CAAK0N,GACP,IAAIC,GAAa,EACb5S,KAAK0S,uBAAyB1S,KAAK6S,cAAiBF,EAAQnJ,KAAOmJ,EAAQnJ,IAAI7H,QAAQ,eAAiB,KAExGiR,GAAa,EACb5S,KAAK6S,mBAAqB7S,KAAK0S,uBAEnC1S,KAAK8S,wBAAwBH,GAC7B,MAAM/P,QAAiB5C,KAAKyS,aAAaxN,KAAK0N,GAC9C,OAAIC,GAAsC,MAAxBhQ,EAAShD,YAAsBI,KAAK0S,qBAClD1S,KAAK6S,mBAAqB7S,KAAK0S,sBAC/B1S,KAAK8S,wBAAwBH,SAChB3S,KAAKyS,aAAaxN,KAAK0N,IAEjC/P,CACX,CACA,uBAAAkQ,CAAwBH,GACfA,EAAQI,UACTJ,EAAQI,QAAU,CAAC,GAEnB/S,KAAK6S,aACLF,EAAQI,QAAQpB,EAAYC,eAAiB,UAAU5R,KAAK6S,eAGvD7S,KAAK0S,qBACNC,EAAQI,QAAQpB,EAAYC,uBACrBe,EAAQI,QAAQpB,EAAYC,cAG/C,CACA,eAAAS,CAAgB7I,GACZ,OAAOxJ,KAAKyS,aAAaJ,gBAAgB7I,EAC7C,E,iCCrCG,MAAMwJ,UAAwBf,EACjC,WAAAvS,CAAY8H,GAKR,GAJAzH,QACAC,KAAK+H,QAAUP,EAGM,oBAAVyL,OAAyB,KAASC,OAAQ,CAGjD,MAAMC,EAA0D,QAEhEnT,KAAKoT,KAAO,IAAKD,EAAY,gBAAiBE,WACzB,oBAAVJ,MACPjT,KAAKsT,WAAaH,EAAY,cAI9BnT,KAAKsT,WAAaL,MAItBjT,KAAKsT,WAAaH,EAAY,eAAZA,CAA4BnT,KAAKsT,WAAYtT,KAAKoT,KACxE,MAEIpT,KAAKsT,WAAaL,MAAM3H,MAAK,WAEjC,GAA+B,oBAApBiI,gBAAiC,CAGxC,MAAMJ,EAA0D,QAEhEnT,KAAKwT,qBAAuBL,EAAY,mBAC5C,MAEInT,KAAKwT,qBAAuBD,eAEpC,CAEA,UAAMtO,CAAK0N,GAEP,GAAIA,EAAQc,aAAed,EAAQc,YAAYC,QAC3C,MAAM,IAAI,KAEd,IAAKf,EAAQ9E,OACT,MAAM,IAAIpO,MAAM,sBAEpB,IAAKkT,EAAQnJ,IACT,MAAM,IAAI/J,MAAM,mBAEpB,MAAMkU,EAAkB,IAAI3T,KAAKwT,qBACjC,IAAIrQ,EAEAwP,EAAQc,cACRd,EAAQc,YAAYG,QAAU,KAC1BD,EAAgBE,QAChB1Q,EAAQ,IAAI,IAAY,GAKhC,IAsBIP,EAtBAkR,EAAY,KAChB,GAAInB,EAAQoB,QAAS,CACjB,MAAMC,EAAYrB,EAAQoB,QAC1BD,EAAY/M,YAAW,KACnB4M,EAAgBE,QAChB7T,KAAK+H,QAAQC,IAAI,IAASC,QAAS,8BACnC9E,EAAQ,IAAI,IAAc,GAC3B6Q,EACP,CACwB,KAApBrB,EAAQX,UACRW,EAAQX,aAAUnL,GAElB8L,EAAQX,UAERW,EAAQI,QAAUJ,EAAQI,SAAW,CAAC,GAClC,QAAcJ,EAAQX,SACtBW,EAAQI,QAAQ,gBAAkB,2BAGlCJ,EAAQI,QAAQ,gBAAkB,4BAI1C,IACInQ,QAAiB5C,KAAKsT,WAAWX,EAAQnJ,IAAK,CAC1CyK,KAAMtB,EAAQX,QACdkC,MAAO,WACPC,aAAyC,IAA5BxB,EAAQyB,gBAA2B,UAAY,cAC5DrB,QAAS,CACL,mBAAoB,oBACjBJ,EAAQI,SAEflF,OAAQ8E,EAAQ9E,OAChBwG,KAAM,OACNC,SAAU,SACVC,OAAQZ,EAAgBY,QAEhC,CACA,MAAOlK,GACH,GAAIlH,EACA,MAAMA,EAGV,MADAnD,KAAK+H,QAAQC,IAAI,IAASC,QAAS,4BAA4BoC,MACzDA,CACV,CACA,QACQyJ,GACA7M,aAAa6M,GAEbnB,EAAQc,cACRd,EAAQc,YAAYG,QAAU,KAEtC,CACA,IAAKhR,EAAS4R,GAAI,CACd,MAAM7U,QAAqB8U,EAAmB7R,EAAU,QACxD,MAAM,IAAI,KAAUjD,GAAgBiD,EAASmP,WAAYnP,EAAS8R,OACtE,CACA,MAAM1C,EAAUyC,EAAmB7R,EAAU+P,EAAQgC,cAC/CC,QAAgB5C,EACtB,OAAO,IAAIF,EAAalP,EAAS8R,OAAQ9R,EAASmP,WAAY6C,EAClE,CACA,eAAAvC,CAAgB7I,GACZ,IAAIqL,EAAU,GAKd,OAJI,KAAS3B,QAAUlT,KAAKoT,MAExBpT,KAAKoT,KAAK0B,WAAWtL,GAAK,CAACa,EAAG0F,IAAM8E,EAAU9E,EAAEgF,KAAK,QAElDF,CACX,EAEJ,SAASJ,EAAmB7R,EAAU+R,GAClC,IAAI3C,EACJ,OAAQ2C,GACJ,IAAK,cACD3C,EAAUpP,EAASoS,cACnB,MACJ,IAAK,OAOL,QACIhD,EAAUpP,EAASqS,OACnB,MANJ,IAAK,OACL,IAAK,WACL,IAAK,OACD,MAAM,IAAIxV,MAAM,GAAGkV,uBAK3B,OAAO3C,CACX,CCpJO,MAAMkD,UAAsBjD,EAC/B,WAAAvS,CAAY8H,GACRzH,QACAC,KAAK+H,QAAUP,CACnB,CAEA,IAAAvC,CAAK0N,GAED,OAAIA,EAAQc,aAAed,EAAQc,YAAYC,QACpChP,QAAQK,OAAO,IAAI,MAEzB4N,EAAQ9E,OAGR8E,EAAQnJ,IAGN,IAAI9E,SAAQ,CAACC,EAASI,KACzB,MAAMoQ,EAAM,IAAIC,eAChBD,EAAIE,KAAK1C,EAAQ9E,OAAQ8E,EAAQnJ,KAAK,GACtC2L,EAAIf,qBAA8CvN,IAA5B8L,EAAQyB,iBAAuCzB,EAAQyB,gBAC7Ee,EAAIG,iBAAiB,mBAAoB,kBACjB,KAApB3C,EAAQX,UACRW,EAAQX,aAAUnL,GAElB8L,EAAQX,WAEJ,QAAcW,EAAQX,SACtBmD,EAAIG,iBAAiB,eAAgB,4BAGrCH,EAAIG,iBAAiB,eAAgB,6BAG7C,MAAMvC,EAAUJ,EAAQI,QACpBA,GACAnC,OAAOC,KAAKkC,GACPjD,SAASyF,IACVJ,EAAIG,iBAAiBC,EAAQxC,EAAQwC,GAAQ,IAGjD5C,EAAQgC,eACRQ,EAAIR,aAAehC,EAAQgC,cAE3BhC,EAAQc,cACRd,EAAQc,YAAYG,QAAU,KAC1BuB,EAAItB,QACJ9O,EAAO,IAAI,KAAa,GAG5B4N,EAAQoB,UACRoB,EAAIpB,QAAUpB,EAAQoB,SAE1BoB,EAAIK,OAAS,KACL7C,EAAQc,cACRd,EAAQc,YAAYG,QAAU,MAE9BuB,EAAIT,QAAU,KAAOS,EAAIT,OAAS,IAClC/P,EAAQ,IAAImN,EAAaqD,EAAIT,OAAQS,EAAIpD,WAAYoD,EAAIvS,UAAYuS,EAAIM,eAGzE1Q,EAAO,IAAI,KAAUoQ,EAAIvS,UAAYuS,EAAIM,cAAgBN,EAAIpD,WAAYoD,EAAIT,QACjF,EAEJS,EAAIO,QAAU,KACV1V,KAAK+H,QAAQC,IAAI,IAASC,QAAS,4BAA4BkN,EAAIT,WAAWS,EAAIpD,eAClFhN,EAAO,IAAI,KAAUoQ,EAAIpD,WAAYoD,EAAIT,QAAQ,EAErDS,EAAIQ,UAAY,KACZ3V,KAAK+H,QAAQC,IAAI,IAASC,QAAS,8BACnClD,EAAO,IAAI,KAAe,EAE9BoQ,EAAIlQ,KAAK0N,EAAQX,QAAQ,IAzDlBtN,QAAQK,OAAO,IAAItF,MAAM,oBAHzBiF,QAAQK,OAAO,IAAItF,MAAM,sBA8DxC,ECxEG,MAAMmW,UAA0B3D,EAEnC,WAAAvS,CAAY8H,GAER,GADAzH,QACqB,oBAAVkT,OAAyB,KAASC,OACzClT,KAAK6V,YAAc,IAAI7C,EAAgBxL,OAEtC,IAA8B,oBAAnB4N,eAIZ,MAAM,IAAI3V,MAAM,+BAHhBO,KAAK6V,YAAc,IAAIX,EAAc1N,EAIzC,CACJ,CAEA,IAAAvC,CAAK0N,GAED,OAAIA,EAAQc,aAAed,EAAQc,YAAYC,QACpChP,QAAQK,OAAO,IAAI,MAEzB4N,EAAQ9E,OAGR8E,EAAQnJ,IAGNxJ,KAAK6V,YAAY5Q,KAAK0N,GAFlBjO,QAAQK,OAAO,IAAItF,MAAM,oBAHzBiF,QAAQK,OAAO,IAAItF,MAAM,sBAMxC,CACA,eAAA4S,CAAgB7I,GACZ,OAAOxJ,KAAK6V,YAAYxD,gBAAgB7I,EAC5C,E,cC/BG,MAAM,EACT,WAAA9J,GACIM,KAAK8V,YAAa,EAClB9V,KAAK4T,QAAU,IACnB,CACA,KAAAC,GACS7T,KAAK8V,aACN9V,KAAK8V,YAAa,EACd9V,KAAK4T,SACL5T,KAAK4T,UAGjB,CACA,UAAIW,GACA,OAAOvU,IACX,CACA,WAAI0T,GACA,OAAO1T,KAAK8V,UAChB,EChBG,MAAMC,EAET,eAAIC,GACA,OAAOhW,KAAKiW,WAAWvC,OAC3B,CACA,WAAAhU,CAAYwW,EAAY1O,EAAQ2K,GAC5BnS,KAAK6V,YAAcK,EACnBlW,KAAK+H,QAAUP,EACfxH,KAAKiW,WAAa,IAAI,EACtBjW,KAAKmW,SAAWhE,EAChBnS,KAAKoW,UAAW,EAChBpW,KAAKsI,UAAY,KACjBtI,KAAKwI,QAAU,IACnB,CACA,aAAM6N,CAAQ7M,EAAKkB,GAOf,GANA,KAAIxC,WAAWsB,EAAK,OACpB,KAAItB,WAAWwC,EAAgB,kBAC/B,KAAI4L,KAAK5L,EAAgB,IAAgB,kBACzC1K,KAAKuW,KAAO/M,EACZxJ,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,uCAE7B9L,IAAmB,IAAe+L,QACP,oBAAnBrB,gBAA+E,iBAAtC,IAAIA,gBAAiBT,aACtE,MAAM,IAAIlV,MAAM,8FAEpB,MAAOqL,EAAM4L,IAAS,UAChB3D,EAAU,CAAE,CAACjI,GAAO4L,KAAU1W,KAAKmW,SAASpD,SAC5C4D,EAAc,CAChBlD,YAAazT,KAAKiW,WAAW1B,OAC7BxB,UACAgB,QAAS,IACTK,gBAAiBpU,KAAKmW,SAAS/B,iBAE/B1J,IAAmB,IAAe+L,SAClCE,EAAYhC,aAAe,eAI/B,MAAMiC,EAAU,GAAGpN,OAASiF,KAAKwB,QACjCjQ,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,oCAAoCI,MACrE,MAAMhU,QAAiB5C,KAAK6V,YAAY3D,IAAI0E,EAASD,GACzB,MAAxB/T,EAAShD,YACTI,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,qDAAqDmD,EAAShD,eAE/FI,KAAK6W,YAAc,IAAI,KAAUjU,EAASmP,YAAc,GAAInP,EAAShD,YACrEI,KAAKoW,UAAW,GAGhBpW,KAAKoW,UAAW,EAEpBpW,KAAK8W,WAAa9W,KAAK+W,MAAM/W,KAAKuW,KAAMI,EAC5C,CACA,WAAMI,CAAMvN,EAAKmN,GACb,IACI,KAAO3W,KAAKoW,UACR,IACI,MAAMQ,EAAU,GAAGpN,OAASiF,KAAKwB,QACjCjQ,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,oCAAoCI,MACrE,MAAMhU,QAAiB5C,KAAK6V,YAAY3D,IAAI0E,EAASD,GACzB,MAAxB/T,EAAShD,YACTI,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,sDACvChL,KAAKoW,UAAW,GAEa,MAAxBxT,EAAShD,YACdI,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,qDAAqDmD,EAAShD,eAE/FI,KAAK6W,YAAc,IAAI,KAAUjU,EAASmP,YAAc,GAAInP,EAAShD,YACrEI,KAAKoW,UAAW,GAIZxT,EAASoP,SACThS,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,2CAA0C,QAAc5T,EAASoP,QAAShS,KAAKmW,SAASa,uBACrHhX,KAAKsI,WACLtI,KAAKsI,UAAU1F,EAASoP,UAK5BhS,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,qDAG7C,CACA,MAAOnM,GACErK,KAAKoW,SAKF/L,aAAa,KAEbrK,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,uDAIjCxW,KAAK6W,YAAcxM,EACnBrK,KAAKoW,UAAW,GAVpBpW,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,wDAAwDnM,EAAEhK,UAanG,CAER,CACA,QACIL,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,6CAG5BxW,KAAKgW,aACNhW,KAAKiX,eAEb,CACJ,CACA,UAAMhS,CAAK5D,GACP,OAAKrB,KAAKoW,UAGH,QAAYpW,KAAK+H,QAAS,cAAe/H,KAAK6V,YAAa7V,KAAKuW,KAAMlV,EAAMrB,KAAKmW,UAF7EzR,QAAQK,OAAO,IAAItF,MAAM,gDAGxC,CACA,UAAMwG,GACFjG,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,6CAEjCxW,KAAKoW,UAAW,EAChBpW,KAAKiW,WAAWpC,QAChB,UACU7T,KAAK8W,WAEX9W,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,qDAAqDxW,KAAKuW,SAC3F,MAAMxD,EAAU,CAAC,GACVjI,EAAM4L,IAAS,UACtB3D,EAAQjI,GAAQ4L,EAChB,MAAMQ,EAAgB,CAClBnE,QAAS,IAAKA,KAAY/S,KAAKmW,SAASpD,SACxCgB,QAAS/T,KAAKmW,SAASpC,QACvBK,gBAAiBpU,KAAKmW,SAAS/B,iBAEnC,IAAIjR,EACJ,UACUnD,KAAK6V,YAAYsB,OAAOnX,KAAKuW,KAAMW,EAC7C,CACA,MAAO9T,GACHD,EAAQC,CACZ,CACID,EACIA,aAAiB,OACQ,MAArBA,EAAMvD,WACNI,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,sFAGjCxW,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,2DAA2DrT,MAKpGnD,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,mDAEzC,CACA,QACIxW,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,0CAGjCxW,KAAKiX,eACT,CACJ,CACA,aAAAA,GACI,GAAIjX,KAAKwI,QAAS,CACd,IAAI4O,EAAa,gDACbpX,KAAK6W,cACLO,GAAc,WAAapX,KAAK6W,aAEpC7W,KAAK+H,QAAQC,IAAI,IAASwO,MAAOY,GACjCpX,KAAKwI,QAAQxI,KAAK6W,YACtB,CACJ,EC9KG,MAAMQ,EACT,WAAA3X,CAAYwW,EAAYoB,EAAa9P,EAAQ2K,GACzCnS,KAAK6V,YAAcK,EACnBlW,KAAK6S,aAAeyE,EACpBtX,KAAK+H,QAAUP,EACfxH,KAAKmW,SAAWhE,EAChBnS,KAAKsI,UAAY,KACjBtI,KAAKwI,QAAU,IACnB,CACA,aAAM6N,CAAQ7M,EAAKkB,GAUf,OATA,KAAIxC,WAAWsB,EAAK,OACpB,KAAItB,WAAWwC,EAAgB,kBAC/B,KAAI4L,KAAK5L,EAAgB,IAAgB,kBACzC1K,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,+BAEjCxW,KAAKuW,KAAO/M,EACRxJ,KAAK6S,eACLrJ,IAAQA,EAAI7H,QAAQ,KAAO,EAAI,IAAM,KAAO,gBAAgB4V,mBAAmBvX,KAAK6S,iBAEjF,IAAInO,SAAQ,CAACC,EAASI,KACzB,IAKIyS,EALAC,GAAS,EACb,GAAI/M,IAAmB,IAAegN,KAAtC,CAKA,GAAI,KAAS1N,WAAa,KAAS2N,YAC/BH,EAAc,IAAIxX,KAAKmW,SAASyB,YAAYpO,EAAK,CAAE4K,gBAAiBpU,KAAKmW,SAAS/B,sBAEjF,CAED,MAAMS,EAAU7U,KAAK6V,YAAYxD,gBAAgB7I,GAC3CuJ,EAAU,CAAC,EACjBA,EAAQlB,OAASgD,EACjB,MAAO/J,EAAM4L,IAAS,UACtB3D,EAAQjI,GAAQ4L,EAChBc,EAAc,IAAIxX,KAAKmW,SAASyB,YAAYpO,EAAK,CAAE4K,gBAAiBpU,KAAKmW,SAAS/B,gBAAiBrB,QAAS,IAAKA,KAAY/S,KAAKmW,SAASpD,UAC/I,CACA,IACIyE,EAAYK,UAAaxN,IACrB,GAAIrK,KAAKsI,UACL,IACItI,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,mCAAkC,QAAcnM,EAAEhJ,KAAMrB,KAAKmW,SAASa,uBACvGhX,KAAKsI,UAAU+B,EAAEhJ,KACrB,CACA,MAAO8B,GAEH,YADAnD,KAAK8X,OAAO3U,EAEhB,CACJ,EAGJqU,EAAY9B,QAAWrL,IAEfoN,EACAzX,KAAK8X,SAGL/S,EAAO,IAAItF,MAAM,gQAGrB,EAEJ+X,EAAYO,OAAS,KACjB/X,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,oBAAoBhL,KAAKuW,QAChEvW,KAAKgY,aAAeR,EACpBC,GAAS,EACT9S,GAAS,CAEjB,CACA,MAAO0F,GAEH,YADAtF,EAAOsF,EAEX,CAjDA,MAFItF,EAAO,IAAItF,MAAM,6EAmDrB,GAER,CACA,UAAMwF,CAAK5D,GACP,OAAKrB,KAAKgY,cAGH,QAAYhY,KAAK+H,QAAS,MAAO/H,KAAK6V,YAAa7V,KAAKuW,KAAMlV,EAAMrB,KAAKmW,UAFrEzR,QAAQK,OAAO,IAAItF,MAAM,gDAGxC,CACA,IAAAwG,GAEI,OADAjG,KAAK8X,SACEpT,QAAQC,SACnB,CACA,MAAAmT,CAAOzN,GACCrK,KAAKgY,eACLhY,KAAKgY,aAAaC,QAClBjY,KAAKgY,kBAAenR,EAChB7G,KAAKwI,SACLxI,KAAKwI,QAAQ6B,GAGzB,EC7FG,MAAM6N,EACT,WAAAxY,CAAYwW,EAAY1D,EAAoBhL,EAAQwP,EAAmBmB,EAAsBpF,GACzF/S,KAAK+H,QAAUP,EACfxH,KAAK0S,oBAAsBF,EAC3BxS,KAAKoY,mBAAqBpB,EAC1BhX,KAAKqY,sBAAwBF,EAC7BnY,KAAK6V,YAAcK,EACnBlW,KAAKsI,UAAY,KACjBtI,KAAKwI,QAAU,KACfxI,KAAKsY,SAAWvF,CACpB,CACA,aAAMsD,CAAQ7M,EAAKkB,GAKf,IAAI6N,EAIJ,OARA,KAAIrQ,WAAWsB,EAAK,OACpB,KAAItB,WAAWwC,EAAgB,kBAC/B,KAAI4L,KAAK5L,EAAgB,IAAgB,kBACzC1K,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,sCAE7BxW,KAAK0S,sBACL6F,QAAcvY,KAAK0S,uBAEhB,IAAIhO,SAAQ,CAACC,EAASI,KAEzB,IAAIyT,EADJhP,EAAMA,EAAIiP,QAAQ,QAAS,MAE3B,MAAM5D,EAAU7U,KAAK6V,YAAYxD,gBAAgB7I,GACjD,IAAIiO,GAAS,EACb,GAAI,KAASvE,QAAU,KAASwF,cAAe,CAC3C,MAAM3F,EAAU,CAAC,GACVjI,EAAM4L,IAAS,UACtB3D,EAAQjI,GAAQ4L,EACZ6B,IACAxF,EAAQpB,EAAYC,eAAiB,UAAU2G,KAE/C1D,IACA9B,EAAQpB,EAAYE,QAAUgD,GAGlC2D,EAAY,IAAIxY,KAAKqY,sBAAsB7O,OAAK3C,EAAW,CACvDkM,QAAS,IAAKA,KAAY/S,KAAKsY,WAEvC,MAEQC,IACA/O,IAAQA,EAAI7H,QAAQ,KAAO,EAAI,IAAM,KAAO,gBAAgB4V,mBAAmBgB,MAGlFC,IAEDA,EAAY,IAAIxY,KAAKqY,sBAAsB7O,IAE3CkB,IAAmB,IAAe+L,SAClC+B,EAAUG,WAAa,eAE3BH,EAAUT,OAAUa,IAChB5Y,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,0BAA0BxB,MACjExJ,KAAK6Y,WAAaL,EAClBf,GAAS,EACT9S,GAAS,EAEb6T,EAAU9C,QAAWoD,IACjB,IAAI3V,EAAQ,KAGRA,EADsB,oBAAf4V,YAA8BD,aAAiBC,WAC9CD,EAAM3V,MAGN,wCAEZnD,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,0BAA0B7H,KAAS,EAE9EqV,EAAUX,UAAaxX,IAEnB,GADAL,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,0CAAyC,QAAcnW,EAAQgB,KAAMrB,KAAKoY,wBACvGpY,KAAKsI,UACL,IACItI,KAAKsI,UAAUjI,EAAQgB,KAC3B,CACA,MAAO8B,GAEH,YADAnD,KAAK8X,OAAO3U,EAEhB,CACJ,EAEJqV,EAAUhQ,QAAWsQ,IAGjB,GAAIrB,EACAzX,KAAK8X,OAAOgB,OAEX,CACD,IAAI3V,EAAQ,KAGRA,EADsB,oBAAf4V,YAA8BD,aAAiBC,WAC9CD,EAAM3V,MAGN,iSAKZ4B,EAAO,IAAItF,MAAM0D,GACrB,EACH,GAET,CACA,IAAA8B,CAAK5D,GACD,OAAIrB,KAAK6Y,YAAc7Y,KAAK6Y,WAAWG,aAAehZ,KAAKqY,sBAAsBY,MAC7EjZ,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,yCAAwC,QAAcnV,EAAMrB,KAAKoY,wBAClGpY,KAAK6Y,WAAW5T,KAAK5D,GACdqD,QAAQC,WAEZD,QAAQK,OAAO,qCAC1B,CACA,IAAAkB,GAMI,OALIjG,KAAK6Y,YAGL7Y,KAAK8X,YAAOjR,GAETnC,QAAQC,SACnB,CACA,MAAAmT,CAAOgB,GAEC9Y,KAAK6Y,aAEL7Y,KAAK6Y,WAAWrQ,QAAU,OAC1BxI,KAAK6Y,WAAWhB,UAAY,OAC5B7X,KAAK6Y,WAAWnD,QAAU,OAC1B1V,KAAK6Y,WAAWZ,QAChBjY,KAAK6Y,gBAAahS,GAEtB7G,KAAK+H,QAAQC,IAAI,IAASwO,MAAO,yCAC7BxW,KAAKwI,WACDxI,KAAKkZ,cAAcJ,KAA8B,IAAnBA,EAAMK,UAAqC,MAAfL,EAAMM,KAG3DN,aAAiBrZ,MACtBO,KAAKwI,QAAQsQ,GAGb9Y,KAAKwI,UANLxI,KAAKwI,QAAQ,IAAI/I,MAAM,sCAAsCqZ,EAAMM,SAASN,EAAMO,QAAU,wBASxG,CACA,aAAAH,CAAcJ,GACV,OAAOA,GAAmC,kBAAnBA,EAAMK,UAAgD,iBAAfL,EAAMM,IACxE,EC3IG,MAAME,EACT,WAAA5Z,CAAY8J,EAAK2I,EAAU,CAAC,GASxB,GARAnS,KAAKuZ,qBAAuB,OAC5BvZ,KAAK4K,SAAW,CAAC,EACjB5K,KAAKwZ,kBAAoB,EACzB,KAAItR,WAAWsB,EAAK,OACpBxJ,KAAK+H,SAAU,OAAaoK,EAAQ3K,QACpCxH,KAAKuJ,QAAUvJ,KAAKyZ,YAAYjQ,IAChC2I,EAAUA,GAAW,CAAC,GACd6E,uBAAkDnQ,IAA9BsL,EAAQ6E,mBAA0C7E,EAAQ6E,kBAC/C,kBAA5B7E,EAAQiC,sBAA6DvN,IAA5BsL,EAAQiC,gBAIxD,MAAM,IAAI3U,MAAM,mEAHhB0S,EAAQiC,qBAA8CvN,IAA5BsL,EAAQiC,iBAAuCjC,EAAQiC,gBAKrFjC,EAAQ4B,aAA8BlN,IAApBsL,EAAQ4B,QAAwB,IAAa5B,EAAQ4B,QACvE,IAAI2F,EAAkB,KAClBC,EAAoB,KACxB,GAAI,KAASzG,OAA0C,CAGnD,MAAMC,EAA0D,QAChEuG,EAAkBvG,EAAY,MAC9BwG,EAAoBxG,EAAY,cACpC,CACK,KAASD,QAA+B,oBAAd0G,WAA8BzH,EAAQyH,UAG5D,KAAS1G,SAAWf,EAAQyH,WAC7BF,IACAvH,EAAQyH,UAAYF,GAJxBvH,EAAQyH,UAAYA,UAOnB,KAAS1G,QAAiC,oBAAhB0E,aAAgCzF,EAAQyF,YAG9D,KAAS1E,SAAWf,EAAQyF,kBACA,IAAtB+B,IACPxH,EAAQyF,YAAc+B,GAJ1BxH,EAAQyF,YAAcA,YAO1B5X,KAAK6V,YAAc,IAAIvD,EAAsBH,EAAQ+D,YAAc,IAAIN,EAAkB5V,KAAK+H,SAAUoK,EAAQK,oBAChHxS,KAAKiJ,iBAAmB,eACxBjJ,KAAKmJ,oBAAqB,EAC1BnJ,KAAKmW,SAAWhE,EAChBnS,KAAKsI,UAAY,KACjBtI,KAAKwI,QAAU,IACnB,CACA,WAAMkB,CAAMgB,GAIR,GAHAA,EAAiBA,GAAkB,IAAe+L,OAClD,KAAIH,KAAK5L,EAAgB,IAAgB,kBACzC1K,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,6CAA6C,IAAeY,QAC/D,iBAA1B1K,KAAKiJ,iBACL,OAAOvE,QAAQK,OAAO,IAAItF,MAAM,4EAMpC,GAJAO,KAAKiJ,iBAAmB,aACxBjJ,KAAK6Z,sBAAwB7Z,KAAK+J,eAAeW,SAC3C1K,KAAK6Z,sBAEmB,kBAA1B7Z,KAAKiJ,iBAA0E,CAE/E,MAAM5I,EAAU,+DAIhB,OAHAL,KAAK+H,QAAQC,IAAI,IAASvI,MAAOY,SAE3BL,KAAK2L,aACJjH,QAAQK,OAAO,IAAI,KAAW1E,GACzC,CACK,GAA8B,cAA1BL,KAAKiJ,iBAAkE,CAE5E,MAAM5I,EAAU,8GAEhB,OADAL,KAAK+H,QAAQC,IAAI,IAASvI,MAAOY,GAC1BqE,QAAQK,OAAO,IAAI,KAAW1E,GACzC,CACAL,KAAKmJ,oBAAqB,CAC9B,CACA,IAAAlE,CAAK5D,GACD,MAA8B,cAA1BrB,KAAKiJ,iBACEvE,QAAQK,OAAO,IAAItF,MAAM,yEAE/BO,KAAK8Z,aACN9Z,KAAK8Z,WAAa,IAAIC,EAAmB/Z,KAAKM,YAG3CN,KAAK8Z,WAAW7U,KAAK5D,GAChC,CACA,UAAM4E,CAAK9C,GACP,MAA8B,iBAA1BnD,KAAKiJ,kBACLjJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,+BAA+B3G,2EACzDuB,QAAQC,WAEW,kBAA1B3E,KAAKiJ,kBACLjJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,+BAA+B3G,4EACzDnD,KAAK2L,eAEhB3L,KAAKiJ,iBAAmB,gBACxBjJ,KAAK2L,aAAe,IAAIjH,SAASC,IAE7B3E,KAAKuZ,qBAAuB5U,CAAO,UAGjC3E,KAAK4L,cAAczI,cACnBnD,KAAK2L,aACf,CACA,mBAAMC,CAAczI,GAIhBnD,KAAKga,WAAa7W,EAClB,UACUnD,KAAK6Z,qBACf,CACA,MAAOxP,GAEP,CAIA,GAAIrK,KAAKM,UAAW,CAChB,UACUN,KAAKM,UAAU2F,MACzB,CACA,MAAOoE,GACHrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,gDAAgD4K,OACjFrK,KAAKia,iBACT,CACAja,KAAKM,eAAYuG,CACrB,MAEI7G,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,yFAEzC,CACA,oBAAMC,CAAeW,GAGjB,IAAIlB,EAAMxJ,KAAKuJ,QACfvJ,KAAK0S,oBAAsB1S,KAAKmW,SAAS3D,mBACzCxS,KAAK6V,YAAYnD,oBAAsB1S,KAAK0S,oBAC5C,IACI,GAAI1S,KAAKmW,SAAS+D,gBAAiB,CAC/B,GAAIla,KAAKmW,SAAS7V,YAAc,IAAkB6Z,WAQ9C,MAAM,IAAI1a,MAAM,gFANhBO,KAAKM,UAAYN,KAAKoa,oBAAoB,IAAkBD,kBAGtDna,KAAKqa,gBAAgB7Q,EAAKkB,EAKxC,KACK,CACD,IAAI4P,EAAoB,KACpBC,EAAY,EAChB,EAAG,CAGC,GAFAD,QAA0Bta,KAAKwa,wBAAwBhR,GAEzB,kBAA1BxJ,KAAKiJ,kBAAsG,iBAA1BjJ,KAAKiJ,iBACtF,MAAM,IAAI,KAAW,kDAEzB,GAAIqR,EAAkBnX,MAClB,MAAM,IAAI1D,MAAM6a,EAAkBnX,OAEtC,GAAImX,EAAkBG,gBAClB,MAAM,IAAIhb,MAAM,gMAKpB,GAHI6a,EAAkB9Q,MAClBA,EAAM8Q,EAAkB9Q,KAExB8Q,EAAkBhD,YAAa,CAG/B,MAAMA,EAAcgD,EAAkBhD,YACtCtX,KAAK0S,oBAAsB,IAAM4E,EAEjCtX,KAAK6V,YAAYhD,aAAeyE,EAChCtX,KAAK6V,YAAYnD,yBAAsB7L,CAC3C,CACA0T,GACJ,OAASD,EAAkB9Q,KAAO+Q,EArL5B,KAsLN,GAtLM,MAsLFA,GAA+BD,EAAkB9Q,IACjD,MAAM,IAAI/J,MAAM,+CAEdO,KAAK0a,iBAAiBlR,EAAKxJ,KAAKmW,SAAS7V,UAAWga,EAAmB5P,EACjF,CACI1K,KAAKM,qBAAqByV,IAC1B/V,KAAK4K,SAASY,mBAAoB,GAER,eAA1BxL,KAAKiJ,mBAGLjJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,8CACjC9J,KAAKiJ,iBAAmB,YAKhC,CACA,MAAOoB,GAMH,OALArK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,mCAAqC4K,GACtErK,KAAKiJ,iBAAmB,eACxBjJ,KAAKM,eAAYuG,EAEjB7G,KAAKuZ,uBACE7U,QAAQK,OAAOsF,EAC1B,CACJ,CACA,6BAAMmQ,CAAwBhR,GAC1B,MAAMuJ,EAAU,CAAC,GACVjI,EAAM4L,IAAS,UACtB3D,EAAQjI,GAAQ4L,EAChB,MAAMiE,EAAe3a,KAAK4a,qBAAqBpR,GAC/CxJ,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,gCAAgC6Q,MACjE,IACI,MAAM/X,QAAiB5C,KAAK6V,YAAYzD,KAAKuI,EAAc,CACvD3I,QAAS,GACTe,QAAS,IAAKA,KAAY/S,KAAKmW,SAASpD,SACxCgB,QAAS/T,KAAKmW,SAASpC,QACvBK,gBAAiBpU,KAAKmW,SAAS/B,kBAEnC,GAA4B,MAAxBxR,EAAShD,WACT,OAAO8E,QAAQK,OAAO,IAAItF,MAAM,mDAAmDmD,EAAShD,gBAEhG,MAAM0a,EAAoBpZ,KAAKyB,MAAMC,EAASoP,SAM9C,QALKsI,EAAkBO,kBAAoBP,EAAkBO,iBAAmB,KAG5EP,EAAkBQ,gBAAkBR,EAAkBhR,cAEtDgR,EAAkBS,uBAAgE,IAAxC/a,KAAKmW,SAAS6E,sBACjDtW,QAAQK,OAAO,IAAI,KAAiC,mEAExDuV,CACX,CACA,MAAOjQ,GACH,IAAI1K,EAAe,mDAAqD0K,EAOxE,OANIA,aAAa,MACQ,MAAjBA,EAAEzK,aACFD,GAA8B,uFAGtCK,KAAK+H,QAAQC,IAAI,IAASvI,MAAOE,GAC1B+E,QAAQK,OAAO,IAAI,KAAiCpF,GAC/D,CACJ,CACA,iBAAAsb,CAAkBzR,EAAKsR,GACnB,OAAKA,EAGEtR,IAA6B,IAAtBA,EAAI7H,QAAQ,KAAc,IAAM,KAAO,MAAMmZ,IAFhDtR,CAGf,CACA,sBAAMkR,CAAiBlR,EAAK0R,EAAoBZ,EAAmBa,GAC/D,IAAIC,EAAapb,KAAKib,kBAAkBzR,EAAK8Q,EAAkBQ,iBAC/D,GAAI9a,KAAKqb,cAAcH,GAKnB,OAJAlb,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,2EACjC9J,KAAKM,UAAY4a,QACXlb,KAAKqa,gBAAgBe,EAAYD,QACvCnb,KAAKsJ,aAAegR,EAAkBhR,cAG1C,MAAMgS,EAAsB,GACtBC,EAAajB,EAAkBkB,qBAAuB,GAC5D,IAAIC,EAAYnB,EAChB,IAAK,MAAMoB,KAAYH,EAAY,CAC/B,MAAMI,EAAmB3b,KAAK4b,yBAAyBF,EAAUR,EAAoBC,GAAoH,KAA1FM,aAA6C,EAASA,EAAUV,uBAC/K,GAAIY,aAA4Blc,MAE5B6b,EAAoB/X,KAAK,GAAGmY,EAASpb,qBACrCgb,EAAoB/X,KAAKoY,QAExB,GAAI3b,KAAKqb,cAAcM,GAAmB,CAE3C,GADA3b,KAAKM,UAAYqb,GACZF,EAAW,CACZ,IACIA,QAAkBzb,KAAKwa,wBAAwBhR,EACnD,CACA,MAAOqS,GACH,OAAOnX,QAAQK,OAAO8W,EAC1B,CACAT,EAAapb,KAAKib,kBAAkBzR,EAAKiS,EAAUX,gBACvD,CACA,IAGI,aAFM9a,KAAKqa,gBAAgBe,EAAYD,QACvCnb,KAAKsJ,aAAemS,EAAUnS,aAElC,CACA,MAAOuS,GAIH,GAHA7b,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,kCAAkCic,EAASpb,eAAeub,KAC3FJ,OAAY5U,EACZyU,EAAoB/X,KAAK,IAAI,KAA4B,GAAGmY,EAASpb,qBAAqBub,IAAM,IAAkBH,EAASpb,aAC7F,eAA1BN,KAAKiJ,iBAAoE,CACzE,MAAM5I,EAAU,uDAEhB,OADAL,KAAK+H,QAAQC,IAAI,IAAS8B,MAAOzJ,GAC1BqE,QAAQK,OAAO,IAAI,KAAW1E,GACzC,CACJ,CACJ,CACJ,CACA,OAAIib,EAAoB7Y,OAAS,EACtBiC,QAAQK,OAAO,IAAI,KAAgB,yEAAyEuW,EAAoBvG,KAAK,OAAQuG,IAEjJ5W,QAAQK,OAAO,IAAItF,MAAM,+EACpC,CACA,mBAAA2a,CAAoB9Z,GAChB,OAAQA,GACJ,KAAK,IAAkB6Z,WACnB,IAAKna,KAAKmW,SAASyD,UACf,MAAM,IAAIna,MAAM,qDAEpB,OAAO,IAAIyY,EAAmBlY,KAAK6V,YAAa7V,KAAK0S,oBAAqB1S,KAAK+H,QAAS/H,KAAKmW,SAASa,kBAAmBhX,KAAKmW,SAASyD,UAAW5Z,KAAKmW,SAASpD,SAAW,CAAC,GAChL,KAAK,IAAkB+I,iBACnB,IAAK9b,KAAKmW,SAASyB,YACf,MAAM,IAAInY,MAAM,uDAEpB,OAAO,IAAI4X,EAA0BrX,KAAK6V,YAAa7V,KAAK6V,YAAYhD,aAAc7S,KAAK+H,QAAS/H,KAAKmW,UAC7G,KAAK,IAAkB4F,YACnB,OAAO,IAAIhG,EAAqB/V,KAAK6V,YAAa7V,KAAK+H,QAAS/H,KAAKmW,UACzE,QACI,MAAM,IAAI1W,MAAM,sBAAsBa,MAElD,CACA,eAAA+Z,CAAgB7Q,EAAKkB,GA2BjB,OA1BA1K,KAAKM,UAAUgI,UAAYtI,KAAKsI,UAC5BtI,KAAK4K,SAASC,UACd7K,KAAKM,UAAUkI,QAAUxB,MAAOqD,IAC5B,IAAI2R,GAAW,EACf,GAAIhc,KAAK4K,SAASC,UAAlB,CACI,IACI7K,KAAK4K,SAASS,qBACRrL,KAAKM,UAAU+V,QAAQ7M,EAAKkB,SAC5B1K,KAAK4K,SAASW,QACxB,CACA,MACIyQ,GAAW,CACf,CAMAA,GACAhc,KAAKia,gBAAgB5P,EAFzB,MAFIrK,KAAKia,gBAAgB5P,EAKzB,EAIJrK,KAAKM,UAAUkI,QAAW6B,GAAMrK,KAAKia,gBAAgB5P,GAElDrK,KAAKM,UAAU+V,QAAQ7M,EAAKkB,EACvC,CACA,wBAAAkR,CAAyBF,EAAUR,EAAoBC,EAAyBJ,GAC5E,MAAMza,EAAY,IAAkBob,EAASpb,WAC7C,GAAIA,QAEA,OADAN,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,uBAAuB4R,EAASpb,0DAC1D,IAAIb,MAAM,uBAAuBic,EAASpb,0DAGjD,IAwHZ,SAA0B4a,EAAoBe,GAC1C,OAAQf,MAAwBe,EAAkBf,EACtD,CA1HgBgB,CAAiBhB,EAAoB5a,GA0BrC,OADAN,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,uBAAuB,IAAkBxJ,8CACnE,IAAI,KAAuB,IAAI,IAAkBA,iCAA0CA,GAxBlG,KADwBob,EAASS,gBAAgBC,KAAKC,GAAM,IAAeA,KACvD1a,QAAQwZ,IAA4B,GAmBpD,OADAnb,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,uBAAuB,IAAkBxJ,kEAA0E,IAAe6a,QAC5J,IAAI1b,MAAM,IAAI,IAAkBa,wBAAgC,IAAe6a,OAlBtF,GAAK7a,IAAc,IAAkB6Z,aAAena,KAAKmW,SAASyD,WAC7DtZ,IAAc,IAAkBwb,mBAAqB9b,KAAKmW,SAASyB,YAEpE,OADA5X,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,uBAAuB,IAAkBxJ,yDACnE,IAAI,KAA0B,IAAI,IAAkBA,4CAAqDA,GAGhHN,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,wBAAwB,IAAkBxJ,QAC3E,IAEI,OADAN,KAAK4K,SAASC,UAAYvK,IAAc,IAAkB6Z,WAAaY,OAAuBlU,EACvF7G,KAAKoa,oBAAoB9Z,EACpC,CACA,MAAOub,GACH,OAAOA,CACX,CAapB,CACA,aAAAR,CAAc/a,GACV,OAAOA,GAAoC,iBAAhB,GAA4B,YAAaA,CACxE,CACA,eAAA2Z,CAAgB9W,GAMZ,GALAnD,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,iCAAiC3G,4BAAgCnD,KAAKiJ,qBACvGjJ,KAAKM,eAAYuG,EAEjB1D,EAAQnD,KAAKga,YAAc7W,EAC3BnD,KAAKga,gBAAanT,EACY,iBAA1B7G,KAAKiJ,iBAAT,CAIA,GAA8B,eAA1BjJ,KAAKiJ,iBAEL,MADAjJ,KAAK+H,QAAQC,IAAI,IAASC,QAAS,yCAAyC9E,2EACtE,IAAI1D,MAAM,iCAAiC0D,wEAqBrD,GAnB8B,kBAA1BnD,KAAKiJ,kBAGLjJ,KAAKuZ,uBAELpW,EACAnD,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,uCAAuC0D,OAGxEnD,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,4BAEvChL,KAAK8Z,aACL9Z,KAAK8Z,WAAW7T,OAAOkH,OAAO9C,IAC1BrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,0CAA0C4K,MAAM,IAErFrK,KAAK8Z,gBAAajT,GAEtB7G,KAAKsJ,kBAAezC,EACpB7G,KAAKiJ,iBAAmB,eACpBjJ,KAAKmJ,mBAAoB,CACzBnJ,KAAKmJ,oBAAqB,EAC1B,IACQnJ,KAAKwI,SACLxI,KAAKwI,QAAQrF,EAErB,CACA,MAAOkH,GACHrK,KAAK+H,QAAQC,IAAI,IAASvI,MAAO,0BAA0B0D,mBAAuBkH,MACtF,CACJ,CAlCA,MAFIrK,KAAK+H,QAAQC,IAAI,IAAS8B,MAAO,yCAAyC3G,8EAqClF,CACA,WAAAsW,CAAYjQ,GAER,GAAuC,IAAnCA,EAAI8S,YAAY,WAAY,IAA8C,IAAlC9S,EAAI8S,YAAY,UAAW,GACnE,OAAO9S,EAEX,IAAK,KAASQ,UACV,MAAM,IAAIvK,MAAM,mBAAmB+J,OAOvC,MAAM+S,EAAOtS,OAAOC,SAASsS,cAAc,KAG3C,OAFAD,EAAKE,KAAOjT,EACZxJ,KAAK+H,QAAQC,IAAI,IAASgD,YAAa,gBAAgBxB,UAAY+S,EAAKE,UACjEF,EAAKE,IAChB,CACA,oBAAA7B,CAAqBpR,GACjB,MAAMmR,EAAe,IAAI+B,IAAIlT,GACzBmR,EAAagC,SAASC,SAAS,KAC/BjC,EAAagC,UAAY,YAGzBhC,EAAagC,UAAY,aAE7B,MAAME,EAAe,IAAIC,gBAAgBnC,EAAakC,cAatD,OAZKA,EAAaE,IAAI,qBAClBF,EAAaG,OAAO,mBAAoBhd,KAAKwZ,kBAAkBlJ,YAE/DuM,EAAaE,IAAI,wBACgC,SAA7CF,EAAa3K,IAAI,0BACjBlS,KAAKmW,SAAS6E,uBAAwB,IAGG,IAAxChb,KAAKmW,SAAS6E,uBACnB6B,EAAaG,OAAO,uBAAwB,QAEhDrC,EAAasC,OAASJ,EAAavM,WAC5BqK,EAAarK,UACxB,EAMG,MAAMyJ,EACT,WAAAra,CAAYwd,GACRld,KAAKkd,WAAaA,EAClBld,KAAKmd,QAAU,GACfnd,KAAKod,YAAa,EAClBpd,KAAKqd,kBAAoB,IAAIC,EAC7Btd,KAAKud,iBAAmB,IAAID,EAC5Btd,KAAKwd,iBAAmBxd,KAAKyd,WACjC,CACA,IAAAxY,CAAK5D,GAKD,OAJArB,KAAK0d,YAAYrc,GACZrB,KAAKud,mBACNvd,KAAKud,iBAAmB,IAAID,GAEzBtd,KAAKud,iBAAiBI,OACjC,CACA,IAAA1X,GAGI,OAFAjG,KAAKod,YAAa,EAClBpd,KAAKqd,kBAAkB1Y,UAChB3E,KAAKwd,gBAChB,CACA,WAAAE,CAAYrc,GACR,GAAIrB,KAAKmd,QAAQ1a,eAAkBzC,KAAKmd,QAAQ,WAAe,EAC3D,MAAM,IAAI1d,MAAM,sCAAuCO,KAAY,kCAA4B,KAEnGA,KAAKmd,QAAQ5Z,KAAKlC,GAClBrB,KAAKqd,kBAAkB1Y,SAC3B,CACA,eAAM8Y,GACF,OAAa,CAET,SADMzd,KAAKqd,kBAAkBM,SACxB3d,KAAKod,WAAY,CACdpd,KAAKud,kBACLvd,KAAKud,iBAAiBxY,OAAO,uBAEjC,KACJ,CACA/E,KAAKqd,kBAAoB,IAAIC,EAC7B,MAAMM,EAAkB5d,KAAKud,iBAC7Bvd,KAAKud,sBAAmB1W,EACxB,MAAMxF,EAAoC,iBAArBrB,KAAKmd,QAAQ,GAC9Bnd,KAAKmd,QAAQpI,KAAK,IAClBgF,EAAmB8D,eAAe7d,KAAKmd,SAC3Cnd,KAAKmd,QAAQ1a,OAAS,EACtB,UACUzC,KAAKkd,WAAWjY,KAAK5D,GAC3Buc,EAAgBjZ,SACpB,CACA,MAAOxB,GACHya,EAAgB7Y,OAAO5B,EAC3B,CACJ,CACJ,CACA,qBAAO0a,CAAeC,GAClB,MAAMC,EAAcD,EAAa1B,KAAK4B,GAAMA,EAAE5b,aAAY6b,QAAO,CAACC,EAAGF,IAAME,EAAIF,IACzExQ,EAAS,IAAI/L,WAAWsc,GAC9B,IAAII,EAAS,EACb,IAAK,MAAMlb,KAAQ6a,EACftQ,EAAO4Q,IAAI,IAAI3c,WAAWwB,GAAOkb,GACjCA,GAAUlb,EAAKb,WAEnB,OAAOoL,EAAOnL,MAClB,EAEJ,MAAMib,EACF,WAAA5d,GACIM,KAAK2d,QAAU,IAAIjZ,SAAQ,CAACC,EAASI,KAAY/E,KAAK2F,UAAW3F,KAAKqe,WAAa,CAAC1Z,EAASI,IACjG,CACA,OAAAJ,GACI3E,KAAK2F,WACT,CACA,MAAAZ,CAAOsU,GACHrZ,KAAKqe,UAAUhF,EACnB,E,4CC9iBG,MAAMiF,EACT,WAAA5e,GAEIM,KAAK8K,KALkB,OAOvB9K,KAAK2K,QAAU,EAEf3K,KAAK0K,eAAiB,IAAegN,IACzC,CAMA,aAAArJ,CAAckQ,EAAO/W,GAEjB,GAAqB,iBAAV+W,EACP,MAAM,IAAI9e,MAAM,2DAEpB,IAAK8e,EACD,MAAO,GAEI,OAAX/W,IACAA,EAAS,IAAWgX,UAGxB,MAAM9b,EAAW1B,EAAA,EAAkB2B,MAAM4b,GACnCE,EAAc,GACpB,IAAK,MAAMpe,KAAWqC,EAAU,CAC5B,MAAMgc,EAAgBxd,KAAKyB,MAAMtC,GACjC,GAAkC,iBAAvBqe,EAAc7b,KACrB,MAAM,IAAIpD,MAAM,oBAEpB,OAAQif,EAAc7b,MAClB,KAAK,IAAYwD,WACbrG,KAAK4E,qBAAqB8Z,GAC1B,MACJ,KAAK,IAAYpY,WACbtG,KAAK2e,qBAAqBD,GAC1B,MACJ,KAAK,IAAYnY,WACbvG,KAAK4e,qBAAqBF,GAC1B,MACJ,KAAK,IAAY/X,KAGjB,KAAK,IAAYD,MAEb,MACJ,KAAK,IAAYE,IACb5G,KAAK6e,cAAcH,GACnB,MACJ,KAAK,IAAY7Y,SACb7F,KAAK8e,mBAAmBJ,GACxB,MACJ,QAEIlX,EAAOQ,IAAI,IAASgD,YAAa,yBAA2B0T,EAAc7b,KAAO,cACjF,SAER4b,EAAYlb,KAAKmb,EACrB,CACA,OAAOD,CACX,CAMA,YAAAja,CAAanE,GACT,OAAOW,EAAA,EAAkBC,MAAMC,KAAKC,UAAUd,GAClD,CACA,oBAAAuE,CAAqBvE,GACjBL,KAAK+e,sBAAsB1e,EAAQ2O,OAAQ,gDACdnI,IAAzBxG,EAAQ2M,cACRhN,KAAK+e,sBAAsB1e,EAAQ2M,aAAc,0CAEzD,CACA,oBAAA2R,CAAqBte,GAEjB,GADAL,KAAK+e,sBAAsB1e,EAAQ2M,aAAc,gDAC5BnG,IAAjBxG,EAAQ4C,KACR,MAAM,IAAIxD,MAAM,0CAExB,CACA,oBAAAmf,CAAqBve,GACjB,GAAIA,EAAQmN,QAAUnN,EAAQ8C,MAC1B,MAAM,IAAI1D,MAAM,4CAEfY,EAAQmN,QAAUnN,EAAQ8C,OAC3BnD,KAAK+e,sBAAsB1e,EAAQ8C,MAAO,2CAE9CnD,KAAK+e,sBAAsB1e,EAAQ2M,aAAc,0CACrD,CACA,aAAA6R,CAAcxe,GACV,GAAkC,iBAAvBA,EAAQoF,WACf,MAAM,IAAIhG,MAAM,sCAExB,CACA,kBAAAqf,CAAmBze,GACf,GAAkC,iBAAvBA,EAAQoF,WACf,MAAM,IAAIhG,MAAM,2CAExB,CACA,qBAAAsf,CAAsBrI,EAAO/W,GACzB,GAAqB,iBAAV+W,GAAgC,KAAVA,EAC7B,MAAM,IAAIjX,MAAME,EAExB,EC3GJ,MAAMqf,EAAsB,CACxBC,MAAO,IAASzI,MAChB0I,MAAO,IAASpV,MAChBqV,KAAM,IAASnU,YACfoU,YAAa,IAASpU,YACtBqU,KAAM,IAASpX,QACfqX,QAAS,IAASrX,QAClB9E,MAAO,IAAS1D,MAChB8f,SAAU,IAASC,SACnBC,KAAM,IAASC,MAeZ,MAAMC,EACT,gBAAAC,CAAiBC,GAEb,GADA,KAAI3X,WAAW2X,EAAS,gBA0GNhZ,IAzGLgZ,EAyGH7X,IAxGNhI,KAAKwH,OAASqY,OAEb,GAAuB,iBAAZA,EAAsB,CAClC,MAAMC,EApBlB,SAAuBhV,GAInB,MAAMiV,EAAUf,EAAoBlU,EAAK6C,eACzC,QAAuB,IAAZoS,EACP,OAAOA,EAGP,MAAM,IAAItgB,MAAM,sBAAsBqL,IAE9C,CAS6BkV,CAAcH,GAC/B7f,KAAKwH,OAAS,IAAI,KAAcsY,EACpC,MAEI9f,KAAKwH,OAAS,IAAI,KAAcqY,GAEpC,OAAO7f,IACX,CACA,OAAAigB,CAAQzW,EAAK0W,GAeT,OAdA,KAAIhY,WAAWsB,EAAK,OACpB,KAAI2W,WAAW3W,EAAK,OACpBxJ,KAAKwJ,IAAMA,EAIPxJ,KAAKogB,sBAD6B,iBAA3BF,EACsB,IAAKlgB,KAAKogB,yBAA0BF,GAGpC,IACtBlgB,KAAKogB,sBACR9f,UAAW4f,GAGZlgB,IACX,CAKA,eAAAqgB,CAAgB5c,GAGZ,OAFA,KAAIyE,WAAWzE,EAAU,YACzBzD,KAAKyD,SAAWA,EACTzD,IACX,CACA,sBAAAsgB,CAAuBC,GACnB,GAAIvgB,KAAKyH,gBACL,MAAM,IAAIhI,MAAM,2CAWpB,OATK8gB,EAGIte,MAAMue,QAAQD,GACnBvgB,KAAKyH,gBAAkB,IAAI8J,EAAuBgP,GAGlDvgB,KAAKyH,gBAAkB8Y,EANvBvgB,KAAKyH,gBAAkB,IAAI8J,EAQxBvR,IACX,CAKA,iBAAAygB,CAAkBC,GAGd,OAFA,KAAIxY,WAAWwY,EAAc,gBAC7B1gB,KAAK2gB,6BAA+BD,EAC7B1gB,IACX,CAKA,qBAAA4gB,CAAsBF,GAGlB,OAFA,KAAIxY,WAAWwY,EAAc,gBAC7B1gB,KAAK6gB,iCAAmCH,EACjC1gB,IACX,CAKA,qBAAA8gB,CAAsB3O,GAMlB,YALmCtL,IAA/B7G,KAAKogB,wBACLpgB,KAAKogB,sBAAwB,CAAC,GAElCpgB,KAAKogB,sBAAsBpF,uBAAwB,EACnDhb,KAAKmI,6BAA+BgK,aAAyC,EAASA,EAAQxO,WACvF3D,IACX,CAKA,KAAA+gB,GAGI,MAAMX,EAAwBpgB,KAAKogB,uBAAyB,CAAC,EAO7D,QALqCvZ,IAAjCuZ,EAAsB5Y,SAEtB4Y,EAAsB5Y,OAASxH,KAAKwH,SAGnCxH,KAAKwJ,IACN,MAAM,IAAI/J,MAAM,4FAEpB,MAAMiE,EAAa,IAAI4V,EAAetZ,KAAKwJ,IAAK4W,GAChD,OAAO9Y,EAAA,EAAcC,OAAO7D,EAAY1D,KAAKwH,QAAU,IAAWgX,SAAUxe,KAAKyD,UAAY,IAAI6a,EAAmBte,KAAKyH,gBAAiBzH,KAAK2gB,6BAA8B3gB,KAAK6gB,iCAAkC7gB,KAAKmI,6BAC7N,E,oCCvIG,IAAI6Y,E,gCACX,SAAWA,GAEPA,EAAYA,EAAwB,WAAI,GAAK,aAE7CA,EAAYA,EAAwB,WAAI,GAAK,aAE7CA,EAAYA,EAAwB,WAAI,GAAK,aAE7CA,EAAYA,EAA8B,iBAAI,GAAK,mBAEnDA,EAAYA,EAA8B,iBAAI,GAAK,mBAEnDA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAmB,MAAI,GAAK,QACxCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAsB,SAAI,GAAK,UAC9C,CAjBD,CAiBGA,IAAgBA,EAAc,CAAC,G,mCCd3B,IAAIC,E,gCACX,SAAWA,GAEPA,EAASA,EAAgB,MAAI,GAAK,QAElCA,EAASA,EAAgB,MAAI,GAAK,QAElCA,EAASA,EAAsB,YAAI,GAAK,cAExCA,EAASA,EAAkB,QAAI,GAAK,UAEpCA,EAASA,EAAgB,MAAI,GAAK,QAElCA,EAASA,EAAmB,SAAI,GAAK,WAErCA,EAASA,EAAe,KAAI,GAAK,MACpC,CAfD,CAeGA,IAAaA,EAAW,CAAC,G,oCCnBrB,IAAIC,EAYAC,E,uDAXX,SAAWD,GAEPA,EAAkBA,EAAwB,KAAI,GAAK,OAEnDA,EAAkBA,EAA8B,WAAI,GAAK,aAEzDA,EAAkBA,EAAoC,iBAAI,GAAK,mBAE/DA,EAAkBA,EAA+B,YAAI,GAAK,aAC7D,CATD,CASGA,IAAsBA,EAAoB,CAAC,IAG9C,SAAWC,GAEPA,EAAeA,EAAqB,KAAI,GAAK,OAE7CA,EAAeA,EAAuB,OAAI,GAAK,QAClD,CALD,CAKGA,IAAmBA,EAAiB,CAAC,G,oECnBjC,MAAMC,EACT,WAAA1hB,GAAgB,CAGhB,GAAAsI,CAAIqZ,EAAW3b,GACf,EAGJ0b,EAAW5C,SAAW,IAAI4C,C,oECPnB,MAAMpgB,EACT,YAAOC,CAAMqgB,GACT,MAAO,GAAGA,IAAStgB,EAAkBuB,iBACzC,CACA,YAAOI,CAAM4b,GACT,GAAIA,EAAMA,EAAM9b,OAAS,KAAOzB,EAAkBuB,gBAC9C,MAAM,IAAI9C,MAAM,0BAEpB,MAAMiD,EAAW6b,EAAMgD,MAAMvgB,EAAkBuB,iBAE/C,OADAG,EAAS8e,MACF9e,CACX,EAEJ1B,EAAkBY,oBAAsB,GACxCZ,EAAkBuB,gBAAkBT,OAAOC,aAAaf,EAAkBY,oB,2UCZnE,MAAM6f,EAAU,QAEhB,MAAMC,EACT,iBAAOxZ,CAAWyZ,EAAK7W,GACnB,GAAI6W,QACA,MAAM,IAAIliB,MAAM,QAAQqL,2BAEhC,CACA,iBAAOqV,CAAWwB,EAAK7W,GACnB,IAAK6W,GAAOA,EAAIC,MAAM,SAClB,MAAM,IAAIniB,MAAM,QAAQqL,mCAEhC,CACA,WAAOwL,CAAKqL,EAAKE,EAAQ/W,GAErB,KAAM6W,KAAOE,GACT,MAAM,IAAIpiB,MAAM,WAAWqL,YAAe6W,KAElD,EAGG,MAAMG,EAET,oBAAW9X,GACP,OAAQ8X,EAAS5O,QAA4B,iBAAXjJ,QAAkD,iBAApBA,OAAOC,QAC3E,CAEA,sBAAWyN,GACP,OAAQmK,EAAS5O,QAA0B,iBAAT6O,MAAqB,kBAAmBA,IAC9E,CAEA,wBAAWrJ,GACP,OAAQoJ,EAAS5O,QAA4B,iBAAXjJ,aAAkD,IAApBA,OAAOC,QAC3E,CAGA,iBAAWgJ,GACP,MAA0B,oBAAZ8O,SAA2BA,QAAQC,SAAoC,SAAzBD,QAAQC,QAAQnX,IAChF,EAGG,SAASoX,EAAc7gB,EAAM8gB,GAChC,IAAIC,EAAS,GAab,OAZIC,EAAchhB,IACd+gB,EAAS,yBAAyB/gB,EAAKe,aACnC+f,IACAC,GAAU,eAYf,SAA2B/gB,GAC9B,MAAMihB,EAAO,IAAI7gB,WAAWJ,GAE5B,IAAIkhB,EAAM,GAMV,OALAD,EAAKxS,SAAS0S,IAEVD,GAAO,KADKC,EAAM,GAAK,IAAM,KACXA,EAAIlS,SAAS,MAAM,IAGlCiS,EAAIE,OAAO,EAAGF,EAAI9f,OAAS,EACtC,CAtBqCigB,CAAkBrhB,QAG1B,iBAATA,IACZ+gB,EAAS,yBAAyB/gB,EAAKoB,SACnC0f,IACAC,GAAU,eAAe/gB,OAG1B+gB,CACX,CAeO,SAASC,EAAcV,GAC1B,OAAOA,GAA8B,oBAAhBgB,cAChBhB,aAAegB,aAEXhB,EAAIjiB,aAAwC,gBAAzBiiB,EAAIjiB,YAAYoL,KAChD,CAEO9D,eAAe4b,EAAYpb,EAAQqb,EAAe3M,EAAY1M,EAAKwI,EAASG,GAC/E,MAAMY,EAAU,CAAC,GACVjI,EAAM4L,GAASoM,IACtB/P,EAAQjI,GAAQ4L,EAChBlP,EAAOQ,IAAI,IAASwO,MAAO,IAAIqM,8BAA0CX,EAAclQ,EAASG,EAAQ6E,uBACxG,MAAMrC,EAAe0N,EAAcrQ,GAAW,cAAgB,OACxDpP,QAAiBsT,EAAW9D,KAAK5I,EAAK,CACxCwI,UACAe,QAAS,IAAKA,KAAYZ,EAAQY,SAClC4B,eACAZ,QAAS5B,EAAQ4B,QACjBK,gBAAiBjC,EAAQiC,kBAE7B5M,EAAOQ,IAAI,IAASwO,MAAO,IAAIqM,mDAA+DjgB,EAAShD,cAC3G,CAEO,SAASmjB,EAAavb,GACzB,YAAeX,IAAXW,EACO,IAAIwb,EAAc,IAAShY,aAEvB,OAAXxD,EACO,IAAWgX,cAEH3X,IAAfW,EAAOQ,IACAR,EAEJ,IAAIwb,EAAcxb,EAC7B,CAEO,MAAMyb,EACT,WAAAvjB,CAAYkN,EAAS1J,GACjBlD,KAAKkjB,SAAWtW,EAChB5M,KAAKmjB,UAAYjgB,CACrB,CACA,OAAAkgB,GACI,MAAM9d,EAAQtF,KAAKkjB,SAASngB,UAAUpB,QAAQ3B,KAAKmjB,WAC/C7d,GAAS,GACTtF,KAAKkjB,SAASngB,UAAUiL,OAAO1I,EAAO,GAEH,IAAnCtF,KAAKkjB,SAASngB,UAAUN,QAAgBzC,KAAKkjB,SAASrW,gBACtD7M,KAAKkjB,SAASrW,iBAAiBM,OAAOkW,IAAD,GAE7C,EAGG,MAAML,EACT,WAAAtjB,CAAY4jB,GACRtjB,KAAKujB,UAAYD,EACjBtjB,KAAKwjB,IAAMC,OACf,CACA,GAAAzb,CAAI8X,EAAUzf,GACV,GAAIyf,GAAY9f,KAAKujB,UAAW,CAC5B,MAAMG,EAAM,KAAI,IAAIjV,MAAOkV,kBAAkB,IAAS7D,OAAczf,IACpE,OAAQyf,GACJ,KAAK,IAASN,SACd,KAAK,IAAS/f,MACVO,KAAKwjB,IAAIrgB,MAAMugB,GACf,MACJ,KAAK,IAASzb,QACVjI,KAAKwjB,IAAInE,KAAKqE,GACd,MACJ,KAAK,IAAS1Y,YACVhL,KAAKwjB,IAAIrE,KAAKuE,GACd,MACJ,QAEI1jB,KAAKwjB,IAAIxb,IAAI0b,GAGzB,CACJ,EAGG,SAASZ,IACZ,IAAIc,EAAsB,uBAI1B,OAHI9B,EAAS5O,SACT0Q,EAAsB,cAEnB,CAACA,EAAqBC,EAAmBpC,EAASqC,IAAaC,IAAcC,KACxF,CAEO,SAASH,EAAmBlZ,EAASsZ,EAAIC,EAASC,GAErD,IAAIC,EAAY,qBAChB,MAAMC,EAAgB1Z,EAAQ4W,MAAM,KAiBpC,OAhBA6C,GAAa,GAAGC,EAAc,MAAMA,EAAc,KAClDD,GAAa,KAAKzZ,MAEdyZ,GADAH,GAAa,KAAPA,EACO,GAAGA,MAGH,eAEjBG,GAAa,GAAGF,IAEZE,GADAD,EACa,KAAKA,IAGL,4BAEjBC,GAAa,IACNA,CACX,CAEc,SAASN,IACnB,IAAIhC,EAAS5O,OAaT,MAAO,GAZP,OAAQ8O,QAAQsC,UACZ,IAAK,QACD,MAAO,aACX,IAAK,SACD,MAAO,QACX,IAAK,QACD,MAAO,QACX,QACI,OAAOtC,QAAQsC,SAM/B,CAEc,SAASN,IACnB,GAAIlC,EAAS5O,OACT,OAAO8O,QAAQuC,SAASC,IAGhC,CACA,SAAST,IACL,OAAIjC,EAAS5O,OACF,SAGA,SAEf,CAEO,SAASuR,EAAepa,GAC3B,OAAIA,EAAEqa,MACKra,EAAEqa,MAEJra,EAAEhK,QACAgK,EAAEhK,QAEN,GAAGgK,GACd,CAEO,SAASsa,IAEZ,GAA0B,oBAAfC,WACP,OAAOA,WAEX,GAAoB,oBAAT7C,KACP,OAAOA,KAEX,GAAsB,oBAAX9X,OACP,OAAOA,OAEX,QAAsB,IAAX,EAAA4a,EACP,OAAO,EAAAA,EAEX,MAAM,IAAIplB,MAAM,wBACpB,C,uBCtPA,MAAMqlB,EAAMC,OAAO,cAEnB,MAAMC,EACJ,cAAWF,GACT,OAAOA,CACT,CAEA,WAAAplB,CAAaulB,EAAM9S,GAGjB,GAFAA,EAAU+S,EAAa/S,GAEnB8S,aAAgBD,EAAY,CAC9B,GAAIC,EAAKE,UAAYhT,EAAQgT,MAC3B,OAAOF,EAEPA,EAAOA,EAAKvO,KAEhB,CAEAuO,EAAOA,EAAKG,OAAO7D,MAAM,OAAOxM,KAAK,KACrCmK,EAAM,aAAc+F,EAAM9S,GAC1BnS,KAAKmS,QAAUA,EACfnS,KAAKmlB,QAAUhT,EAAQgT,MACvBnlB,KAAK2C,MAAMsiB,GAEPjlB,KAAKqlB,SAAWP,EAClB9kB,KAAK0W,MAAQ,GAEb1W,KAAK0W,MAAQ1W,KAAKslB,SAAWtlB,KAAKqlB,OAAO1a,QAG3CuU,EAAM,OAAQlf,KAChB,CAEA,KAAA2C,CAAOsiB,GACL,MAAMM,EAAIvlB,KAAKmS,QAAQgT,MAAQK,EAAGC,EAAEC,iBAAmBF,EAAGC,EAAEE,YACtDnW,EAAIyV,EAAKrD,MAAM2D,GAErB,IAAK/V,EACH,MAAM,IAAIoW,UAAU,uBAAuBX,KAG7CjlB,KAAKslB,cAAoBze,IAAT2I,EAAE,GAAmBA,EAAE,GAAK,GACtB,MAAlBxP,KAAKslB,WACPtlB,KAAKslB,SAAW,IAIb9V,EAAE,GAGLxP,KAAKqlB,OAAS,IAAIQ,EAAOrW,EAAE,GAAIxP,KAAKmS,QAAQgT,OAF5CnlB,KAAKqlB,OAASP,CAIlB,CAEA,QAAAxU,GACE,OAAOtQ,KAAK0W,KACd,CAEA,IAAAoP,CAAMnb,GAGJ,GAFAuU,EAAM,kBAAmBvU,EAAS3K,KAAKmS,QAAQgT,OAE3CnlB,KAAKqlB,SAAWP,GAAOna,IAAYma,EACrC,OAAO,EAGT,GAAuB,iBAAZna,EACT,IACEA,EAAU,IAAIkb,EAAOlb,EAAS3K,KAAKmS,QACrC,CAAE,MAAO4T,GACP,OAAO,CACT,CAGF,OAAOC,EAAIrb,EAAS3K,KAAKslB,SAAUtlB,KAAKqlB,OAAQrlB,KAAKmS,QACvD,CAEA,UAAA8T,CAAYhB,EAAM9S,GAChB,KAAM8S,aAAgBD,GACpB,MAAM,IAAIY,UAAU,4BAGtB,MAAsB,KAAlB5lB,KAAKslB,SACY,KAAftlB,KAAK0W,OAGF,IAAIwP,EAAMjB,EAAKvO,MAAOvE,GAAS2T,KAAK9lB,KAAK0W,OACrB,KAAlBuO,EAAKK,SACK,KAAfL,EAAKvO,OAGF,IAAIwP,EAAMlmB,KAAK0W,MAAOvE,GAAS2T,KAAKb,EAAKI,WAGlDlT,EAAU+S,EAAa/S,IAGXgU,mBACM,aAAfnmB,KAAK0W,OAAuC,aAAfuO,EAAKvO,YAGhCvE,EAAQgU,oBACVnmB,KAAK0W,MAAM0P,WAAW,WAAanB,EAAKvO,MAAM0P,WAAW,iBAKxDpmB,KAAKslB,SAASc,WAAW,OAAQnB,EAAKK,SAASc,WAAW,WAI1DpmB,KAAKslB,SAASc,WAAW,OAAQnB,EAAKK,SAASc,WAAW,UAK3DpmB,KAAKqlB,OAAO1a,UAAYsa,EAAKI,OAAO1a,UACrC3K,KAAKslB,SAASe,SAAS,OAAQpB,EAAKK,SAASe,SAAS,WAIpDL,EAAIhmB,KAAKqlB,OAAQ,IAAKJ,EAAKI,OAAQlT,IACrCnS,KAAKslB,SAASc,WAAW,MAAQnB,EAAKK,SAASc,WAAW,UAIxDJ,EAAIhmB,KAAKqlB,OAAQ,IAAKJ,EAAKI,OAAQlT,IACrCnS,KAAKslB,SAASc,WAAW,MAAQnB,EAAKK,SAASc,WAAW,UAI9D,EAGFE,EAAOC,QAAUvB,EAEjB,MAAME,EAAe,EAAQ,MACrBsB,OAAQhB,EAAE,EAAEC,GAAM,EAAQ,MAC5BO,EAAM,EAAQ,MACd9G,EAAQ,EAAQ,MAChB2G,EAAS,EAAQ,MACjBK,EAAQ,EAAQ,K,uBC5ItB,MAAMO,EAAmB,OAGzB,MAAMP,EACJ,WAAAxmB,CAAagnB,EAAOvU,GAGlB,GAFAA,EAAU+S,EAAa/S,GAEnBuU,aAAiBR,EACnB,OACEQ,EAAMvB,UAAYhT,EAAQgT,OAC1BuB,EAAMP,sBAAwBhU,EAAQgU,kBAE/BO,EAEA,IAAIR,EAAMQ,EAAMC,IAAKxU,GAIhC,GAAIuU,aAAiB1B,EAKnB,OAHAhlB,KAAK2mB,IAAMD,EAAMhQ,MACjB1W,KAAKoe,IAAM,CAAC,CAACsI,IACb1mB,KAAK4mB,eAAY/f,EACV7G,KAsBT,GAnBAA,KAAKmS,QAAUA,EACfnS,KAAKmlB,QAAUhT,EAAQgT,MACvBnlB,KAAKmmB,oBAAsBhU,EAAQgU,kBAKnCnmB,KAAK2mB,IAAMD,EAAMtB,OAAO3M,QAAQgO,EAAkB,KAGlDzmB,KAAKoe,IAAMpe,KAAK2mB,IACbpF,MAAM,MAENnF,KAAImJ,GAAKvlB,KAAK6mB,WAAWtB,EAAEH,UAI3B0B,QAAO/W,GAAKA,EAAEtN,UAEZzC,KAAKoe,IAAI3b,OACZ,MAAM,IAAImjB,UAAU,yBAAyB5lB,KAAK2mB,OAIpD,GAAI3mB,KAAKoe,IAAI3b,OAAS,EAAG,CAEvB,MAAMskB,EAAQ/mB,KAAKoe,IAAI,GAEvB,GADApe,KAAKoe,IAAMpe,KAAKoe,IAAI0I,QAAO/W,IAAMiX,EAAUjX,EAAE,MACrB,IAApB/P,KAAKoe,IAAI3b,OACXzC,KAAKoe,IAAM,CAAC2I,QACP,GAAI/mB,KAAKoe,IAAI3b,OAAS,EAE3B,IAAK,MAAMsN,KAAK/P,KAAKoe,IACnB,GAAiB,IAAbrO,EAAEtN,QAAgBwkB,EAAMlX,EAAE,IAAK,CACjC/P,KAAKoe,IAAM,CAACrO,GACZ,KACF,CAGN,CAEA/P,KAAK4mB,eAAY/f,CACnB,CAEA,SAAI6f,GACF,QAAuB7f,IAAnB7G,KAAK4mB,UAAyB,CAChC5mB,KAAK4mB,UAAY,GACjB,IAAK,IAAI1V,EAAI,EAAGA,EAAIlR,KAAKoe,IAAI3b,OAAQyO,IAAK,CACpCA,EAAI,IACNlR,KAAK4mB,WAAa,MAEpB,MAAMM,EAAQlnB,KAAKoe,IAAIlN,GACvB,IAAK,IAAIiW,EAAI,EAAGA,EAAID,EAAMzkB,OAAQ0kB,IAC5BA,EAAI,IACNnnB,KAAK4mB,WAAa,KAEpB5mB,KAAK4mB,WAAaM,EAAMC,GAAG7W,WAAW8U,MAE1C,CACF,CACA,OAAOplB,KAAK4mB,SACd,CAEA,MAAAQ,GACE,OAAOpnB,KAAK0mB,KACd,CAEA,QAAApW,GACE,OAAOtQ,KAAK0mB,KACd,CAEA,UAAAG,CAAYH,GAGV,MAGMW,IAFHrnB,KAAKmS,QAAQgU,mBAAqBmB,IAClCtnB,KAAKmS,QAAQgT,OAASoC,IACE,IAAMb,EAC3Bc,EAAStT,EAAMhC,IAAImV,GACzB,GAAIG,EACF,OAAOA,EAGT,MAAMrC,EAAQnlB,KAAKmS,QAAQgT,MAErBsC,EAAKtC,EAAQK,EAAGC,EAAEiC,kBAAoBlC,EAAGC,EAAEkC,aACjDjB,EAAQA,EAAMjO,QAAQgP,EAAIG,EAAc5nB,KAAKmS,QAAQgU,oBACrDjH,EAAM,iBAAkBwH,GAGxBA,EAAQA,EAAMjO,QAAQ+M,EAAGC,EAAEoC,gBAAiBC,GAC5C5I,EAAM,kBAAmBwH,GAGzBA,EAAQA,EAAMjO,QAAQ+M,EAAGC,EAAEsC,WAAYC,GACvC9I,EAAM,aAAcwH,GAGpBA,EAAQA,EAAMjO,QAAQ+M,EAAGC,EAAEwC,WAAYC,GACvChJ,EAAM,aAAcwH,GAKpB,IAAIyB,EAAYzB,EACbnF,MAAM,KACNnF,KAAI6I,GAAQmD,EAAgBnD,EAAMjlB,KAAKmS,WACvC4C,KAAK,KACLwM,MAAM,OAENnF,KAAI6I,GAAQoD,EAAYpD,EAAMjlB,KAAKmS,WAElCgT,IAEFgD,EAAYA,EAAUrB,QAAO7B,IAC3B/F,EAAM,uBAAwB+F,EAAMjlB,KAAKmS,WAChC8S,EAAKrD,MAAM4D,EAAGC,EAAEC,sBAG7BxG,EAAM,aAAciJ,GAKpB,MAAMG,EAAW,IAAIC,IACfC,EAAcL,EAAU/L,KAAI6I,GAAQ,IAAID,EAAWC,EAAMjlB,KAAKmS,WACpE,IAAK,MAAM8S,KAAQuD,EAAa,CAC9B,GAAIxB,EAAU/B,GACZ,MAAO,CAACA,GAEVqD,EAASlK,IAAI6G,EAAKvO,MAAOuO,EAC3B,CACIqD,EAASG,KAAO,GAAKH,EAASvL,IAAI,KACpCuL,EAASnR,OAAO,IAGlB,MAAM3J,EAAS,IAAI8a,EAASzG,UAE5B,OADA3N,EAAMkK,IAAIiJ,EAAS7Z,GACZA,CACT,CAEA,UAAAyY,CAAYS,EAAOvU,GACjB,KAAMuU,aAAiBR,GACrB,MAAM,IAAIN,UAAU,uBAGtB,OAAO5lB,KAAKoe,IAAIsK,MAAMC,GAElBC,EAAcD,EAAiBxW,IAC/BuU,EAAMtI,IAAIsK,MAAMG,GAEZD,EAAcC,EAAkB1W,IAChCwW,EAAgBG,OAAOC,GACdF,EAAiBC,OAAOE,GACtBD,EAAe9C,WAAW+C,EAAiB7W,UAOhE,CAGA,IAAA2T,CAAMnb,GACJ,IAAKA,EACH,OAAO,EAGT,GAAuB,iBAAZA,EACT,IACEA,EAAU,IAAIkb,EAAOlb,EAAS3K,KAAKmS,QACrC,CAAE,MAAO4T,GACP,OAAO,CACT,CAGF,IAAK,IAAI7U,EAAI,EAAGA,EAAIlR,KAAKoe,IAAI3b,OAAQyO,IACnC,GAAI+X,EAAQjpB,KAAKoe,IAAIlN,GAAIvG,EAAS3K,KAAKmS,SACrC,OAAO,EAGX,OAAO,CACT,EAGFmU,EAAOC,QAAUL,EAEjB,MACMhS,EAAQ,IADF,EAAQ,OAGdgR,EAAe,EAAQ,KACvBF,EAAa,EAAQ,MACrB9F,EAAQ,EAAQ,MAChB2G,EAAS,EAAQ,OAErBW,OAAQhB,EAAE,EACVC,EAAC,sBACDqC,EAAqB,iBACrBE,EAAgB,iBAChBE,GACE,EAAQ,OACN,wBAAEZ,EAAuB,WAAEC,GAAe,EAAQ,MAElDP,EAAYjX,GAAiB,aAAZA,EAAE2G,MACnBuQ,EAAQlX,GAAiB,KAAZA,EAAE2G,MAIfkS,EAAgB,CAACJ,EAAarW,KAClC,IAAI3E,GAAS,EACb,MAAM0b,EAAuBV,EAAYtmB,QACzC,IAAIinB,EAAiBD,EAAqB1H,MAE1C,KAAOhU,GAAU0b,EAAqBzmB,QACpC+K,EAAS0b,EAAqBJ,OAAOM,GAC5BD,EAAelD,WAAWmD,EAAiBjX,KAGpDgX,EAAiBD,EAAqB1H,MAGxC,OAAOhU,GAMH4a,EAAkB,CAACnD,EAAM9S,KAC7B+M,EAAM,OAAQ+F,EAAM9S,GACpB8S,EAAOoE,EAAcpE,EAAM9S,GAC3B+M,EAAM,QAAS+F,GACfA,EAAOqE,EAAcrE,EAAM9S,GAC3B+M,EAAM,SAAU+F,GAChBA,EAAOsE,EAAetE,EAAM9S,GAC5B+M,EAAM,SAAU+F,GAChBA,EAAOuE,EAAavE,EAAM9S,GAC1B+M,EAAM,QAAS+F,GACRA,GAGHwE,EAAMviB,IAAOA,GAA2B,MAArBA,EAAGyG,eAAgC,MAAPzG,EAS/CoiB,EAAgB,CAACrE,EAAM9S,IACpB8S,EACJG,OACA7D,MAAM,OACNnF,KAAKrM,GAAM2Z,EAAa3Z,EAAGoC,KAC3B4C,KAAK,KAGJ2U,EAAe,CAACzE,EAAM9S,KAC1B,MAAMoT,EAAIpT,EAAQgT,MAAQK,EAAGC,EAAEkE,YAAcnE,EAAGC,EAAEmE,OAClD,OAAO3E,EAAKxM,QAAQ8M,GAAG,CAAClC,EAAGwG,EAAGra,EAAGsa,EAAGC,KAElC,IAAIC,EAoBJ,OArBA9K,EAAM,QAAS+F,EAAM5B,EAAGwG,EAAGra,EAAGsa,EAAGC,GAG7BN,EAAII,GACNG,EAAM,GACGP,EAAIja,GACbwa,EAAM,KAAKH,WAAWA,EAAI,UACjBJ,EAAIK,GAEbE,EAAM,KAAKH,KAAKra,QAAQqa,MAAMra,EAAI,QACzBua,GACT7K,EAAM,kBAAmB6K,GACzBC,EAAM,KAAKH,KAAKra,KAAKsa,KAAKC,MACrBF,MAAMra,EAAI,SAGfwa,EAAM,KAAKH,KAAKra,KAAKsa,MAChBD,MAAMra,EAAI,QAGjB0P,EAAM,eAAgB8K,GACfA,IACR,EAWGX,EAAgB,CAACpE,EAAM9S,IACpB8S,EACJG,OACA7D,MAAM,OACNnF,KAAKrM,GAAMka,EAAala,EAAGoC,KAC3B4C,KAAK,KAGJkV,EAAe,CAAChF,EAAM9S,KAC1B+M,EAAM,QAAS+F,EAAM9S,GACrB,MAAMoT,EAAIpT,EAAQgT,MAAQK,EAAGC,EAAEyE,YAAc1E,EAAGC,EAAE0E,OAC5CC,EAAIjY,EAAQgU,kBAAoB,KAAO,GAC7C,OAAOlB,EAAKxM,QAAQ8M,GAAG,CAAClC,EAAGwG,EAAGra,EAAGsa,EAAGC,KAElC,IAAIC,EA2CJ,OA5CA9K,EAAM,QAAS+F,EAAM5B,EAAGwG,EAAGra,EAAGsa,EAAGC,GAG7BN,EAAII,GACNG,EAAM,GACGP,EAAIja,GACbwa,EAAM,KAAKH,QAAQO,OAAOP,EAAI,UACrBJ,EAAIK,GAEXE,EADQ,MAANH,EACI,KAAKA,KAAKra,MAAM4a,MAAMP,MAAMra,EAAI,QAEhC,KAAKqa,KAAKra,MAAM4a,OAAOP,EAAI,UAE1BE,GACT7K,EAAM,kBAAmB6K,GAGrBC,EAFM,MAANH,EACQ,MAANra,EACI,KAAKqa,KAAKra,KAAKsa,KAAKC,MACrBF,KAAKra,MAAMsa,EAAI,MAEd,KAAKD,KAAKra,KAAKsa,KAAKC,MACrBF,MAAMra,EAAI,QAGX,KAAKqa,KAAKra,KAAKsa,KAAKC,OACpBF,EAAI,YAGZ3K,EAAM,SAGF8K,EAFM,MAANH,EACQ,MAANra,EACI,KAAKqa,KAAKra,KAAKsa,IAClBM,MAAMP,KAAKra,MAAMsa,EAAI,MAElB,KAAKD,KAAKra,KAAKsa,IAClBM,MAAMP,MAAMra,EAAI,QAGf,KAAKqa,KAAKra,KAAKsa,OACfD,EAAI,WAId3K,EAAM,eAAgB8K,GACfA,IACR,EAGGT,EAAiB,CAACtE,EAAM9S,KAC5B+M,EAAM,iBAAkB+F,EAAM9S,GACvB8S,EACJ1D,MAAM,OACNnF,KAAKrM,GAAMsa,EAActa,EAAGoC,KAC5B4C,KAAK,MAGJsV,EAAgB,CAACpF,EAAM9S,KAC3B8S,EAAOA,EAAKG,OACZ,MAAMG,EAAIpT,EAAQgT,MAAQK,EAAGC,EAAE6E,aAAe9E,EAAGC,EAAE8E,QACnD,OAAOtF,EAAKxM,QAAQ8M,GAAG,CAACyE,EAAKQ,EAAMX,EAAGra,EAAGsa,EAAGC,KAC1C7K,EAAM,SAAU+F,EAAM+E,EAAKQ,EAAMX,EAAGra,EAAGsa,EAAGC,GAC1C,MAAMU,EAAKhB,EAAII,GACTa,EAAKD,GAAMhB,EAAIja,GACfmb,EAAKD,GAAMjB,EAAIK,GACfc,EAAOD,EA+Db,MA7Da,MAATH,GAAgBI,IAClBJ,EAAO,IAKTT,EAAK5X,EAAQgU,kBAAoB,KAAO,GAEpCsE,EAGAT,EAFW,MAATQ,GAAyB,MAATA,EAEZ,WAGA,IAECA,GAAQI,GAGbF,IACFlb,EAAI,GAENsa,EAAI,EAES,MAATU,GAGFA,EAAO,KACHE,GACFb,GAAKA,EAAI,EACTra,EAAI,EACJsa,EAAI,IAEJta,GAAKA,EAAI,EACTsa,EAAI,IAEY,OAATU,IAGTA,EAAO,IACHE,EACFb,GAAKA,EAAI,EAETra,GAAKA,EAAI,GAIA,MAATgb,IACFT,EAAK,MAGPC,EAAM,GAAGQ,EAAOX,KAAKra,KAAKsa,IAAIC,KACrBW,EACTV,EAAM,KAAKH,QAAQE,OAAQF,EAAI,UACtBc,IACTX,EAAM,KAAKH,KAAKra,MAAMua,MACjBF,MAAMra,EAAI,SAGjB0P,EAAM,gBAAiB8K,GAEhBA,IACR,EAKGR,EAAe,CAACvE,EAAM9S,KAC1B+M,EAAM,eAAgB+F,EAAM9S,GAErB8S,EACJG,OACA3M,QAAQ+M,EAAGC,EAAEoF,MAAO,KAGnBxC,EAAc,CAACpD,EAAM9S,KACzB+M,EAAM,cAAe+F,EAAM9S,GACpB8S,EACJG,OACA3M,QAAQ+M,EAAGrT,EAAQgU,kBAAoBV,EAAEqF,QAAUrF,EAAEsF,MAAO,KAS3DnD,EAAgBoD,GAAS,CAACC,EAC9BC,EAAMC,EAAIC,EAAIC,EAAIC,EAAKC,EACvBC,EAAIC,EAAIC,EAAIC,EAAIC,IA2BT,GAzBLV,EADEzB,EAAI0B,GACC,GACE1B,EAAI2B,GACN,KAAKD,QAASH,EAAQ,KAAO,KAC3BvB,EAAI4B,GACN,KAAKF,KAAMC,MAAOJ,EAAQ,KAAO,KAC/BM,EACF,KAAKJ,IAEL,KAAKA,IAAOF,EAAQ,KAAO,QAIlCQ,EADE/B,EAAIgC,GACD,GACIhC,EAAIiC,GACR,KAAKD,EAAK,UACNhC,EAAIkC,GACR,IAAIF,MAAOC,EAAK,QACZE,EACJ,KAAKH,KAAMC,KAAMC,KAAMC,IACnBZ,EACJ,IAAIS,KAAMC,MAAOC,EAAK,MAEtB,KAAKH,MAGWpG,OAGnB6D,EAAU,CAAC7K,EAAKzT,EAASwH,KAC7B,IAAK,IAAIjB,EAAI,EAAGA,EAAIkN,EAAI3b,OAAQyO,IAC9B,IAAKkN,EAAIlN,GAAG4U,KAAKnb,GACf,OAAO,EAIX,GAAIA,EAAQkhB,WAAWppB,SAAW0P,EAAQgU,kBAAmB,CAM3D,IAAK,IAAIjV,EAAI,EAAGA,EAAIkN,EAAI3b,OAAQyO,IAE9B,GADAgO,EAAMd,EAAIlN,GAAGmU,QACTjH,EAAIlN,GAAGmU,SAAWL,EAAWF,KAI7B1G,EAAIlN,GAAGmU,OAAOwG,WAAWppB,OAAS,EAAG,CACvC,MAAMqpB,EAAU1N,EAAIlN,GAAGmU,OACvB,GAAIyG,EAAQC,QAAUphB,EAAQohB,OAC1BD,EAAQE,QAAUrhB,EAAQqhB,OAC1BF,EAAQG,QAAUthB,EAAQshB,MAC5B,OAAO,CAEX,CAIF,OAAO,CACT,CAEA,OAAO,E,uBCxiBT,MAAM/M,EAAQ,EAAQ,OAChB,WAAEgN,EAAU,iBAAEC,GAAqB,EAAQ,OACzC3F,OAAQhB,EAAE,EAAEC,GAAM,EAAQ,MAE5BP,EAAe,EAAQ,MACvB,mBAAEkH,GAAuB,EAAQ,MACvC,MAAMvG,EACJ,WAAAnmB,CAAaiL,EAASwH,GAGpB,GAFAA,EAAU+S,EAAa/S,GAEnBxH,aAAmBkb,EAAQ,CAC7B,GAAIlb,EAAQwa,UAAYhT,EAAQgT,OAC5Bxa,EAAQwb,sBAAwBhU,EAAQgU,kBAC1C,OAAOxb,EAEPA,EAAUA,EAAQA,OAEtB,MAAO,GAAuB,iBAAZA,EAChB,MAAM,IAAIib,UAAU,uDAAuDjb,OAG7E,GAAIA,EAAQlI,OAASypB,EACnB,MAAM,IAAItG,UACR,0BAA0BsG,gBAI9BhN,EAAM,SAAUvU,EAASwH,GACzBnS,KAAKmS,QAAUA,EACfnS,KAAKmlB,QAAUhT,EAAQgT,MAGvBnlB,KAAKmmB,oBAAsBhU,EAAQgU,kBAEnC,MAAM3W,EAAI7E,EAAQya,OAAOxD,MAAMzP,EAAQgT,MAAQK,EAAGC,EAAE4G,OAAS7G,EAAGC,EAAE6G,OAElE,IAAK9c,EACH,MAAM,IAAIoW,UAAU,oBAAoBjb,KAU1C,GAPA3K,KAAK2mB,IAAMhc,EAGX3K,KAAK+rB,OAASvc,EAAE,GAChBxP,KAAKgsB,OAASxc,EAAE,GAChBxP,KAAKisB,OAASzc,EAAE,GAEZxP,KAAK+rB,MAAQI,GAAoBnsB,KAAK+rB,MAAQ,EAChD,MAAM,IAAInG,UAAU,yBAGtB,GAAI5lB,KAAKgsB,MAAQG,GAAoBnsB,KAAKgsB,MAAQ,EAChD,MAAM,IAAIpG,UAAU,yBAGtB,GAAI5lB,KAAKisB,MAAQE,GAAoBnsB,KAAKisB,MAAQ,EAChD,MAAM,IAAIrG,UAAU,yBAIjBpW,EAAE,GAGLxP,KAAK6rB,WAAarc,EAAE,GAAG+R,MAAM,KAAKnF,KAAKlV,IACrC,GAAI,WAAW4e,KAAK5e,GAAK,CACvB,MAAMsb,GAAOtb,EACb,GAAIsb,GAAO,GAAKA,EAAM2J,EACpB,OAAO3J,CAEX,CACA,OAAOtb,KATTlH,KAAK6rB,WAAa,GAapB7rB,KAAK+gB,MAAQvR,EAAE,GAAKA,EAAE,GAAG+R,MAAM,KAAO,GACtCvhB,KAAKonB,QACP,CAEA,MAAAA,GAKE,OAJApnB,KAAK2K,QAAU,GAAG3K,KAAK+rB,SAAS/rB,KAAKgsB,SAAShsB,KAAKisB,QAC/CjsB,KAAK6rB,WAAWppB,SAClBzC,KAAK2K,SAAW,IAAI3K,KAAK6rB,WAAW9W,KAAK,QAEpC/U,KAAK2K,OACd,CAEA,QAAA2F,GACE,OAAOtQ,KAAK2K,OACd,CAEA,OAAA4hB,CAASC,GAEP,GADAtN,EAAM,iBAAkBlf,KAAK2K,QAAS3K,KAAKmS,QAASqa,KAC9CA,aAAiB3G,GAAS,CAC9B,GAAqB,iBAAV2G,GAAsBA,IAAUxsB,KAAK2K,QAC9C,OAAO,EAET6hB,EAAQ,IAAI3G,EAAO2G,EAAOxsB,KAAKmS,QACjC,CAEA,OAAIqa,EAAM7hB,UAAY3K,KAAK2K,QAClB,EAGF3K,KAAKysB,YAAYD,IAAUxsB,KAAK0sB,WAAWF,EACpD,CAEA,WAAAC,CAAaD,GAKX,OAJMA,aAAiB3G,IACrB2G,EAAQ,IAAI3G,EAAO2G,EAAOxsB,KAAKmS,UAI/Bia,EAAmBpsB,KAAK+rB,MAAOS,EAAMT,QACrCK,EAAmBpsB,KAAKgsB,MAAOQ,EAAMR,QACrCI,EAAmBpsB,KAAKisB,MAAOO,EAAMP,MAEzC,CAEA,UAAAS,CAAYF,GAMV,GALMA,aAAiB3G,IACrB2G,EAAQ,IAAI3G,EAAO2G,EAAOxsB,KAAKmS,UAI7BnS,KAAK6rB,WAAWppB,SAAW+pB,EAAMX,WAAWppB,OAC9C,OAAQ,EACH,IAAKzC,KAAK6rB,WAAWppB,QAAU+pB,EAAMX,WAAWppB,OACrD,OAAO,EACF,IAAKzC,KAAK6rB,WAAWppB,SAAW+pB,EAAMX,WAAWppB,OACtD,OAAO,EAGT,IAAIyO,EAAI,EACR,EAAG,CACD,MAAMgN,EAAIle,KAAK6rB,WAAW3a,GACpB8M,EAAIwO,EAAMX,WAAW3a,GAE3B,GADAgO,EAAM,qBAAsBhO,EAAGgN,EAAGF,QACxBnX,IAANqX,QAAyBrX,IAANmX,EACrB,OAAO,EACF,QAAUnX,IAANmX,EACT,OAAO,EACF,QAAUnX,IAANqX,EACT,OAAQ,EACH,GAAIA,IAAMF,EAGf,OAAOoO,EAAmBlO,EAAGF,EAEjC,SAAW9M,EACb,CAEA,YAAAyb,CAAcH,GACNA,aAAiB3G,IACrB2G,EAAQ,IAAI3G,EAAO2G,EAAOxsB,KAAKmS,UAGjC,IAAIjB,EAAI,EACR,EAAG,CACD,MAAMgN,EAAIle,KAAK+gB,MAAM7P,GACf8M,EAAIwO,EAAMzL,MAAM7P,GAEtB,GADAgO,EAAM,gBAAiBhO,EAAGgN,EAAGF,QACnBnX,IAANqX,QAAyBrX,IAANmX,EACrB,OAAO,EACF,QAAUnX,IAANmX,EACT,OAAO,EACF,QAAUnX,IAANqX,EACT,OAAQ,EACH,GAAIA,IAAMF,EAGf,OAAOoO,EAAmBlO,EAAGF,EAEjC,SAAW9M,EACb,CAIA,GAAA0b,CAAK3K,EAAS4K,EAAYC,GACxB,OAAQ7K,GACN,IAAK,WACHjiB,KAAK6rB,WAAWppB,OAAS,EACzBzC,KAAKisB,MAAQ,EACbjsB,KAAKgsB,MAAQ,EACbhsB,KAAK+rB,QACL/rB,KAAK4sB,IAAI,MAAOC,EAAYC,GAC5B,MACF,IAAK,WACH9sB,KAAK6rB,WAAWppB,OAAS,EACzBzC,KAAKisB,MAAQ,EACbjsB,KAAKgsB,QACLhsB,KAAK4sB,IAAI,MAAOC,EAAYC,GAC5B,MACF,IAAK,WAIH9sB,KAAK6rB,WAAWppB,OAAS,EACzBzC,KAAK4sB,IAAI,QAASC,EAAYC,GAC9B9sB,KAAK4sB,IAAI,MAAOC,EAAYC,GAC5B,MAGF,IAAK,aAC4B,IAA3B9sB,KAAK6rB,WAAWppB,QAClBzC,KAAK4sB,IAAI,QAASC,EAAYC,GAEhC9sB,KAAK4sB,IAAI,MAAOC,EAAYC,GAC5B,MAEF,IAAK,QAMc,IAAf9sB,KAAKgsB,OACU,IAAfhsB,KAAKisB,OACsB,IAA3BjsB,KAAK6rB,WAAWppB,QAEhBzC,KAAK+rB,QAEP/rB,KAAKgsB,MAAQ,EACbhsB,KAAKisB,MAAQ,EACbjsB,KAAK6rB,WAAa,GAClB,MACF,IAAK,QAKgB,IAAf7rB,KAAKisB,OAA0C,IAA3BjsB,KAAK6rB,WAAWppB,QACtCzC,KAAKgsB,QAEPhsB,KAAKisB,MAAQ,EACbjsB,KAAK6rB,WAAa,GAClB,MACF,IAAK,QAK4B,IAA3B7rB,KAAK6rB,WAAWppB,QAClBzC,KAAKisB,QAEPjsB,KAAK6rB,WAAa,GAClB,MAGF,IAAK,MAAO,CACV,MAAMkB,EAAOC,OAAOF,GAAkB,EAAI,EAE1C,IAAKD,IAAiC,IAAnBC,EACjB,MAAM,IAAIrtB,MAAM,mDAGlB,GAA+B,IAA3BO,KAAK6rB,WAAWppB,OAClBzC,KAAK6rB,WAAa,CAACkB,OACd,CACL,IAAI7b,EAAIlR,KAAK6rB,WAAWppB,OACxB,OAASyO,GAAK,GACsB,iBAAvBlR,KAAK6rB,WAAW3a,KACzBlR,KAAK6rB,WAAW3a,KAChBA,GAAK,GAGT,IAAW,IAAPA,EAAU,CAEZ,GAAI2b,IAAe7sB,KAAK6rB,WAAW9W,KAAK,OAA2B,IAAnB+X,EAC9C,MAAM,IAAIrtB,MAAM,yDAElBO,KAAK6rB,WAAWtoB,KAAKwpB,EACvB,CACF,CACA,GAAIF,EAAY,CAGd,IAAIhB,EAAa,CAACgB,EAAYE,IACP,IAAnBD,IACFjB,EAAa,CAACgB,IAE2C,IAAvDT,EAAmBpsB,KAAK6rB,WAAW,GAAIgB,GACrCI,MAAMjtB,KAAK6rB,WAAW,MACxB7rB,KAAK6rB,WAAaA,GAGpB7rB,KAAK6rB,WAAaA,CAEtB,CACA,KACF,CACA,QACE,MAAM,IAAIpsB,MAAM,+BAA+BwiB,KAMnD,OAJAjiB,KAAK2mB,IAAM3mB,KAAKonB,SACZpnB,KAAK+gB,MAAMte,SACbzC,KAAK2mB,KAAO,IAAI3mB,KAAK+gB,MAAMhM,KAAK,QAE3B/U,IACT,EAGFsmB,EAAOC,QAAUV,C,uBC7SjB,MAAMljB,EAAQ,EAAQ,KAKtB2jB,EAAOC,QAJO,CAAC5b,EAASwH,KACtB,MAAMkK,EAAI1Z,EAAMgI,EAAQya,OAAO3M,QAAQ,SAAU,IAAKtG,GACtD,OAAOkK,EAAIA,EAAE1R,QAAU,K,uBCHzB,MAAMuiB,EAAK,EAAQ,MACbC,EAAM,EAAQ,MACdC,EAAK,EAAQ,MACbC,EAAM,EAAQ,MACdC,EAAK,EAAQ,MACbC,EAAM,EAAQ,MA8CpBjH,EAAOC,QA5CK,CAACrI,EAAGsP,EAAIxP,EAAGmH,KACrB,OAAQqI,GACN,IAAK,MAOH,MANiB,iBAANtP,IACTA,EAAIA,EAAEvT,SAES,iBAANqT,IACTA,EAAIA,EAAErT,SAEDuT,IAAMF,EAEf,IAAK,MAOH,MANiB,iBAANE,IACTA,EAAIA,EAAEvT,SAES,iBAANqT,IACTA,EAAIA,EAAErT,SAEDuT,IAAMF,EAEf,IAAK,GACL,IAAK,IACL,IAAK,KACH,OAAOkP,EAAGhP,EAAGF,EAAGmH,GAElB,IAAK,KACH,OAAOgI,EAAIjP,EAAGF,EAAGmH,GAEnB,IAAK,IACH,OAAOiI,EAAGlP,EAAGF,EAAGmH,GAElB,IAAK,KACH,OAAOkI,EAAInP,EAAGF,EAAGmH,GAEnB,IAAK,IACH,OAAOmI,EAAGpP,EAAGF,EAAGmH,GAElB,IAAK,KACH,OAAOoI,EAAIrP,EAAGF,EAAGmH,GAEnB,QACE,MAAM,IAAIS,UAAU,qBAAqB4H,KAC7C,C,uBCjDF,MAAM3H,EAAS,EAAQ,MACjBljB,EAAQ,EAAQ,MACd6jB,OAAQhB,EAAE,EAAEC,GAAM,EAAQ,MAyDlCa,EAAOC,QAvDQ,CAAC5b,EAASwH,KACvB,GAAIxH,aAAmBkb,EACrB,OAAOlb,EAOT,GAJuB,iBAAZA,IACTA,EAAU7I,OAAO6I,IAGI,iBAAZA,EACT,OAAO,KAKT,IAAIiX,EAAQ,KACZ,IAHAzP,EAAUA,GAAW,CAAC,GAGTsb,IAEN,CAUL,MAAMC,EAAiBvb,EAAQgU,kBAAoBX,EAAGC,EAAEkI,eAAiBnI,EAAGC,EAAEmI,WAC9E,IAAI5qB,EACJ,MAAQA,EAAO0qB,EAAeG,KAAKljB,OAC7BiX,GAASA,EAAMtc,MAAQsc,EAAM,GAAGnf,SAAWkI,EAAQlI,SAElDmf,GACC5e,EAAKsC,MAAQtC,EAAK,GAAGP,SAAWmf,EAAMtc,MAAQsc,EAAM,GAAGnf,SAC3Dmf,EAAQ5e,GAEV0qB,EAAeI,UAAY9qB,EAAKsC,MAAQtC,EAAK,GAAGP,OAASO,EAAK,GAAGP,OAGnEirB,EAAeI,WAAa,CAC9B,MAxBElM,EAAQjX,EAAQiX,MAAMzP,EAAQgU,kBAAoBX,EAAGC,EAAEsI,YAAcvI,EAAGC,EAAEuI,SA0B5E,GAAc,OAAVpM,EACF,OAAO,KAGT,MAAMmK,EAAQnK,EAAM,GACdoK,EAAQpK,EAAM,IAAM,IACpBqK,EAAQrK,EAAM,IAAM,IACpBiK,EAAa1Z,EAAQgU,mBAAqBvE,EAAM,GAAK,IAAIA,EAAM,KAAO,GACtEb,EAAQ5O,EAAQgU,mBAAqBvE,EAAM,GAAK,IAAIA,EAAM,KAAO,GAEvE,OAAOjf,EAAM,GAAGopB,KAASC,KAASC,IAAQJ,IAAa9K,IAAS5O,EAAO,C,sBCzDzE,MAAM0T,EAAS,EAAQ,MAMvBS,EAAOC,QALc,CAACrI,EAAGF,EAAGmH,KAC1B,MAAM8I,EAAW,IAAIpI,EAAO3H,EAAGiH,GACzB+I,EAAW,IAAIrI,EAAO7H,EAAGmH,GAC/B,OAAO8I,EAAS1B,QAAQ2B,IAAaD,EAAStB,aAAauB,EAAQ,C,uBCJrE,MAAM3B,EAAU,EAAQ,KAExBjG,EAAOC,QADc,CAACrI,EAAGF,IAAMuO,EAAQrO,EAAGF,GAAG,E,sBCD7C,MAAM6H,EAAS,EAAQ,MAIvBS,EAAOC,QAHS,CAACrI,EAAGF,EAAGmH,IACrB,IAAIU,EAAO3H,EAAGiH,GAAOoH,QAAQ,IAAI1G,EAAO7H,EAAGmH,G,uBCF7C,MAAMxiB,EAAQ,EAAQ,KAgEtB2jB,EAAOC,QA9DM,CAAC4H,EAAUC,KACtB,MAAMC,EAAK1rB,EAAMwrB,EAAU,MAAM,GAC3BG,EAAK3rB,EAAMyrB,EAAU,MAAM,GAC3BG,EAAaF,EAAG9B,QAAQ+B,GAE9B,GAAmB,IAAfC,EACF,OAAO,KAGT,MAAMC,EAAWD,EAAa,EACxBE,EAAcD,EAAWH,EAAKC,EAC9BI,EAAaF,EAAWF,EAAKD,EAC7BM,IAAeF,EAAY5C,WAAWppB,OAG5C,KAFoBisB,EAAW7C,WAAWppB,SAExBksB,EAQhB,OAAKD,EAAWzC,OAAUyC,EAAW1C,MAMjCyC,EAAYxC,MAEP,QAGLwC,EAAYzC,MAEP,QAIF,QAhBE,QAoBX,MAAM4C,EAASD,EAAa,MAAQ,GAEpC,OAAIN,EAAGtC,QAAUuC,EAAGvC,MACX6C,EAAS,QAGdP,EAAGrC,QAAUsC,EAAGtC,MACX4C,EAAS,QAGdP,EAAGpC,QAAUqC,EAAGrC,MACX2C,EAAS,QAIX,a,uBC7DT,MAAMrC,EAAU,EAAQ,KAExBjG,EAAOC,QADI,CAACrI,EAAGF,EAAGmH,IAAmC,IAAzBoH,EAAQrO,EAAGF,EAAGmH,E,uBCD1C,MAAMoH,EAAU,EAAQ,KAExBjG,EAAOC,QADI,CAACrI,EAAGF,EAAGmH,IAAUoH,EAAQrO,EAAGF,EAAGmH,GAAS,C,uBCDnD,MAAMoH,EAAU,EAAQ,KAExBjG,EAAOC,QADK,CAACrI,EAAGF,EAAGmH,IAAUoH,EAAQrO,EAAGF,EAAGmH,IAAU,C,uBCDrD,MAAMU,EAAS,EAAQ,MAkBvBS,EAAOC,QAhBK,CAAC5b,EAASsX,EAAS9P,EAAS0a,EAAYC,KACzB,iBAAd,IACTA,EAAiBD,EACjBA,EAAa1a,EACbA,OAAUtL,GAGZ,IACE,OAAO,IAAIgf,EACTlb,aAAmBkb,EAASlb,EAAQA,QAAUA,EAC9CwH,GACAya,IAAI3K,EAAS4K,EAAYC,GAAgBniB,OAC7C,CAAE,MAAOob,GACP,OAAO,IACT,E,uBChBF,MAAMwG,EAAU,EAAQ,KAExBjG,EAAOC,QADI,CAACrI,EAAGF,EAAGmH,IAAUoH,EAAQrO,EAAGF,EAAGmH,GAAS,C,uBCDnD,MAAMoH,EAAU,EAAQ,KAExBjG,EAAOC,QADK,CAACrI,EAAGF,EAAGmH,IAAUoH,EAAQrO,EAAGF,EAAGmH,IAAU,C,uBCDrD,MAAMU,EAAS,EAAQ,MAEvBS,EAAOC,QADO,CAACrI,EAAGiH,IAAU,IAAIU,EAAO3H,EAAGiH,GAAO4G,K,uBCDjD,MAAMlG,EAAS,EAAQ,MAEvBS,EAAOC,QADO,CAACrI,EAAGiH,IAAU,IAAIU,EAAO3H,EAAGiH,GAAO6G,K,uBCDjD,MAAMO,EAAU,EAAQ,KAExBjG,EAAOC,QADK,CAACrI,EAAGF,EAAGmH,IAAmC,IAAzBoH,EAAQrO,EAAGF,EAAGmH,E,sBCD3C,MAAMU,EAAS,EAAQ,MAevBS,EAAOC,QAdO,CAAC5b,EAASwH,EAAS0c,GAAc,KAC7C,GAAIlkB,aAAmBkb,EACrB,OAAOlb,EAET,IACE,OAAO,IAAIkb,EAAOlb,EAASwH,EAC7B,CAAE,MAAO4T,GACP,IAAK8I,EACH,OAAO,KAET,MAAM9I,CACR,E,uBCZF,MAAMF,EAAS,EAAQ,MAEvBS,EAAOC,QADO,CAACrI,EAAGiH,IAAU,IAAIU,EAAO3H,EAAGiH,GAAO8G,K,uBCDjD,MAAMtpB,EAAQ,EAAQ,KAKtB2jB,EAAOC,QAJY,CAAC5b,EAASwH,KAC3B,MAAM2c,EAASnsB,EAAMgI,EAASwH,GAC9B,OAAQ2c,GAAUA,EAAOjD,WAAWppB,OAAUqsB,EAAOjD,WAAa,K,uBCHpE,MAAMU,EAAU,EAAQ,KAExBjG,EAAOC,QADU,CAACrI,EAAGF,EAAGmH,IAAUoH,EAAQvO,EAAGE,EAAGiH,E,uBCDhD,MAAMwH,EAAe,EAAQ,KAE7BrG,EAAOC,QADO,CAACwI,EAAM5J,IAAU4J,EAAKC,MAAK,CAAC9Q,EAAGF,IAAM2O,EAAa3O,EAAGE,EAAGiH,I,uBCDtE,MAAMe,EAAQ,EAAQ,MAStBI,EAAOC,QARW,CAAC5b,EAAS+b,EAAOvU,KACjC,IACEuU,EAAQ,IAAIR,EAAMQ,EAAOvU,EAC3B,CAAE,MAAO4T,GACP,OAAO,CACT,CACA,OAAOW,EAAMZ,KAAKnb,EAAO,C,uBCP3B,MAAMgiB,EAAe,EAAQ,KAE7BrG,EAAOC,QADM,CAACwI,EAAM5J,IAAU4J,EAAKC,MAAK,CAAC9Q,EAAGF,IAAM2O,EAAazO,EAAGF,EAAGmH,I,uBCDrE,MAAMxiB,EAAQ,EAAQ,KAKtB2jB,EAAOC,QAJO,CAAC5b,EAASwH,KACtB,MAAM8c,EAAItsB,EAAMgI,EAASwH,GACzB,OAAO8c,EAAIA,EAAEtkB,QAAU,K,uBCFzB,MAAMukB,EAAa,EAAQ,MACrBC,EAAY,EAAQ,MACpBtJ,EAAS,EAAQ,MACjBuJ,EAAc,EAAQ,MACtBzsB,EAAQ,EAAQ,KAChB0sB,EAAQ,EAAQ,MAChBC,EAAQ,EAAQ,MAChB1C,EAAM,EAAQ,MACd2C,EAAO,EAAQ,MACfxD,EAAQ,EAAQ,MAChBC,EAAQ,EAAQ,MAChBC,EAAQ,EAAQ,MAChBJ,EAAa,EAAQ,MACrBU,EAAU,EAAQ,KAClBiD,EAAW,EAAQ,MACnBC,EAAe,EAAQ,MACvB9C,EAAe,EAAQ,KACvBqC,EAAO,EAAQ,MACfU,EAAQ,EAAQ,MAChBtC,EAAK,EAAQ,MACbE,EAAK,EAAQ,MACbJ,EAAK,EAAQ,MACbC,EAAM,EAAQ,MACdE,EAAM,EAAQ,MACdE,EAAM,EAAQ,MACdvH,EAAM,EAAQ,MACd2J,EAAS,EAAQ,MACjB3K,EAAa,EAAQ,MACrBkB,EAAQ,EAAQ,MAChB0J,EAAY,EAAQ,MACpBC,EAAgB,EAAQ,MACxBC,EAAgB,EAAQ,MACxBC,EAAgB,EAAQ,KACxBC,EAAa,EAAQ,MACrBC,EAAa,EAAQ,MACrBC,EAAU,EAAQ,MAClBC,EAAM,EAAQ,MACdC,EAAM,EAAQ,MACdnK,EAAa,EAAQ,MACrBoK,EAAgB,EAAQ,MACxBC,EAAS,EAAQ,MACvBhK,EAAOC,QAAU,CACf5jB,QACA0sB,QACAC,QACA1C,MACA2C,OACAxD,QACAC,QACAC,QACAJ,aACAU,UACAiD,WACAC,eACA9C,eACAqC,OACAU,QACAtC,KACAE,KACAJ,KACAC,MACAE,MACAE,MACAvH,MACA2J,SACA3K,aACAkB,QACA0J,YACAC,gBACAC,gBACAC,gBACAC,aACAC,aACAC,UACAC,MACAC,MACAnK,aACAoK,gBACAC,SACAzK,SACAL,GAAI0J,EAAW1J,GACf+K,IAAKrB,EAAWqB,IAChBC,OAAQtB,EAAWzJ,EACnBgL,oBAAqBtB,EAAUsB,oBAC/BC,cAAevB,EAAUuB,cACzBtE,mBAAoBgD,EAAYhD,mBAChCuE,oBAAqBvB,EAAYuB,oB,mBCrFnC,MAGMxE,EAAmBa,OAAOb,kBACL,iBAmB3B7F,EAAOC,QAAU,CACf2F,WAtBiB,IAuBjB0E,0BAlBgC,GAmBhCC,sBAf4B3E,IAgB5BC,mBACAuE,cAfoB,CACpB,QACA,WACA,QACA,WACA,QACA,WACA,cASAD,oBA7B0B,QA8B1BnJ,wBAAyB,EACzBC,WAAY,E,mBCjCd,MAAMrI,EACe,iBAAZ8C,SACPA,QAAQ8O,KACR9O,QAAQ8O,IAAIC,YACZ,cAAcjL,KAAK9D,QAAQ8O,IAAIC,YAC7B,IAAI1kB,IAASoX,QAAQtgB,MAAM,YAAakJ,GACxC,OAEJia,EAAOC,QAAUrH,C,mBCRjB,MAAM8R,EAAU,WACV5E,EAAqB,CAAClO,EAAGF,KAC7B,MAAMiT,EAAOD,EAAQlL,KAAK5H,GACpBgT,EAAOF,EAAQlL,KAAK9H,GAO1B,OALIiT,GAAQC,IACVhT,GAAKA,EACLF,GAAKA,GAGAE,IAAMF,EAAI,EACZiT,IAASC,GAAS,EAClBA,IAASD,EAAQ,EAClB/S,EAAIF,GAAK,EACT,GAKNsI,EAAOC,QAAU,CACf6F,qBACAuE,oBAJ0B,CAACzS,EAAGF,IAAMoO,EAAmBpO,EAAGE,G,mBCsB5DoI,EAAOC,QAvCP,MACE,WAAA7mB,GACEM,KAAKmxB,IAAM,IACXnxB,KAAKoc,IAAM,IAAImM,GACjB,CAEA,GAAArW,CAAKpB,GACH,MAAM4F,EAAQ1W,KAAKoc,IAAIlK,IAAIpB,GAC3B,YAAcjK,IAAV6P,OACF,GAGA1W,KAAKoc,IAAIjF,OAAOrG,GAChB9Q,KAAKoc,IAAIgC,IAAItN,EAAK4F,GACXA,EAEX,CAEA,OAAQ5F,GACN,OAAO9Q,KAAKoc,IAAIjF,OAAOrG,EACzB,CAEA,GAAAsN,CAAKtN,EAAK4F,GAGR,IAFgB1W,KAAKmX,OAAOrG,SAEFjK,IAAV6P,EAAqB,CAEnC,GAAI1W,KAAKoc,IAAIqM,MAAQzoB,KAAKmxB,IAAK,CAC7B,MAAMC,EAAWpxB,KAAKoc,IAAIvL,OAAO7N,OAAO0T,MACxC1W,KAAKmX,OAAOia,EACd,CAEApxB,KAAKoc,IAAIgC,IAAItN,EAAK4F,EACpB,CAEA,OAAO1W,IACT,E,kBCnCF,MAAMqxB,EAAczgB,OAAO0gB,OAAO,CAAEnM,OAAO,IACrCoM,EAAY3gB,OAAO0gB,OAAO,CAAE,GAYlChL,EAAOC,QAXcpU,GACdA,EAIkB,iBAAZA,EACFkf,EAGFlf,EAPEof,C,uBCLX,MAAM,0BACJX,EAAyB,sBACzBC,EAAqB,WACrB3E,GACE,EAAQ,MACNhN,EAAQ,EAAQ,MAIhBsG,GAHNe,EAAUD,EAAOC,QAAU,CAAC,GAGTf,GAAK,GAClBgB,EAASD,EAAQC,OAAS,GAC1B+J,EAAMhK,EAAQgK,IAAM,GACpB9K,EAAIc,EAAQd,EAAI,CAAC,EACvB,IAAI+L,EAAI,EAER,MAAMC,EAAmB,eAQnBC,EAAwB,CAC5B,CAAC,MAAO,GACR,CAAC,MAAOxF,GACR,CAACuF,EAAkBZ,IAYfc,EAAc,CAAC7mB,EAAM4L,EAAOkb,KAChC,MAAMC,EAVc,CAACnb,IACrB,IAAK,MAAO6B,EAAO4Y,KAAQO,EACzBhb,EAAQA,EACL6K,MAAM,GAAGhJ,MAAUxD,KAAK,GAAGwD,OAAW4Y,MACtC5P,MAAM,GAAGhJ,MAAUxD,KAAK,GAAGwD,OAAW4Y,MAE3C,OAAOza,GAIMob,CAAcpb,GACrBpR,EAAQksB,IACdtS,EAAMpU,EAAMxF,EAAOoR,GACnB+O,EAAE3a,GAAQxF,EACVirB,EAAIjrB,GAASoR,EACb8O,EAAGlgB,GAAS,IAAIysB,OAAOrb,EAAOkb,EAAW,SAAM/qB,GAC/C2f,EAAOlhB,GAAS,IAAIysB,OAAOF,EAAMD,EAAW,SAAM/qB,EAAS,EAS7D8qB,EAAY,oBAAqB,eACjCA,EAAY,yBAA0B,QAMtCA,EAAY,uBAAwB,gBAAgBF,MAKpDE,EAAY,cAAe,IAAIpB,EAAI9K,EAAEuM,0BACdzB,EAAI9K,EAAEuM,0BACNzB,EAAI9K,EAAEuM,uBAE7BL,EAAY,mBAAoB,IAAIpB,EAAI9K,EAAEwM,+BACd1B,EAAI9K,EAAEwM,+BACN1B,EAAI9K,EAAEwM,4BAKlCN,EAAY,uBAAwB,MAAMpB,EAAI9K,EAAEuM,sBAC5CzB,EAAI9K,EAAEyM,0BAEVP,EAAY,4BAA6B,MAAMpB,EAAI9K,EAAEwM,2BACjD1B,EAAI9K,EAAEyM,0BAMVP,EAAY,aAAc,QAAQpB,EAAI9K,EAAE0M,8BAC/B5B,EAAI9K,EAAE0M,6BAEfR,EAAY,kBAAmB,SAASpB,EAAI9K,EAAE2M,mCACrC7B,EAAI9K,EAAE2M,kCAKfT,EAAY,kBAAmB,GAAGF,MAMlCE,EAAY,QAAS,UAAUpB,EAAI9K,EAAE4M,yBAC5B9B,EAAI9K,EAAE4M,wBAWfV,EAAY,YAAa,KAAKpB,EAAI9K,EAAE6M,eACjC/B,EAAI9K,EAAE8M,eACPhC,EAAI9K,EAAE+M,WAERb,EAAY,OAAQ,IAAIpB,EAAI9K,EAAEgN,eAK9Bd,EAAY,aAAc,WAAWpB,EAAI9K,EAAEiN,oBACxCnC,EAAI9K,EAAEkN,oBACPpC,EAAI9K,EAAE+M,WAERb,EAAY,QAAS,IAAIpB,EAAI9K,EAAEmN,gBAE/BjB,EAAY,OAAQ,gBAKpBA,EAAY,wBAAyB,GAAGpB,EAAI9K,EAAEwM,mCAC9CN,EAAY,mBAAoB,GAAGpB,EAAI9K,EAAEuM,8BAEzCL,EAAY,cAAe,YAAYpB,EAAI9K,EAAEoN,4BAChBtC,EAAI9K,EAAEoN,4BACNtC,EAAI9K,EAAEoN,wBACVtC,EAAI9K,EAAE8M,gBACVhC,EAAI9K,EAAE+M,eAG3Bb,EAAY,mBAAoB,YAAYpB,EAAI9K,EAAEqN,iCAChBvC,EAAI9K,EAAEqN,iCACNvC,EAAI9K,EAAEqN,6BACVvC,EAAI9K,EAAEkN,qBACVpC,EAAI9K,EAAE+M,eAGhCb,EAAY,SAAU,IAAIpB,EAAI9K,EAAEsN,YAAYxC,EAAI9K,EAAEuN,iBAClDrB,EAAY,cAAe,IAAIpB,EAAI9K,EAAEsN,YAAYxC,EAAI9K,EAAEwN,sBAIvDtB,EAAY,cAAe,oBACDf,mBACIA,qBACAA,SAC9Be,EAAY,SAAU,GAAGpB,EAAI9K,EAAEyN,4BAC/BvB,EAAY,aAAcpB,EAAI9K,EAAEyN,aAClB,MAAM3C,EAAI9K,EAAE8M,gBACZ,MAAMhC,EAAI9K,EAAE+M,wBAE1Bb,EAAY,YAAapB,EAAI9K,EAAEuI,SAAS,GACxC2D,EAAY,gBAAiBpB,EAAI9K,EAAEsI,aAAa,GAIhD4D,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAASpB,EAAI9K,EAAE0N,kBAAkB,GAC1D5M,EAAQyB,iBAAmB,MAE3B2J,EAAY,QAAS,IAAIpB,EAAI9K,EAAE0N,aAAa5C,EAAI9K,EAAEuN,iBAClDrB,EAAY,aAAc,IAAIpB,EAAI9K,EAAE0N,aAAa5C,EAAI9K,EAAEwN,sBAIvDtB,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAASpB,EAAI9K,EAAE2N,kBAAkB,GAC1D7M,EAAQ2B,iBAAmB,MAE3ByJ,EAAY,QAAS,IAAIpB,EAAI9K,EAAE2N,aAAa7C,EAAI9K,EAAEuN,iBAClDrB,EAAY,aAAc,IAAIpB,EAAI9K,EAAE2N,aAAa7C,EAAI9K,EAAEwN,sBAGvDtB,EAAY,kBAAmB,IAAIpB,EAAI9K,EAAEsN,aAAaxC,EAAI9K,EAAEmN,oBAC5DjB,EAAY,aAAc,IAAIpB,EAAI9K,EAAEsN,aAAaxC,EAAI9K,EAAEgN,mBAIvDd,EAAY,iBAAkB,SAASpB,EAAI9K,EAAEsN,aACrCxC,EAAI9K,EAAEmN,eAAerC,EAAI9K,EAAEuN,iBAAiB,GACpDzM,EAAQuB,sBAAwB,SAMhC6J,EAAY,cAAe,SAASpB,EAAI9K,EAAEuN,0BAEnBzC,EAAI9K,EAAEuN,sBAG7BrB,EAAY,mBAAoB,SAASpB,EAAI9K,EAAEwN,+BAEnB1C,EAAI9K,EAAEwN,2BAIlCtB,EAAY,OAAQ,mBAEpBA,EAAY,OAAQ,6BACpBA,EAAY,UAAW,8B,uBCvNvB,MAAMzB,EAAU,EAAQ,MAExB5J,EAAOC,QADK,CAAC5b,EAAS+b,EAAOvU,IAAY+d,EAAQvlB,EAAS+b,EAAO,IAAKvU,E,uBCFtE,MAAM+T,EAAQ,EAAQ,MAMtBI,EAAOC,QALY,CAAC8M,EAAIC,EAAInhB,KAC1BkhB,EAAK,IAAInN,EAAMmN,EAAIlhB,GACnBmhB,EAAK,IAAIpN,EAAMoN,EAAInhB,GACZkhB,EAAGpN,WAAWqN,EAAInhB,G,uBCJ3B,MAAM+d,EAAU,EAAQ,MAGxB5J,EAAOC,QADK,CAAC5b,EAAS+b,EAAOvU,IAAY+d,EAAQvlB,EAAS+b,EAAO,IAAKvU,E,uBCFtE,MAAM0T,EAAS,EAAQ,MACjBK,EAAQ,EAAQ,MAuBtBI,EAAOC,QArBe,CAAChC,EAAUmC,EAAOvU,KACtC,IAAIgf,EAAM,KACNoC,EAAQ,KACRC,EAAW,KACf,IACEA,EAAW,IAAItN,EAAMQ,EAAOvU,EAC9B,CAAE,MAAO4T,GACP,OAAO,IACT,CAWA,OAVAxB,EAASzU,SAASmf,IACZuE,EAAS1N,KAAKmJ,KAEXkC,IAA6B,IAAtBoC,EAAMhH,QAAQ0C,KAExBkC,EAAMlC,EACNsE,EAAQ,IAAI1N,EAAOsL,EAAKhf,IAE5B,IAEKgf,E,sBCtBT,MAAMtL,EAAS,EAAQ,MACjBK,EAAQ,EAAQ,MAsBtBI,EAAOC,QArBe,CAAChC,EAAUmC,EAAOvU,KACtC,IAAIshB,EAAM,KACNC,EAAQ,KACRF,EAAW,KACf,IACEA,EAAW,IAAItN,EAAMQ,EAAOvU,EAC9B,CAAE,MAAO4T,GACP,OAAO,IACT,CAWA,OAVAxB,EAASzU,SAASmf,IACZuE,EAAS1N,KAAKmJ,KAEXwE,GAA4B,IAArBC,EAAMnH,QAAQ0C,KAExBwE,EAAMxE,EACNyE,EAAQ,IAAI7N,EAAO4N,EAAKthB,IAE5B,IAEKshB,E,uBCrBT,MAAM5N,EAAS,EAAQ,MACjBK,EAAQ,EAAQ,MAChBkH,EAAK,EAAQ,MA0DnB9G,EAAOC,QAxDY,CAACG,EAAOvB,KACzBuB,EAAQ,IAAIR,EAAMQ,EAAOvB,GAEzB,IAAIwO,EAAS,IAAI9N,EAAO,SACxB,GAAIa,EAAMZ,KAAK6N,GACb,OAAOA,EAIT,GADAA,EAAS,IAAI9N,EAAO,WAChBa,EAAMZ,KAAK6N,GACb,OAAOA,EAGTA,EAAS,KACT,IAAK,IAAIziB,EAAI,EAAGA,EAAIwV,EAAMtI,IAAI3b,SAAUyO,EAAG,CACzC,MAAMsX,EAAc9B,EAAMtI,IAAIlN,GAE9B,IAAI0iB,EAAS,KACbpL,EAAY1Y,SAAS+jB,IAEnB,MAAMC,EAAU,IAAIjO,EAAOgO,EAAWxO,OAAO1a,SAC7C,OAAQkpB,EAAWvO,UACjB,IAAK,IAC+B,IAA9BwO,EAAQjI,WAAWppB,OACrBqxB,EAAQ7H,QAER6H,EAAQjI,WAAWtoB,KAAK,GAE1BuwB,EAAQnN,IAAMmN,EAAQ1M,SAExB,IAAK,GACL,IAAK,KACEwM,IAAUxG,EAAG0G,EAASF,KACzBA,EAASE,GAEX,MACF,IAAK,IACL,IAAK,KAEH,MAEF,QACE,MAAM,IAAIr0B,MAAM,yBAAyBo0B,EAAWvO,YACxD,KAEEsO,GAAYD,IAAUvG,EAAGuG,EAAQC,KACnCD,EAASC,EAEb,CAEA,OAAID,GAAUjN,EAAMZ,KAAK6N,GAChBA,EAGF,K,uBC1DT,MAAM9N,EAAS,EAAQ,MACjBb,EAAa,EAAQ,OACrB,IAAEF,GAAQE,EACVkB,EAAQ,EAAQ,MAChB0J,EAAY,EAAQ,MACpBxC,EAAK,EAAQ,MACbE,EAAK,EAAQ,MACbC,EAAM,EAAQ,MACdF,EAAM,EAAQ,MAuEpB/G,EAAOC,QArES,CAAC5b,EAAS+b,EAAOqN,EAAM5hB,KAIrC,IAAI6hB,EAAMC,EAAOC,EAAMjP,EAAMkP,EAC7B,OAJAxpB,EAAU,IAAIkb,EAAOlb,EAASwH,GAC9BuU,EAAQ,IAAIR,EAAMQ,EAAOvU,GAGjB4hB,GACN,IAAK,IACHC,EAAO5G,EACP6G,EAAQ1G,EACR2G,EAAO5G,EACPrI,EAAO,IACPkP,EAAQ,KACR,MACF,IAAK,IACHH,EAAO1G,EACP2G,EAAQ5G,EACR6G,EAAO9G,EACPnI,EAAO,IACPkP,EAAQ,KACR,MACF,QACE,MAAM,IAAIvO,UAAU,yCAIxB,GAAIgK,EAAUjlB,EAAS+b,EAAOvU,GAC5B,OAAO,EAMT,IAAK,IAAIjB,EAAI,EAAGA,EAAIwV,EAAMtI,IAAI3b,SAAUyO,EAAG,CACzC,MAAMsX,EAAc9B,EAAMtI,IAAIlN,GAE9B,IAAIkjB,EAAO,KACPC,EAAM,KAiBV,GAfA7L,EAAY1Y,SAAS+jB,IACfA,EAAWxO,SAAWP,IACxB+O,EAAa,IAAI7O,EAAW,YAE9BoP,EAAOA,GAAQP,EACfQ,EAAMA,GAAOR,EACTG,EAAKH,EAAWxO,OAAQ+O,EAAK/O,OAAQlT,GACvCiiB,EAAOP,EACEK,EAAKL,EAAWxO,OAAQgP,EAAIhP,OAAQlT,KAC7CkiB,EAAMR,EACR,IAKEO,EAAK9O,WAAaL,GAAQmP,EAAK9O,WAAa6O,EAC9C,OAAO,EAKT,KAAME,EAAI/O,UAAY+O,EAAI/O,WAAaL,IACnCgP,EAAMtpB,EAAS0pB,EAAIhP,QACrB,OAAO,EACF,GAAIgP,EAAI/O,WAAa6O,GAASD,EAAKvpB,EAAS0pB,EAAIhP,QACrD,OAAO,CAEX,CACA,OAAO,E,uBCzET,MAAMuK,EAAY,EAAQ,MACpBrD,EAAU,EAAQ,KACxBjG,EAAOC,QAAU,CAAChC,EAAUmC,EAAOvU,KACjC,MAAMiM,EAAM,GACZ,IAAI2I,EAAQ,KACRuN,EAAO,KACX,MAAMrF,EAAI1K,EAASyK,MAAK,CAAC9Q,EAAGF,IAAMuO,EAAQrO,EAAGF,EAAG7L,KAChD,IAAK,MAAMxH,KAAWskB,EAAG,CACNW,EAAUjlB,EAAS+b,EAAOvU,IAEzCmiB,EAAO3pB,EACFoc,IACHA,EAAQpc,KAGN2pB,GACFlW,EAAI7a,KAAK,CAACwjB,EAAOuN,IAEnBA,EAAO,KACPvN,EAAQ,KAEZ,CACIA,GACF3I,EAAI7a,KAAK,CAACwjB,EAAO,OAGnB,MAAMwN,EAAS,GACf,IAAK,MAAOd,EAAKtC,KAAQ/S,EACnBqV,IAAQtC,EACVoD,EAAOhxB,KAAKkwB,GACFtC,GAAOsC,IAAQxE,EAAE,GAEjBkC,EAEDsC,IAAQxE,EAAE,GACnBsF,EAAOhxB,KAAK,KAAK4tB,KAEjBoD,EAAOhxB,KAAK,GAAGkwB,OAAStC,KAJxBoD,EAAOhxB,KAAK,KAAKkwB,KAFjBc,EAAOhxB,KAAK,KAShB,MAAMixB,EAAaD,EAAOxf,KAAK,QACzB0f,EAAgC,iBAAd/N,EAAMC,IAAmBD,EAAMC,IAAM7kB,OAAO4kB,GACpE,OAAO8N,EAAW/xB,OAASgyB,EAAShyB,OAAS+xB,EAAa9N,E,uBC7C5D,MAAMR,EAAQ,EAAQ,MAChBlB,EAAa,EAAQ,OACrB,IAAEF,GAAQE,EACV4K,EAAY,EAAQ,MACpBrD,EAAU,EAAQ,KAkElBmI,EAA+B,CAAC,IAAI1P,EAAW,cAC/C2P,EAAiB,CAAC,IAAI3P,EAAW,YAEjC4P,EAAe,CAACC,EAAKC,EAAK3iB,KAC9B,GAAI0iB,IAAQC,EACV,OAAO,EAGT,GAAmB,IAAfD,EAAIpyB,QAAgBoyB,EAAI,GAAGxP,SAAWP,EAAK,CAC7C,GAAmB,IAAfgQ,EAAIryB,QAAgBqyB,EAAI,GAAGzP,SAAWP,EACxC,OAAO,EAEP+P,EADS1iB,EAAQgU,kBACXuO,EAEAC,CAEV,CAEA,GAAmB,IAAfG,EAAIryB,QAAgBqyB,EAAI,GAAGzP,SAAWP,EAAK,CAC7C,GAAI3S,EAAQgU,kBACV,OAAO,EAEP2O,EAAMH,CAEV,CAEA,MAAMI,EAAQ,IAAIC,IAClB,IAAI5H,EAAIE,EAeJ2H,EA6BAC,EAAQC,EACRC,EAAUC,EA5Cd,IAAK,MAAMtlB,KAAK8kB,EACK,MAAf9kB,EAAEuV,UAAmC,OAAfvV,EAAEuV,SAC1B8H,EAAKkI,EAASlI,EAAIrd,EAAGoC,GACG,MAAfpC,EAAEuV,UAAmC,OAAfvV,EAAEuV,SACjCgI,EAAKiI,EAAQjI,EAAIvd,EAAGoC,GAEpB4iB,EAAMS,IAAIzlB,EAAEsV,QAIhB,GAAI0P,EAAMtM,KAAO,EACf,OAAO,KAIT,GAAI2E,GAAME,EAAI,CAEZ,GADA2H,EAAW1I,EAAQa,EAAG/H,OAAQiI,EAAGjI,OAAQlT,GACrC8iB,EAAW,EACb,OAAO,KACF,GAAiB,IAAbA,IAAmC,OAAhB7H,EAAG9H,UAAqC,OAAhBgI,EAAGhI,UACvD,OAAO,IAEX,CAGA,IAAK,MAAM4H,KAAM6H,EAAO,CACtB,GAAI3H,IAAOwC,EAAU1C,EAAIprB,OAAOsrB,GAAKjb,GACnC,OAAO,KAGT,GAAImb,IAAOsC,EAAU1C,EAAIprB,OAAOwrB,GAAKnb,GACnC,OAAO,KAGT,IAAK,MAAMpC,KAAK+kB,EACd,IAAKlF,EAAU1C,EAAIprB,OAAOiO,GAAIoC,GAC5B,OAAO,EAIX,OAAO,CACT,CAMA,IAAIsjB,KAAenI,GAChBnb,EAAQgU,oBACTmH,EAAGjI,OAAOwG,WAAWppB,SAAS6qB,EAAGjI,OAC/BqQ,KAAetI,GAChBjb,EAAQgU,oBACTiH,EAAG/H,OAAOwG,WAAWppB,SAAS2qB,EAAG/H,OAE/BoQ,GAAmD,IAAnCA,EAAa5J,WAAWppB,QACxB,MAAhB6qB,EAAGhI,UAAmD,IAA/BmQ,EAAa5J,WAAW,KACjD4J,GAAe,GAGjB,IAAK,MAAM1lB,KAAK+kB,EAAK,CAGnB,GAFAO,EAAWA,GAA2B,MAAftlB,EAAEuV,UAAmC,OAAfvV,EAAEuV,SAC/C8P,EAAWA,GAA2B,MAAfrlB,EAAEuV,UAAmC,OAAfvV,EAAEuV,SAC3C8H,EASF,GARIsI,GACE3lB,EAAEsV,OAAOwG,YAAc9b,EAAEsV,OAAOwG,WAAWppB,QAC3CsN,EAAEsV,OAAO0G,QAAU2J,EAAa3J,OAChChc,EAAEsV,OAAO2G,QAAU0J,EAAa1J,OAChCjc,EAAEsV,OAAO4G,QAAUyJ,EAAazJ,QAClCyJ,GAAe,GAGA,MAAf3lB,EAAEuV,UAAmC,OAAfvV,EAAEuV,UAE1B,GADA4P,EAASI,EAASlI,EAAIrd,EAAGoC,GACrB+iB,IAAWnlB,GAAKmlB,IAAW9H,EAC7B,OAAO,OAEJ,GAAoB,OAAhBA,EAAG9H,WAAsBsK,EAAUxC,EAAG/H,OAAQvjB,OAAOiO,GAAIoC,GAClE,OAAO,EAGX,GAAImb,EASF,GARImI,GACE1lB,EAAEsV,OAAOwG,YAAc9b,EAAEsV,OAAOwG,WAAWppB,QAC3CsN,EAAEsV,OAAO0G,QAAU0J,EAAa1J,OAChChc,EAAEsV,OAAO2G,QAAUyJ,EAAazJ,OAChCjc,EAAEsV,OAAO4G,QAAUwJ,EAAaxJ,QAClCwJ,GAAe,GAGA,MAAf1lB,EAAEuV,UAAmC,OAAfvV,EAAEuV,UAE1B,GADA6P,EAAQI,EAAQjI,EAAIvd,EAAGoC,GACnBgjB,IAAUplB,GAAKolB,IAAU7H,EAC3B,OAAO,OAEJ,GAAoB,OAAhBA,EAAGhI,WAAsBsK,EAAUtC,EAAGjI,OAAQvjB,OAAOiO,GAAIoC,GAClE,OAAO,EAGX,IAAKpC,EAAEuV,WAAagI,GAAMF,IAAoB,IAAb6H,EAC/B,OAAO,CAEX,CAKA,QAAI7H,GAAMgI,IAAa9H,GAAmB,IAAb2H,OAIzB3H,GAAM+H,IAAajI,GAAmB,IAAb6H,MAOzBS,IAAgBD,GAIb,EAIHH,EAAW,CAACpX,EAAGF,EAAG7L,KACtB,IAAK+L,EACH,OAAOF,EAET,MAAMiH,EAAOsH,EAAQrO,EAAEmH,OAAQrH,EAAEqH,OAAQlT,GACzC,OAAO8S,EAAO,EAAI/G,EACd+G,EAAO,GACQ,MAAfjH,EAAEsH,UAAmC,OAAfpH,EAAEoH,SADbtH,EAEXE,GAIAqX,EAAU,CAACrX,EAAGF,EAAG7L,KACrB,IAAK+L,EACH,OAAOF,EAET,MAAMiH,EAAOsH,EAAQrO,EAAEmH,OAAQrH,EAAEqH,OAAQlT,GACzC,OAAO8S,EAAO,EAAI/G,EACd+G,EAAO,GACQ,MAAfjH,EAAEsH,UAAmC,OAAfpH,EAAEoH,SADbtH,EAEXE,GAGNoI,EAAOC,QA5MQ,CAACsO,EAAKC,EAAK3iB,EAAU,CAAC,KACnC,GAAI0iB,IAAQC,EACV,OAAO,EAGTD,EAAM,IAAI3O,EAAM2O,EAAK1iB,GACrB2iB,EAAM,IAAI5O,EAAM4O,EAAK3iB,GACrB,IAAIwjB,GAAa,EAEjBC,EAAO,IAAK,MAAMC,KAAahB,EAAIzW,IAAK,CACtC,IAAK,MAAM0X,KAAahB,EAAI1W,IAAK,CAC/B,MAAM2X,EAAQnB,EAAaiB,EAAWC,EAAW3jB,GAEjD,GADAwjB,EAAaA,GAAwB,OAAVI,EACvBA,EACF,SAASH,CAEb,CAKA,GAAID,EACF,OAAO,CAEX,CACA,OAAO,E,uBCnET,MAAMzP,EAAQ,EAAQ,MAOtBI,EAAOC,QAJe,CAACG,EAAOvU,IAC5B,IAAI+T,EAAMQ,EAAOvU,GAASiM,IACvBhC,KAAI6I,GAAQA,EAAK7I,KAAIrM,GAAKA,EAAE2G,QAAO3B,KAAK,KAAKqQ,OAAO7D,MAAM,M,uBCL/D,MAAM2E,EAAQ,EAAQ,MAUtBI,EAAOC,QATY,CAACG,EAAOvU,KACzB,IAGE,OAAO,IAAI+T,EAAMQ,EAAOvU,GAASuU,OAAS,GAC5C,CAAE,MAAOX,GACP,OAAO,IACT,E","sources":["webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/Errors.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/Subject.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HubConnection.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/AbortController.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/ILogger.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/ITransport.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/Loggers.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","webpack://tgstation-server-control-panel/./node_modules/@microsoft/signalr/dist/esm/Utils.js","webpack://tgstation-server-control-panel/./node_modules/semver/classes/comparator.js","webpack://tgstation-server-control-panel/./node_modules/semver/classes/range.js","webpack://tgstation-server-control-panel/./node_modules/semver/classes/semver.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/clean.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/cmp.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/coerce.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/compare-build.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/compare-loose.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/compare.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/diff.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/eq.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/gt.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/gte.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/inc.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/lt.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/lte.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/major.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/minor.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/neq.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/parse.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/patch.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/prerelease.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/rcompare.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/rsort.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/satisfies.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/sort.js","webpack://tgstation-server-control-panel/./node_modules/semver/functions/valid.js","webpack://tgstation-server-control-panel/./node_modules/semver/index.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/constants.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/debug.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/identifiers.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/lrucache.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/parse-options.js","webpack://tgstation-server-control-panel/./node_modules/semver/internal/re.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/gtr.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/intersects.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/ltr.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/max-satisfying.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/min-satisfying.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/min-version.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/outside.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/simplify.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/subset.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/to-comparators.js","webpack://tgstation-server-control-panel/./node_modules/semver/ranges/valid.js"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class MessageBuffer {\r\n    constructor(protocol, connection, bufferSize) {\r\n        this._bufferSize = 100000;\r\n        this._messages = [];\r\n        this._totalMessageCount = 0;\r\n        this._waitForSequenceMessage = false;\r\n        // Message IDs start at 1 and always increment by 1\r\n        this._nextReceivingSequenceId = 1;\r\n        this._latestReceivedSequenceId = 0;\r\n        this._bufferedByteCount = 0;\r\n        this._reconnectInProgress = false;\r\n        this._protocol = protocol;\r\n        this._connection = connection;\r\n        this._bufferSize = bufferSize;\r\n    }\r\n    async _send(message) {\r\n        const serializedMessage = this._protocol.writeMessage(message);\r\n        let backpressurePromise = Promise.resolve();\r\n        // Only count invocation messages. Acks, pings, etc. don't need to be resent on reconnect\r\n        if (this._isInvocationMessage(message)) {\r\n            this._totalMessageCount++;\r\n            let backpressurePromiseResolver = () => { };\r\n            let backpressurePromiseRejector = () => { };\r\n            if (isArrayBuffer(serializedMessage)) {\r\n                this._bufferedByteCount += serializedMessage.byteLength;\r\n            }\r\n            else {\r\n                this._bufferedByteCount += serializedMessage.length;\r\n            }\r\n            if (this._bufferedByteCount >= this._bufferSize) {\r\n                backpressurePromise = new Promise((resolve, reject) => {\r\n                    backpressurePromiseResolver = resolve;\r\n                    backpressurePromiseRejector = reject;\r\n                });\r\n            }\r\n            this._messages.push(new BufferedItem(serializedMessage, this._totalMessageCount, backpressurePromiseResolver, backpressurePromiseRejector));\r\n        }\r\n        try {\r\n            // If this is set it means we are reconnecting or resending\r\n            // We don't want to send on a disconnected connection\r\n            // And we don't want to send if resend is running since that would mean sending\r\n            // this message twice\r\n            if (!this._reconnectInProgress) {\r\n                await this._connection.send(serializedMessage);\r\n            }\r\n        }\r\n        catch {\r\n            this._disconnected();\r\n        }\r\n        await backpressurePromise;\r\n    }\r\n    _ack(ackMessage) {\r\n        let newestAckedMessage = -1;\r\n        // Find index of newest message being acked\r\n        for (let index = 0; index < this._messages.length; index++) {\r\n            const element = this._messages[index];\r\n            if (element._id <= ackMessage.sequenceId) {\r\n                newestAckedMessage = index;\r\n                if (isArrayBuffer(element._message)) {\r\n                    this._bufferedByteCount -= element._message.byteLength;\r\n                }\r\n                else {\r\n                    this._bufferedByteCount -= element._message.length;\r\n                }\r\n                // resolve items that have already been sent and acked\r\n                element._resolver();\r\n            }\r\n            else if (this._bufferedByteCount < this._bufferSize) {\r\n                // resolve items that now fall under the buffer limit but haven't been acked\r\n                element._resolver();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (newestAckedMessage !== -1) {\r\n            // We're removing everything including the message pointed to, so add 1\r\n            this._messages = this._messages.slice(newestAckedMessage + 1);\r\n        }\r\n    }\r\n    _shouldProcessMessage(message) {\r\n        if (this._waitForSequenceMessage) {\r\n            if (message.type !== MessageType.Sequence) {\r\n                return false;\r\n            }\r\n            else {\r\n                this._waitForSequenceMessage = false;\r\n                return true;\r\n            }\r\n        }\r\n        // No special processing for acks, pings, etc.\r\n        if (!this._isInvocationMessage(message)) {\r\n            return true;\r\n        }\r\n        const currentId = this._nextReceivingSequenceId;\r\n        this._nextReceivingSequenceId++;\r\n        if (currentId <= this._latestReceivedSequenceId) {\r\n            if (currentId === this._latestReceivedSequenceId) {\r\n                // Should only hit this if we just reconnected and the server is sending\r\n                // Messages it has buffered, which would mean it hasn't seen an Ack for these messages\r\n                this._ackTimer();\r\n            }\r\n            // Ignore, this is a duplicate message\r\n            return false;\r\n        }\r\n        this._latestReceivedSequenceId = currentId;\r\n        // Only start the timer for sending an Ack message when we have a message to ack. This also conveniently solves\r\n        // timer throttling by not having a recursive timer, and by starting the timer via a network call (recv)\r\n        this._ackTimer();\r\n        return true;\r\n    }\r\n    _resetSequence(message) {\r\n        if (message.sequenceId > this._nextReceivingSequenceId) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._connection.stop(new Error(\"Sequence ID greater than amount of messages we've received.\"));\r\n            return;\r\n        }\r\n        this._nextReceivingSequenceId = message.sequenceId;\r\n    }\r\n    _disconnected() {\r\n        this._reconnectInProgress = true;\r\n        this._waitForSequenceMessage = true;\r\n    }\r\n    async _resend() {\r\n        const sequenceId = this._messages.length !== 0\r\n            ? this._messages[0]._id\r\n            : this._totalMessageCount + 1;\r\n        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Sequence, sequenceId }));\r\n        // Get a local variable to the _messages, just in case messages are acked while resending\r\n        // Which would slice the _messages array (which creates a new copy)\r\n        const messages = this._messages;\r\n        for (const element of messages) {\r\n            await this._connection.send(element._message);\r\n        }\r\n        this._reconnectInProgress = false;\r\n    }\r\n    _dispose(error) {\r\n        error !== null && error !== void 0 ? error : (error = new Error(\"Unable to reconnect to server.\"));\r\n        // Unblock backpressure if any\r\n        for (const element of this._messages) {\r\n            element._rejector(error);\r\n        }\r\n    }\r\n    _isInvocationMessage(message) {\r\n        // There is no way to check if something implements an interface.\r\n        // So we individually check the messages in a switch statement.\r\n        // To make sure we don't miss any message types we rely on the compiler\r\n        // seeing the function returns a value and it will do the\r\n        // exhaustive check for us on the switch statement, since we don't use 'case default'\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n            case MessageType.StreamItem:\r\n            case MessageType.Completion:\r\n            case MessageType.StreamInvocation:\r\n            case MessageType.CancelInvocation:\r\n                return true;\r\n            case MessageType.Close:\r\n            case MessageType.Sequence:\r\n            case MessageType.Ping:\r\n            case MessageType.Ack:\r\n                return false;\r\n        }\r\n    }\r\n    _ackTimer() {\r\n        if (this._ackTimerHandle === undefined) {\r\n            this._ackTimerHandle = setTimeout(async () => {\r\n                try {\r\n                    if (!this._reconnectInProgress) {\r\n                        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Ack, sequenceId: this._latestReceivedSequenceId }));\r\n                    }\r\n                    // Ignore errors, that means the connection is closed and we don't care about the Ack message anymore.\r\n                }\r\n                catch { }\r\n                clearTimeout(this._ackTimerHandle);\r\n                this._ackTimerHandle = undefined;\r\n                // 1 second delay so we don't spam Ack messages if there are many messages being received at once.\r\n            }, 1000);\r\n        }\r\n    }\r\n}\r\nclass BufferedItem {\r\n    constructor(message, id, resolver, rejector) {\r\n        this._message = message;\r\n        this._id = id;\r\n        this._resolver = resolver;\r\n        this._rejector = rejector;\r\n    }\r\n}\r\n//# sourceMappingURL=MessageBuffer.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nimport { MessageBuffer } from \"./MessageBuffer\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\nconst DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE = 100000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize);\r\n    }\r\n    constructor(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds !== null && serverTimeoutInMilliseconds !== void 0 ? serverTimeoutInMilliseconds : DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds !== null && keepAliveIntervalInMilliseconds !== void 0 ? keepAliveIntervalInMilliseconds : DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._statefulReconnectBufferSize = statefulReconnectBufferSize !== null && statefulReconnectBufferSize !== void 0 ? statefulReconnectBufferSize : DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            let version = this._protocol.version;\r\n            if (!this.connection.features.reconnect) {\r\n                // Stateful Reconnect starts with HubProtocol version 2, newer clients connecting to older servers will fail to connect due to\r\n                // the handshake only supporting version 1, so we will try to send version 1 during the handshake to keep old servers working.\r\n                version = 1;\r\n            }\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            const useStatefulReconnect = this.connection.features.reconnect || false;\r\n            if (useStatefulReconnect) {\r\n                this._messageBuffer = new MessageBuffer(this._protocol, this.connection, this._statefulReconnectBufferSize);\r\n                this.connection.features.disconnected = this._messageBuffer._disconnected.bind(this._messageBuffer);\r\n                this.connection.features.resend = () => {\r\n                    if (this._messageBuffer) {\r\n                        return this._messageBuffer._resend();\r\n                    }\r\n                };\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this.connection.features.reconnect = false;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        const state = this._connectionState;\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        if (state === HubConnectionState.Connected) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._sendCloseMessage();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    async _sendCloseMessage() {\r\n        try {\r\n            await this._sendWithProtocol(this._createCloseMessage());\r\n        }\r\n        catch {\r\n            // Ignore, this is a best effort attempt to let the server know the client closed gracefully.\r\n        }\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        if (this._messageBuffer) {\r\n            return this._messageBuffer._send(message);\r\n        }\r\n        else {\r\n            return this._sendMessage(this._protocol.writeMessage(message));\r\n        }\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                if (this._messageBuffer && !this._messageBuffer._shouldProcessMessage(message)) {\r\n                    // Don't process the message, we are either waiting for a SequenceMessage or received a duplicate message\r\n                    continue;\r\n                }\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this._invokeClientMethod(message)\r\n                            .catch((e) => {\r\n                            this._logger.log(LogLevel.Error, `Invoke client method threw error: ${getErrorString(e)}`);\r\n                        });\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ack:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._ack(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Sequence:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._resetSequence(message);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (this._messageBuffer) {\r\n                this._messageBuffer._dispose(error !== null && error !== void 0 ? error : new Error(\"Connection closed.\"));\r\n                this._messageBuffer = undefined;\r\n            }\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n    _createCloseMessage() {\r\n        return { type: MessageType.Close };\r\n    }\r\n}\r\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        // Node added a fetch implementation to the global scope starting in v18.\r\n        // We need to add a cookie jar in node to be able to share cookies with WebSocket\r\n        if (typeof fetch === \"undefined\" || Platform.isNode) {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            if (typeof fetch === \"undefined\") {\r\n                this._fetchType = requireFunc(\"node-fetch\");\r\n            }\r\n            else {\r\n                // Use fetch from Node if available\r\n                this._fetchType = fetch;\r\n            }\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XhrHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            let error;\r\n            try {\r\n                await this._httpClient.delete(this._url, deleteOptions);\r\n            }\r\n            catch (err) {\r\n                error = err;\r\n            }\r\n            if (error) {\r\n                if (error instanceof HttpError) {\r\n                    if (error.statusCode === 404) {\r\n                        this._logger.log(LogLevel.Trace, \"(LongPolling transport) A 404 response was returned from sending a DELETE request.\");\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Error sending a DELETE request: ${error}`);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* ConnectionState.Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* ConnectionState.Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */ || this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* ConnectionState.Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            if (negotiateResponse.useStatefulReconnect && this._options._useStatefulReconnect !== true) {\r\n                return Promise.reject(new FailedToNegotiateWithServerError(\"Client didn't negotiate Stateful Reconnect but the server did.\"));\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, (negotiate === null || negotiate === void 0 ? void 0 : negotiate.useStatefulReconnect) === true);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* ConnectionState.Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        if (this.features.reconnect) {\r\n            this.transport.onclose = async (e) => {\r\n                let callStop = false;\r\n                if (this.features.reconnect) {\r\n                    try {\r\n                        this.features.disconnected();\r\n                        await this.transport.connect(url, transferFormat);\r\n                        await this.features.resend();\r\n                    }\r\n                    catch {\r\n                        callStop = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._stopConnection(e);\r\n                    return;\r\n                }\r\n                if (callStop) {\r\n                    this._stopConnection(e);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            this.transport.onclose = (e) => this._stopConnection(e);\r\n        }\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, useStatefulReconnect) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            this.features.reconnect = transport === HttpTransportType.WebSockets ? useStatefulReconnect : undefined;\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const negotiateUrl = new URL(url);\r\n        if (negotiateUrl.pathname.endsWith('/')) {\r\n            negotiateUrl.pathname += \"negotiate\";\r\n        }\r\n        else {\r\n            negotiateUrl.pathname += \"/negotiate\";\r\n        }\r\n        const searchParams = new URLSearchParams(negotiateUrl.searchParams);\r\n        if (!searchParams.has(\"negotiateVersion\")) {\r\n            searchParams.append(\"negotiateVersion\", this._negotiateVersion.toString());\r\n        }\r\n        if (searchParams.has(\"useStatefulReconnect\")) {\r\n            if (searchParams.get(\"useStatefulReconnect\") === \"true\") {\r\n                this._options._useStatefulReconnect = true;\r\n            }\r\n        }\r\n        else if (this._options._useStatefulReconnect === true) {\r\n            searchParams.append(\"useStatefulReconnect\", \"true\");\r\n        }\r\n        negotiateUrl.search = searchParams.toString();\r\n        return negotiateUrl.toString();\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 2;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                case MessageType.Ack:\r\n                    this._isAckMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Sequence:\r\n                    this._isSequenceMessage(parsedMessage);\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _isAckMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Ack message.\");\r\n        }\r\n    }\r\n    _isSequenceMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Sequence message.\");\r\n        }\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withServerTimeout(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._serverTimeoutInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withKeepAliveInterval(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._keepAliveIntervalInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Enables and configures options for the Stateful Reconnect feature.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withStatefulReconnect(options) {\r\n        if (this.httpConnectionOptions === undefined) {\r\n            this.httpConnectionOptions = {};\r\n        }\r\n        this.httpConnectionOptions._useStatefulReconnect = true;\r\n        this._statefulReconnectBufferSize = options === null || options === void 0 ? void 0 : options.bufferSize;\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy, this._serverTimeoutInMilliseconds, this._keepAliveIntervalInMilliseconds, this._statefulReconnectBufferSize);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n    MessageType[MessageType[\"Ack\"] = 8] = \"Ack\";\r\n    MessageType[MessageType[\"Sequence\"] = 9] = \"Sequence\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"8.0.7\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n//# sourceMappingURL=Utils.js.map","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n"],"names":["HttpError","Error","constructor","errorMessage","statusCode","trueProto","prototype","super","this","__proto__","TimeoutError","AbortError","UnsupportedTransportError","message","transport","errorType","DisabledTransportError","FailedToStartTransportError","FailedToNegotiateWithServerError","AggregateErrors","innerErrors","HandshakeProtocol","writeHandshakeRequest","handshakeRequest","TextMessageFormat","write","JSON","stringify","parseHandshakeResponse","data","messageData","remainingData","binaryData","Uint8Array","separatorIndex","indexOf","RecordSeparatorCode","responseLength","String","fromCharCode","apply","Array","slice","call","byteLength","buffer","textData","RecordSeparator","substring","length","messages","parse","response","type","Subject","observers","next","item","observer","error","err","complete","subscribe","push","MessageBuffer","protocol","connection","bufferSize","_bufferSize","_messages","_totalMessageCount","_waitForSequenceMessage","_nextReceivingSequenceId","_latestReceivedSequenceId","_bufferedByteCount","_reconnectInProgress","_protocol","_connection","_send","serializedMessage","writeMessage","backpressurePromise","Promise","resolve","_isInvocationMessage","backpressurePromiseResolver","backpressurePromiseRejector","reject","BufferedItem","send","_disconnected","_ack","ackMessage","newestAckedMessage","index","element","_id","sequenceId","_message","_resolver","_shouldProcessMessage","Sequence","currentId","_ackTimer","_resetSequence","stop","_resend","_dispose","_rejector","Invocation","StreamItem","Completion","StreamInvocation","CancelInvocation","Close","Ping","Ack","undefined","_ackTimerHandle","setTimeout","async","clearTimeout","id","resolver","rejector","HubConnectionState","HubConnection","create","logger","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","statefulReconnectBufferSize","_nextKeepAlive","_freezeEventListener","_logger","log","Warning","isRequired","_statefulReconnectBufferSize","_reconnectPolicy","_handshakeProtocol","onreceive","_processIncomingData","onclose","_connectionClosed","_callbacks","_methods","_closedCallbacks","_reconnectingCallbacks","_reconnectedCallbacks","_invocationId","_receivedHandshakeResponse","_connectionState","Disconnected","_connectionStarted","_cachedPingMessage","state","connectionId","baseUrl","url","Reconnecting","start","_startPromise","_startWithStateTransitions","Connecting","Debug","_startInternal","isBrowser","window","document","addEventListener","Connected","e","_stopDuringStartError","handshakePromise","_handshakeResolver","_handshakeRejecter","transferFormat","version","features","reconnect","name","_sendMessage","Information","_cleanupTimeout","_resetTimeoutPeriod","_resetKeepAliveInterval","_messageBuffer","disconnected","bind","resend","inherentKeepAlive","_cleanupPingTimer","startPromise","_stopPromise","_stopInternal","Disconnecting","_reconnectDelayHandle","_completeClose","_sendCloseMessage","_sendWithProtocol","_createCloseMessage","stream","methodName","args","streams","streamIds","_replaceStreamingParams","invocationDescriptor","_createStreamInvocation","promiseQueue","subject","cancelCallback","cancelInvocation","_createCancelInvocation","invocationId","then","invocationEvent","catch","_launchStreams","sendPromise","_createInvocation","invoke","result","on","newMethod","toLowerCase","off","method","handlers","removeIdx","splice","callback","onreconnecting","onreconnected","_processHandshakeResponse","parseMessages","_invokeClientMethod","allowReconnect","responseMessage","Date","getTime","_timeoutHandle","serverTimeout","_pingServerHandle","nextPing","invocationMessage","target","methods","_createCompletionMessage","methodsCopy","expectsResponse","res","exception","completionMessage","m","prevRes","arguments","_cancelCallbacksWithError","_reconnect","removeEventListener","forEach","c","reconnectStartTime","now","previousReconnectAttempts","retryError","nextRetryDelay","_getNextRetryDelay","toString","previousRetryCount","elapsedMilliseconds","retryReason","nextRetryDelayInMilliseconds","callbacks","Object","keys","key","nonblocking","streamId","_createStreamItemMessage","i","argument","_isObservable","arg","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","_retryDelays","retryContext","HeaderNames","Authorization","Cookie","HttpResponse","statusText","content","HttpClient","get","options","post","getCookieString","AccessTokenHttpClient","innerClient","accessTokenFactory","_innerClient","_accessTokenFactory","request","allowRetry","_accessToken","_setAuthorizationHeader","headers","FetchHttpClient","fetch","isNode","requireFunc","_jar","CookieJar","_fetchType","AbortController","_abortControllerType","abortSignal","aborted","abortController","onabort","abort","timeoutId","timeout","msTimeout","body","cache","credentials","withCredentials","mode","redirect","signal","ok","deserializeContent","status","responseType","payload","cookies","getCookies","join","arrayBuffer","text","XhrHttpClient","xhr","XMLHttpRequest","open","setRequestHeader","header","onload","responseText","onerror","ontimeout","DefaultHttpClient","_httpClient","_isAborted","LongPollingTransport","pollAborted","_pollAbort","httpClient","_options","_running","connect","isIn","_url","Trace","Binary","value","pollOptions","pollUrl","_closeError","_receiving","_poll","logMessageContent","_raiseOnClose","deleteOptions","delete","logMessage","ServerSentEventsTransport","accessToken","encodeURIComponent","eventSource","opened","Text","isWebWorker","EventSource","onmessage","_close","onopen","_eventSource","close","WebSocketTransport","webSocketConstructor","_logMessageContent","_webSocketConstructor","_headers","token","webSocket","replace","isReactNative","binaryType","_event","_webSocket","event","ErrorEvent","readyState","OPEN","_isCloseEvent","wasClean","code","reason","HttpConnection","_stopPromiseResolver","_negotiateVersion","_resolveUrl","webSocketModule","eventSourceModule","WebSocket","_startInternalPromise","_sendQueue","TransportSendQueue","_stopError","_stopConnection","skipNegotiation","WebSockets","_constructTransport","_startTransport","negotiateResponse","redirects","_getNegotiationResponse","ProtocolVersion","_createTransport","negotiateUrl","_resolveNegotiateUrl","negotiateVersion","connectionToken","useStatefulReconnect","_useStatefulReconnect","_createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","_isITransport","transportExceptions","transports","availableTransports","negotiate","endpoint","transportOrError","_resolveTransportOrError","ex","ServerSentEvents","LongPolling","callStop","actualTransport","transportMatches","transferFormats","map","s","lastIndexOf","aTag","createElement","href","URL","pathname","endsWith","searchParams","URLSearchParams","has","append","search","_transport","_buffer","_executing","_sendBufferedData","PromiseSource","_transportResult","_sendLoopPromise","_sendLoop","_bufferData","promise","transportResult","_concatBuffers","arrayBuffers","totalLength","b","reduce","a","offset","set","_rejecter","JsonHubProtocol","input","instance","hubMessages","parsedMessage","_isStreamItemMessage","_isCompletionMessage","_isAckMessage","_isSequenceMessage","_assertNotEmptyString","LogLevelNameMapping","trace","debug","info","information","warn","warning","critical","Critical","none","None","HubConnectionBuilder","configureLogging","logging","logLevel","mapping","parseLogLevel","withUrl","transportTypeOrOptions","isNotEmpty","httpConnectionOptions","withHubProtocol","withAutomaticReconnect","retryDelaysOrReconnectPolicy","isArray","withServerTimeout","milliseconds","_serverTimeoutInMilliseconds","withKeepAliveInterval","_keepAliveIntervalInMilliseconds","withStatefulReconnect","build","MessageType","LogLevel","HttpTransportType","TransferFormat","NullLogger","_logLevel","output","split","pop","VERSION","Arg","val","match","values","Platform","self","process","release","getDataDetail","includeContent","detail","isArrayBuffer","view","str","num","substr","formatArrayBuffer","ArrayBuffer","sendMessage","transportName","getUserAgentHeader","createLogger","ConsoleLogger","SubjectSubscription","_subject","_observer","dispose","_","minimumLogLevel","_minLevel","out","console","msg","toISOString","userAgentHeaderName","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","os","runtime","runtimeVersion","userAgent","majorAndMinor","platform","versions","node","getErrorString","stack","getGlobalThis","globalThis","g","ANY","Symbol","Comparator","comp","parseOptions","loose","trim","semver","operator","r","re","t","COMPARATORLOOSE","COMPARATOR","TypeError","SemVer","test","er","cmp","intersects","Range","includePrerelease","startsWith","includes","module","exports","safeRe","SPACE_CHARACTERS","range","raw","formatted","parseRange","filter","first","isNullSet","isAny","comps","k","format","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","compare","other","compareMain","comparePre","compareBuild","inc","identifier","identifierBase","base","Number","isNaN","eq","neq","gt","gte","lt","lte","op","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","exec","lastIndex","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","list","sort","v","internalRe","constants","identifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","env","NODE_DEBUG","numeric","anum","bnum","max","firstKey","looseOption","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","prev","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub"],"sourceRoot":""}