"use strict";(self.webpackChunktgstation_server_control_panel=self.webpackChunktgstation_server_control_panel||[]).push([[784],{6795:function(e,t,r){r.d(t,{Q:function(){return l}});var n=r(6540),o=r(8785),a=r.n(o),s=r(8437);function i(e){return n.createElement(a(),{src:e.obj,name:"JSON",theme:"tube",iconStyle:"triangle",collapsed:!0,displayDataTypes:!1})}function l(e){return s.Ay.showjson.value?n.createElement("div",{className:"text-left"},n.createElement(i,{obj:e.obj})):n.createElement(n.Fragment,null)}},784:function(e,t,r){r.r(t),r.d(t,{default:function(){return N}});var n=r(6188),o=r(6784),a=r(6540),s=r(1274),i=r(5615),l=r(1105),c=r(1364),u=r(5192),d=r(5038),m=r(3524),p=r(8065),h=r(5331),g=r.n(h),w=r(4180),A=r(9589),f=r(6670),v=r.n(f),y=r(3490),E=r(2576),b=r(4173),C=r(5301),R=r(3728),O=r(1552),V=r(7864),I=r(4580),P=r(4118),S=r(664);let k=function(e){return e.Configuration="Configuration",e.Core="Core",e.HostWatchdog="HostWatchdog",e.WebControlPanel="WebControlPanel",e.HttpApi="HttpApi",e.DreamMakerApi="DreamMakerApi",e.InteropApi="InteropApi",e.NugetCommon="NugetCommon",e.NugetApi="NugetApi",e.NugetClient="NugetClient",e}({});var $=r(7567),j=r(6795),_=r(7255);function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)({}).hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},U.apply(null,arguments)}class H extends a.Component{constructor(e){super(e),this.loadNotes=this.loadNotes.bind(this),this.updateServer=this.updateServer.bind(this),this.state={changelog:null,versions:[],errors:[],loading:!0,gitHubOwner:null,gitHubRepo:null}}componentDidMount(){(async()=>{await this.loadVersions(),this.setState({loading:!1})})()}componentWillUnmount(){this.state.timer&&window.clearInterval(this.state.timer)}addError(e){this.setState((t=>{const r=Array.from(t.errors);return r.push(e),{errors:r}}))}async loadVersions(){if(!(0,P.CM)((0,P.u)(this.context.user),E.O4.ChangeVersion))return;const e=await y.A.getAdminInfo();switch(e.code){case C.s.ERROR:return this.addError(e.error);case C.s.OK:{const t=e.payload.trackedRepositoryUrl,r=/https?:\/\/(github\.com)\/(.*?)\/(.*)/.exec(t);if(!r)return this.addError(new b.Ay(b.O4.APP_FAIL,{jsError:Error(`Unknown repository url format: ${t}`)}));if("github.com"!==r[1])return void this.setState({versions:[{body:"Updates unavailable to non github repos",version:"Updates unavailable to non github repos",current:!0,old:!0}]});this.setState({gitHubOwner:r[2],gitHubRepo:r[3]});const n=this.loadChangelog(r[2],r[3]),o=await I.A.getVersions({owner:r[2],repo:r[3],current:this.context.serverInfo.version,all:!!this.props.match.params.all});switch(console.log("Version info: ",o),o.code){case C.s.ERROR:return this.addError(o.error);case C.s.OK:{const e=await n;this.setState({changelog:e,versions:o.payload})}}}}}async loadChangelog(e,t){const r=await I.A.getFile(e,t,"changelog.yml","gh-pages");switch(r.code){case C.s.ERROR:this.addError(r.error);break;case C.s.OK:try{const e=window.atob(r.payload);return v().parse(e)}catch{this.addError(new b.Ay(b.O4.BAD_YML,{void:!0}))}}return null}loadNotes(){for(const e of this.state.versions){if(e.version!==this.state.selectedOption)continue;const t=window.setInterval((()=>{this.setState((e=>void 0===e.secondsLeft||null===e.secondsLeft?e:1===e.secondsLeft?(window.clearInterval(e.timer),{timer:null,secondsLeft:null}):{secondsLeft:e.secondsLeft-1}))}),1e3);return void this.setState({selectedVersion:e,timer:t,secondsLeft:10})}}async uploadVersion(){const e=new Promise((e=>{const t=document.createElement("input");t.type="file",t.onchange=t=>{const r=t.target?.files;e(r?r[0]:null)},t.click()})),t=await e;if(!t)return;if(!t.name.toLowerCase().endsWith(".zip"))return void alert("Invalid zipfile!");const r=await t.arrayBuffer(),n=prompt("Enter the TGS version semver:");if(!n)return;const o=new A.SemVer(n),a=`${o.major}.${o.minor}.${o.patch}`;a==n?confirm(`JUST WHAT DO YOU THINK YOU'RE DOING!? This is your only and final warning: Uploading a TGS Version .zip that is improperly formatted or that does not match the version you just entered (${a}) can brick your installation! Think carefully before pressing OK to continue.`)&&await this.serverUpdated(y.A.uploadVersion(a,r)):alert("Invalid semver!")}async updateServer(){if(!this.state.selectedOption)return console.error("Attempted to update server to a no version"),void this.setState({selectedVersion:void 0});await this.serverUpdated(y.A.updateServer(this.state.selectedOption))}async serverUpdated(e){const t=await e;switch(t.code){case C.s.ERROR:return void this.addError(t.error);case C.s.OK:}R.A.autoLogin=!1,window.setInterval((async()=>{if((await O.A.getCurrentUser(!0)).code===C.s.ERROR)window.location.reload()}),2e3),this.setState({updating:!0})}buildVersionDiffFromChangelog(e){const t=this.state.changelog;if(!t)return null;const r=this.context.serverInfo.version,n=new A.SemVer(e),o=new A.SemVer(r);let a="";const s=t.Components[k.Core].find((t=>t.Version==e)).ComponentVersions;let i,l;a+=`Please refer to the [README](https://github.com/tgstation/tgstation-server#setup) for setup instructions. Full changelog can be found [here](https://raw.githubusercontent.com/tgstation/tgstation-server/gh-pages/changelog.yml).\n\n#### Component Versions\nCore: ${e}\nConfiguration: ${s.Configuration}\nHTTP API: ${s.HttpApi}\nDreamMaker API: ${s.DreamMakerApi} (Interop: ${s.InteropApi})\n[Web Control Panel](https://github.com/tgstation/tgstation-server-webpanel): ${s.WebControlPanel}\nHost Watchdog: ${s.HostWatchdog}\n\n`,(0,A.lt)(n,o)?(a+="## _The version you are switching to is below the current version._\n## _The following changes will be **un**-applied!_",i=e,l=r):(i=r,l=e);const c=new A.SemVer(i),u=new A.SemVer(l),d=t.Components[k.Core].filter((e=>{const t=new A.SemVer(e.Version);return(0,A.gte)(t,c)&&(0,A.lte)(t,u)})).sort(((e,t)=>new A.SemVer(e.Version).compare(t.Version))).reverse(),m=[];for(let e=0;e<d.length-1;++e){const r=new Map;m.push(r);const n=d[e],o=d[e+1];r.set(k.Core,n),Object.keys(n.ComponentVersions).forEach((e=>{const a=e,s=n.ComponentVersions[a];if(!s)return;const i=new A.SemVer(s);if(a==k.Core||a==k.NugetClient||a==k.NugetApi||a==k.NugetCommon)return;const l=new A.SemVer(o.ComponentVersions[a]),c=t.Components[a].filter((e=>{const t=new A.SemVer(e.Version);return t>l&&t<=i})).flatMap((e=>e.Changes)).sort(((e,t)=>e.PullRequest-t.PullRequest)),u={Version:s,Changes:c};c.length>0&&r.set(a,u)}))}return m.forEach((e=>{a+="\n\n";const t=e.get(k.Core),r=new A.SemVer(t.Version);r.patch>0?a+=`## Patch ${r.patch}`:r.minor>0?a+=`# Update ${r.minor}.0`:a+=`# **Major Update ${r.major}.0.0**`;for(const t in k){const r=t,n=e.get(r);!n||0==n.Changes?.length&&r!=k.Configuration||(a+="\n\n#### ",r==k.Configuration&&(a+="**"),a+=this.componentDisplayName(r),r==k.Configuration&&(a+=`\n- **The new configuration version is \`${n.Version}\` Please update your \`General:ConfigVersion\` setting appropriately.**`),n.Changes?.forEach((e=>e.Descriptions.forEach((t=>{a+=`\n- ${t} ([#${e.PullRequest}](https://github.com/${this.state.gitHubOwner}/${this.state.gitHubRepo}/pull/${e.PullRequest})) [@${e.Author}](https://github.com/${e.Author})`})))))}})),a}componentDisplayName(e){const t=e;switch(t){case k.HttpApi:return"HTTP API";case k.InteropApi:return"Interop API";case k.Configuration:return"**Configuration**";case k.DreamMakerApi:return"DreamMaker API";case k.HostWatchdog:return"Host Watchdog (Requires reinstall to apply)";case k.Core:return"Core";case k.WebControlPanel:return"Web Control Panel";default:throw new Error("Unknown component: "+t)}}render(){if(this.state.updating)return a.createElement(_.default,{text:"loading.updating"});if(this.state.loading)return a.createElement(_.default,{text:"loading.version"});const e=e=>{this.setState({selectedOption:e.target.value})},t=(0,P.u)(this.context.user),r=(0,P.CM)(t,E.O4.ChangeVersion),h=(0,P.CM)(t,E.O4.UploadVersion),w=this.state.selectedVersion?(this.buildVersionDiffFromChangelog(this.state.selectedVersion.version)??this.state.selectedVersion.body).replaceAll("\r","").replaceAll("\n","\n\n"):null,f=new A.SemVer(this.context.serverInfo.version),v=this.state.selectedVersion&&new A.SemVer(this.state.selectedVersion.version).major!=f.major,y=()=>this.setState({warnedAboutMajorUpdates:!0}),b="number"==typeof this.state.secondsLeft;return a.createElement(a.Fragment,null,a.createElement(j.Q,{obj:this.state.versions}),a.createElement("div",{className:"text-center"},this.state.errors.map(((e,t)=>{if(e)return a.createElement($.Ay,{key:t,error:e,onClose:()=>this.setState((e=>{const r=Array.from(e.errors);return r[t]=void 0,{errors:r}}))})}))),this.state.selectedVersion?a.createElement(a.Fragment,null,a.createElement(s.A,{centered:!0,show:v&&!this.state.warnedAboutMajorUpdates,onHide:y,size:"lg"},a.createElement(s.A.Header,{closeButton:!0},a.createElement(s.A.Title,null,a.createElement(p.A,{id:"view.admin.update.major_warn.title"}))),a.createElement(s.A.Body,{className:"text-danger pb-0"},a.createElement(p.A,{id:"view.admin.update.major_warn.body",values:{currentMajor:f.major,targetMajor:new A.SemVer(this.state.selectedVersion.version).major}})),a.createElement(s.A.Footer,null,a.createElement(i.A,{variant:"secondary",onClick:y},a.createElement(p.A,{id:"generic.close"})))),a.createElement("div",{className:"text-center"},a.createElement("h3",null,a.createElement(p.A,{id:"view.admin.update.releasenotes"})),a.createElement("hr",null)),a.createElement(g(),null,w),a.createElement("div",{className:"text-center"},a.createElement("hr",null),a.createElement(i.A,{className:"mr-3",onClick:()=>this.setState({selectedVersion:void 0})},a.createElement(p.A,{id:"generic.goback"})),a.createElement(d.A,{overlay:a.createElement(m.A,{id:"timing-tooltip"},a.createElement(p.A,{id:"view.admin.update.wait"})),placement:"right",show:b},a.createElement(i.A,{onClick:()=>{this.updateServer()},disabled:b},a.createElement(p.A,{id:"generic.continue"}),b?` [${this.state.secondsLeft}]`:"")))):a.createElement("div",{className:"text-center"},a.createElement("h3",{className:"mb-4"},a.createElement(p.A,{id:"view.admin.update.selectversion"})),r?a.createElement(l.A,{xs:8,md:6,className:"mx-auto"},this.state.versions.map(((t,r)=>a.createElement(u.A,{className:"mb-3",key:t.version},a.createElement(u.A.Prepend,null,a.createElement(u.A.Radio,{id:t.version,name:"version",disabled:t.current,value:t.version,checked:this.state.selectedOption===t.version,onChange:e})),a.createElement(c.A,{as:"label",htmlFor:t.version,disabled:!0},t.version,t.current?a.createElement(p.A,{id:"view.admin.update.current"}):"",0==r?a.createElement(p.A,{id:"view.admin.update.latest"}):"")))),a.createElement(i.A,{variant:"link",onClick:()=>{this.props.history.push((S.Sb.admin_update.link??S.Sb.admin_update.route)+"all/",{reload:!0})},disabled:!!this.props.match.params.all},a.createElement(p.A,{id:"view.admin.update.showall"})),a.createElement("br",null),a.createElement(i.A,{onClick:this.loadNotes,disabled:!this.state.selectedOption},a.createElement(p.A,{id:"generic.continue"}))):a.createElement("h4",null,a.createElement(p.A,{id:"view.admin.update.selectversion.deny"})),a.createElement("br",null),a.createElement(d.A,{overlay:a.createElement(m.A,{id:"create-instance-tooltip"},a.createElement(p.A,{id:"view.admin.update.upload.deny"})),show:!h&&void 0},(({ref:e,...t})=>a.createElement(i.A,U({ref:e,className:"mx-1",variant:"success",onClick:()=>{this.uploadVersion()},disabled:!h},t),a.createElement("div",null,a.createElement(o.g,{className:"mr-2",icon:n.JmV}),a.createElement(p.A,{id:"view.admin.update.upload"})))))))}}H.contextType=V.U;var N=(0,w.y)(H)},4580:function(e,t,r){r.d(t,{A:function(){return g}});var n=r(3441),o=r(8763),a=r(3437),s=r(4101),i=r(4173),l=r(5301),c=r(8437),u=r(7602);var d=e=>new Promise((t=>{setTimeout(t,e)}));async function m(e,t,r){const n=e.endpoint.merge(t,r);return c.Ay.githubtoken.value&&(n.headers.authorization=`token ${c.Ay.githubtoken.value}`),e(n)}async function p(){return c.Ay.githubtoken.value?{type:"token",tokenType:"pat",token:c.Ay.githubtoken.value}:{type:"unauthenticated"}}const h=()=>Object.assign(p.bind(null),{hook:m.bind(null)});var g=new class extends s.TypedEmitter{constructor(){super(),this.apiClient=void 0;const e=a.E.plugin(n.L,o.A);this.apiClient=new e({authStrategy:h,userAgent:"tgstation-server-control-panel/"+u.xv,baseUrl:"https://api.github.com",throttle:{onRateLimit:(e,t)=>(console.warn(`Request quota exhausted for request ${t.method} ${t.url}`),0===t.request.retryCount&&(console.log(`Retrying after ${e} seconds!`),!0)),onSecondaryRateLimit:(e,t)=>{console.warn(`Abuse detected for request ${t.method} ${t.url}`)}}})}async getLatestDefaultCommit(e,t){try{const r=await this.apiClient.repos.get({owner:e,repo:t}),n=await this.apiClient.repos.getBranch({owner:e,repo:t,branch:r.data.default_branch});return new l.A({code:l.s.OK,payload:n.data.commit.sha})}catch(e){return new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:e})})}}async getVersions({owner:e,repo:t,current:r,all:n}){let o,a=0;try{o=await this.apiClient.paginate(this.apiClient.repos.listReleases,{owner:e,repo:t},((e,t)=>e.data.reduce(((e,o)=>{const s=/tgstation-server-v([\d.]+)/.exec(o.name??"");if(!s)return e;if(parseInt(s[1][0])<4)return e;const i=s[1];let l=!1;if(i<=r){if(a>=3&&!n)return t(),e;a++,l=!0}return e.push({version:i,body:o.body??"",current:i===r,old:l}),e}),[])))}catch(e){return new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:e})})}return new l.A({code:l.s.OK,payload:o})}transformPR(e){return{number:e.number,title:e.title,author:e.user?.login??"ghost",state:e.merged_at?"merged":e.state,link:e.html_url,head:e.head.sha,tail:e.base.sha,testmergelabel:e.labels.some((e=>e.name?.toLowerCase().includes("testmerge")||e.name?.toLowerCase().includes("test merge"))),mergeable:e.mergeable}}async getPR({owner:e,repo:t,wantedPR:r}){const n=await this.apiClient.pulls.get({owner:e,repo:t,pull_number:r});return this.transformPR(n.data)}async getPRUntilMergeable({owner:e,repo:t,wantedPR:r}){for(let n=0;n<2;n++){const n=await this.getPR({owner:e,repo:t,wantedPR:r});if(null!==n.mergeable)return n;await d(5e3)}return this.getPR({owner:e,repo:t,wantedPR:r})}async getPRs({owner:e,repo:t,wantedPRs:r}){let n=[];try{const o=(await this.apiClient.paginate(this.apiClient.pulls.list,{owner:e,repo:t,state:"open"})).map((e=>e.number));for(const e of r??[])o.includes(e)||o.push(e);const a=o.map((r=>this.getPRUntilMergeable({owner:e,repo:t,wantedPR:r})));n=await Promise.all(a)}catch(e){return console.error(e),new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:e})})}return new l.A({code:l.s.OK,payload:n})}async getPRCommits({owner:e,repo:t,pr:r,wantedCommit:n}){let o,a=[];try{if(a=await this.apiClient.paginate(this.apiClient.pulls.listCommits,{owner:e,repo:t,pull_number:r.number,per_page:100},(({data:e})=>e.map((e=>({name:e.commit.message.split("\n")[0],sha:e.sha,url:e.html_url}))))),a.reverse(),n&&!a.find((e=>e.sha===n))){const r=(await this.apiClient.repos.getCommit({owner:e,repo:t,ref:n})).data;o={name:r.commit.message.split("\n")[0],sha:r.sha,url:r.html_url}}}catch(e){return console.error(e),new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:e})})}return new l.A({code:l.s.OK,payload:[a,o]})}async getFile(e,t,r,n){try{const{data:o}=await this.apiClient.repos.getContent({mediaType:{format:"base64"},owner:e,repo:t,path:r,ref:n});if(Array.isArray(o))return new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:new Error(`${r} was a directory!`)})});if("file"!==o.type)return new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:new Error(`${r} has type ${o.type}!`)})});const a=o.content;return new l.A({code:l.s.OK,payload:a})}catch(e){return console.error(e),new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:e})})}}async getDirectoryContents(e,t,r,n){try{const{data:o}=await this.apiClient.repos.getContent({owner:e,repo:t,path:r,ref:n});if(!Array.isArray(o))return new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:new Error(`${r} was not a directory!`)})});const a=[];return o.forEach((e=>a.push({path:e.path,isDirectory:"dir"==e.type}))),new l.A({code:l.s.OK,payload:a})}catch(e){return console.error(e),new l.A({code:l.s.ERROR,error:new i.Ay(i.O4.GITHUB_FAIL,{jsError:e})})}}}}}]);
//# sourceMappingURL=784.a48c6d26d136febbe1ab.bundle.js.map